{"version":3,"sources":["addon/edit/continuelist.js","addon/mode/simple.js","addon/mode/multiplex.js","mode/javascript/javascript.js","mode/clojure/clojure.js","mode/coffeescript/coffeescript.js","mode/css/css.js","mode/gfm/gfm.js","mode/markdown/markdown.js","mode/xml/xml.js","mode/haskell/haskell.js","mode/htmlmixed/htmlmixed.js","mode/lua/lua.js","mode/commonlisp/commonlisp.js","mode/pascal/pascal.js","mode/perl/perl.js","mode/php/php.js","mode/python/python.js","mode/ruby/ruby.js","mode/shell/shell.js","mode/sql/sql.js","mode/tiddlywiki/tiddlywiki.js","mode/vb/vb.js","mode/vbscript/vbscript.js","mode/velocity/velocity.js","mode/verilog/verilog.js","mode/xquery/xquery.js","mode/yaml/yaml.js","mode/go/go.js","mode/groovy/groovy.js","mode/nginx/nginx.js","mode/octave/octave.js","mode/clike/clike.js","mode/swift/swift.js","mode/r/r.js","mode/d/d.js","mode/diff/diff.js","mode/erlang/erlang.js","mode/http/http.js","mode/jade/jade.js","mode/rst/rst.js","mode/rust/rust.js","mode/jinja2/jinja2.js","mode/htmlembedded/htmlembedded.js","mode/powershell/powershell.js","mode/dockerfile/dockerfile.js","mode/jsx/jsx.js","mode/vue/vue.js","mode/nsis/nsis.js","mode/mathematica/mathematica.js","mode/tiki/tiki.js","mode/properties/properties.js","mode/livescript/livescript.js","mode/assembly/assembly.js","mode/toml/toml.js","mode/diagram/sequence.js","mode/diagram/flow.js","mode/diagram/mermaid.js","mode/mllike/mllike.js","mode/elm/elm.js","mode/asciiarmor/asciiarmor.js","mode/spreadsheet/spreadsheet.js","mode/elixir/elixir.js","mode/cmake/cmake.js","mode/cypher/cypher.js","mode/dart/dart.js","mode/django/django.js","mode/dtd/dtd.js","mode/dylan/dylan.js","mode/handlebars/handlebars.js","mode/idl/idl.js","mode/webidl/webidl.js","mode/yacas/yacas.js","mode/mbox/mbox.js","mode/vhdl/vhdl.js","mode/haxe/haxe.js","mode/stex/stex.js","mode/fortran/fortran.js","mode/protobuf/protobuf.js","mode/makefile/makefile.js","mode/tcl/tcl.js","mode/scheme/scheme.js","mode/twig/twig.js","mode/sas/sas.js","mode/pseudocode/pseudocode.js","mode/julia/julia.js","mode/stylus/stylus.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","listRE","emptyListRE","unorderedListRE","commands","newlineAndIndentContinueMarkdownList","cm","getOption","Pass","ranges","listSelections","replacements","i","length","pos","head","eolState","getStateAfter","line","inList","list","inQuote","quote","getLine","match","exec","empty","execCommand","test","replaceRange","ch","indent","after","bullet","indexOf","replace","parseInt","File","option","olStyle","replaceSelections","defineSimpleMode","name","states","defineMode","config","simpleMode","ensureState","states_","meta","hasIndentation","state","hasOwnProperty","orig","data","push","Rule","dedent","mode","startState","pending","local","localState","copyState","s","slice","stack","pers","persistentStates","next","spec","token","stream","pend","shift","text","end","tok","endToken","m","endScan","current","start","index","curState","rule","matches","sol","regex","pop","enterLocalMode","indentation","indentUnit","j","backUp","join","innerMode","textAfter","dontIndentStates","val","arr","rules","scan","dedentIfLineStart","prop","Error","toRegex","caret","flags","RegExp","ignoreCase","source","String","this","result","asToken","cmp","a","b","props","persistent","p","getMode","lState","forceEnd","multiplexingMode","outer","others","Array","prototype","call","arguments","string","pattern","from","returnEnd","found","innerActive","inner","curInner","oldContent","close","parseDelimiters","delimStyle","innerToken","innerStyle","cutOff","Infinity","other","open","outerToken","blankLine","electricChars","parserConfig","statementIndent","jsonldMode","jsonld","jsonMode","json","isTS","typescript","wordRE","wordCharacters","keywords","kw","type","style","A","B","C","D","operator","atom","if","while","with","else","do","try","finally","return","break","continue","new","delete","void","throw","debugger","var","const","let","function","catch","for","switch","case","default","in","typeof","instanceof","true","false","null","undefined","NaN","class","super","yield","export","import","extends","await","isOperatorChar","isJsonldKeyword","content","ret","tp","cont","tokenBase","tokenize","escaped","peek","eat","tokenComment","skipToEnd","expressionAllowed","inSet","readRegexp","tokenQuasi","lexical","eatWhile","word","lastType","propertyIsEnumerable","maybeEnd","brackets","findFatArrow","fatArrowAt","arrow","depth","sawSomething","charAt","bracket","atomicTypes","number","variable","regexp","jsonld-keyword","JSLexical","indented","column","align","prev","info","inScope","varname","v","localVars","cx","context","vars","marked","cc","pass","apply","register","block","newContext","registerVarScoped","Context","Var","globalVars","isModifier","defaultVars","pushcontext","pushblockcontext","popcontext","lex","pushlex","poplex","expect","wanted","exp","statement","value","vardef","parenExpr","maybeexpression","maybeelse","functiondef","forspec","className","enumdef","typeexpr","expression","maybelabel","maybeCatchBinding","afterExport","afterImport","funarg","expressionInner","expressionNoComma","noComma","body","arrowBodyNoComma","arrowBody","commasep","maybeop","maybeoperatorNoComma","maybeoperatorComma","classExpression","arrayLiteral","contCommasep","objprop","quasi","targetNoComma","target","maybeTypeArgs","me","expr","property","continueQuasi","_","getterSetter","afterprop","maybetype","what","sep","proceed","mayberettype","isKW","afterType","typeprop","typearg","maybeReturnType","typeparam","maybeTypeDefault","maybeAssign","vardefCont","eltpattern","proppattern","_type","forspec1","forspec2","formaybeinof","forspec3","classNameAfter","classBody","classfield","maybeFrom","exportField","importSpec","maybeMoreImports","maybeAs","enummember","basecolumn","eatSpace","parseJS","top","firstChar","c","closing","doubleIndentSwitch","electricInput","blockCommentStart","blockCommentEnd","blockCommentContinue","lineComment","fold","closeBrackets","helperType","skipExpression","registerHelper","defineMIME","options","INDENT_WORD_SKIP","NORMAL_INDENT_UNIT","makeKeywords","str","obj","words","split","atoms","builtins","indentKeys","tests","digit","digit_or_colon","hex","sign","exponent","keyword_char","symbol","block_indent","pushStack","indentStack","returnType","first","eatCharacter","letter","keyWord","indentTemp","eol","pairs","conf","parserConf","ERRORCLASS","wordRegexp","operators","delimiters","identifiers","atProp","wordOperators","indentKeywords","concat","stringPrefixes","regexPrefixes","constants","scope","scopeOffset","offset","lineOffset","longComment","floatLiteral","intLiteral","tokenFactory","delimiter","singleline","outclass","singleLineStringErrors","alignOffset","_indent","matched","fillAlign","delimiter_index","tokenLexer","closer","closes","inline","propertyKeywords","resolveMode","override","tokenHooks","documentTypes","mediaTypes","mediaFeatures","mediaValueKeywords","nonStandardPropertyKeywords","fontProperties","counterDescriptors","colorKeywords","valueKeywords","allowNested","supportsAtComponent","tokenString","tokenParenthesized","pushContext","popContext","popAndPass","n","wordAsValue","toLowerCase","stateArg","maybeprop","propBlock","_stream","parens","pseudo","atBlock","atComponentBlock","atBlock_parens","restricted_atBlock_before","restricted_atBlock","keyframes","at","interpolation","base","Math","max","keySet","array","keys","documentTypes_","mediaTypes_","mediaFeatures_","mediaValueKeywords_","propertyKeywords_","nonStandardPropertyKeywords_","colorKeywords_","valueKeywords_","allWords","tokenCComment","/",":","$","#","@","&","modeConfig","codeDepth","gfmOverlay","code","ateSpace","before","difference","markdownConfig","underscoresBreakWords","taskLists","fencedCodeBlocks","attr","overlayMode","cmCfg","modeCfg","htmlFound","modes","htmlMode","htmlModeMissing","lang","isOverlay","modeLang","getCodeMirrorMode","highlightFormatting","header","quote1","quote2","list1","list2","list3","hr","image","formatting","linkinline","linkemail","linktext","linkhref","em","del","strong","hrRE","ulRE","olRE","taskListRE","atxHeaderRE","atxHeaderREStrict","tableLikeRE","setextHeaderRE","yamlRE","textRE","mathBlockRE","switchInline","f","switchBlock","linkTitle","htmlBlock","exit","htmlState","tagStart","isInText","inlineNormal","blockNormal","trailingSpace","trailingSpaceNewLine","thisLineHasContent","localMode","prevLineIsList","indentationDiff","listDepth","floor","inYAML","lineBefore","inMath","codeBlock","getType","strictMarkdown","blockStyles","prevLineHasContent","footnoteLink","listType","taskList","$3","$2","lineAfter","tagName","md_inside","buildEndReg","endReg","stopCode","blockStart","styles","atBlockStart","taskOpen","taskClosed","linkHref","linkText","listMod","handleText","escape","matchCh","previousFormatting","t","linkInline","atts","substring","ignoreUnderscore","prevPos","prevCh","endChar","returnState","savedInlineRE","footnoteLinkInside","footnoteUrl","forceBlankLine","adjustedIndentation","htmlConfig","autoSelfClosers","area","br","col","command","embed","frame","img","input","keygen","link","param","track","wbr","menuitem","implicitlyClosed","dd","li","optgroup","rp","rt","tbody","td","tfoot","th","tr","contextGrabbers","dt","address","article","aside","blockquote","dir","div","dl","fieldset","footer","form","h1","h2","h3","h4","h5","h6","hgroup","menu","nav","ol","pre","section","table","ul","thead","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","editorConf","config_","defaults","setStyle","inText","chain","parser","inBlock","doctype","inTag","baseState","closure","isInAttribute","inAttribute","stringStartCol","terminator","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","attrEqState","startOfLine","noIndent","attrValueState","attrContinuedState","baseIndent","fullLine","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","grabbers","configuration","skipAttribute","mimeModes","_config","switchState","setState","smallRE","largeRE","digitRE","hexitRE","octitRE","idRE","symbolRE","specialRE","whiteCharRE","normal","ncomment","nest","currNest","stringLiteral","stringGap","wellKnownWords","wkw","setType","overrideKeywords","w","defaultTags","script","attrRegexpCache","getAttrValue","getAttrRegexp","getTagRegexp","anchored","addTags","to","tag","dest","unshift","tags","configTags","configScript","scriptTypes","html","modeSpec","tagInfo","tagText","findMatchingMode","endTagA","endTag","pat","cur","search","maybeBackup","specials","indentTokens","dedentTokens","dedentPartial","readBracket","level","bracketed","curlev","basecol","indentDepth","specialForm","assumeBody","numLiteral","readSym","inString","skipTo","inComment","last","ctx","indentTo","_textAfter","PERL","->","++","--","**","=~","!~","*","%","x","+","-",".","<<",">>","<",">","<=",">=","lt","gt","le","ge","==","!=","<=>","eq","ne","~~","|","^","&&","||","//","..","...","?","=","+=","-=","*=",",","=>","::","not","and","or","xor","BEGIN","END","PRINT","PRINTF","GETC","READ","READLINE","DESTROY","TIE","TIEHANDLE","UNTIE","STDIN","STDIN_TOP","STDOUT","STDOUT_TOP","STDERR","STDERR_TOP","$ARG","$_","@ARG","@_","$LIST_SEPARATOR","$\"","$PROCESS_ID","$PID","$$","$REAL_GROUP_ID","$GID","$(","$EFFECTIVE_GROUP_ID","$EGID","$)","$PROGRAM_NAME","$0","$SUBSCRIPT_SEPARATOR","$SUBSEP","$;","$REAL_USER_ID","$UID","$<","$EFFECTIVE_USER_ID","$EUID","$>","$a","$b","$COMPILING","$^C","$DEBUGGING","$^D","${^ENCODING}","$ENV","%ENV","$SYSTEM_FD_MAX","$^F","@F","${^GLOBAL_PHASE}","$^H","%^H","@INC","%INC","$INPLACE_EDIT","$^I","$^M","$OSNAME","$^O","${^OPEN}","$PERLDB","$^P","$SIG","%SIG","$BASETIME","$^T","${^TAINT}","${^UNICODE}","${^UTF8CACHE}","${^UTF8LOCALE}","$PERL_VERSION","$^V","${^WIN32_SLOPPY_STAT}","$EXECUTABLE_NAME","$^X","$1","$MATCH","$&","${^MATCH}","$PREMATCH","$`","${^PREMATCH}","$POSTMATCH","$'","${^POSTMATCH}","$LAST_PAREN_MATCH","$+","$LAST_SUBMATCH_RESULT","$^N","@LAST_MATCH_END","@+","%LAST_PAREN_MATCH","%+","@LAST_MATCH_START","@-","%LAST_MATCH_START","%-","$LAST_REGEXP_CODE_RESULT","$^R","${^RE_DEBUG_FLAGS}","${^RE_TRIE_MAXBUF}","$ARGV","@ARGV","ARGV","ARGVOUT","$OUTPUT_FIELD_SEPARATOR","$OFS","$,","$INPUT_LINE_NUMBER","$NR","$.","$INPUT_RECORD_SEPARATOR","$RS","$/","$OUTPUT_RECORD_SEPARATOR","$ORS","$\\","$OUTPUT_AUTOFLUSH","$|","$ACCUMULATOR","$^A","$FORMAT_FORMFEED","$^L","$FORMAT_PAGE_NUMBER","$%","$FORMAT_LINES_LEFT","$-","$FORMAT_LINE_BREAK_CHARACTERS","$:","$FORMAT_LINES_PER_PAGE","$=","$FORMAT_TOP_NAME","$^","$FORMAT_NAME","$~","${^CHILD_ERROR_NATIVE}","$EXTENDED_OS_ERROR","$^E","$EXCEPTIONS_BEING_CAUGHT","$^S","$WARNING","$^W","${^WARNING_BITS}","$OS_ERROR","$ERRNO","$!","%OS_ERROR","%ERRNO","%!","$CHILD_ERROR","$?","$EVAL_ERROR","$@","$OFMT","$#","$*","$ARRAY_BASE","$[","$OLD_PERL_VERSION","$]","elsif","unless","foreach","abs","accept","alarm","atan2","bind","binmode","bless","bootstrap","caller","chdir","chmod","chomp","chop","chown","chr","chroot","closedir","connect","cos","crypt","dbmclose","dbmopen","defined","die","dump","each","endgrent","endhostent","endnetent","endprotoent","endpwent","endservent","eof","eval","exists","fcntl","fileno","flock","fork","format","formline","getc","getgrent","getgrgid","getgrnam","gethostbyaddr","gethostbyname","gethostent","getlogin","getnetbyaddr","getnetbyname","getnetent","getpeername","getpgrp","getppid","getpriority","getprotobyname","getprotobynumber","getprotoent","getpwent","getpwnam","getpwuid","getservbyname","getservbyport","getservent","getsockname","getsockopt","given","glob","gmtime","goto","grep","int","ioctl","kill","lc","lcfirst","listen","localtime","lock","log","lstat","map","mkdir","msgctl","msgget","msgrcv","msgsnd","my","no","oct","opendir","ord","our","pack","package","pipe","print","printf","q","qq","qr","quotemeta","qw","qx","rand","read","readdir","readline","readlink","readpipe","recv","redo","ref","rename","reset","reverse","rewinddir","rindex","rmdir","say","scalar","seek","seekdir","select","semctl","semget","semop","send","setgrent","sethostent","setnetent","setpgrp","setpriority","setprotoent","setpwent","setservent","setsockopt","shmctl","shmget","shmread","shmwrite","shutdown","sin","sleep","socket","socketpair","sort","splice","sprintf","sqrt","srand","stat","study","sub","substr","symlink","syscall","sysopen","sysread","sysseek","system","syswrite","tell","telldir","tie","tied","time","times","truncate","uc","ucfirst","umask","undef","unlink","unpack","untie","use","utime","values","vec","wait","waitpid","wantarray","warn","when","write","y","RXstyle","RXmodifiers","tokenChain","tail","e","tokenPerl","tokenSOMETHING","prefix","look","eatSuffix","suffix","l","matchSequence","escapes","phpString","patterns","tokStack","phpString_","phpKeywords","phpAtoms","phpBuiltin","phpConfig","blockKeywords","defKeywords","builtin","multiLineStrings","hooks","quoted","delim","\"","{","}","phpMode","php","startOpen","curMode","htmlNew","phpNew","isPHP","openPHP","commonKeywords","commonBuiltins","scopes","singleDelimiters","doubleOperators","doubleDelimiters","tripleDelimiters","hangingIndent","myKeywords","myBuiltins","extra_keywords","extra_builtins","py3","version","Number","singleOperators","pushPyScope","errorToken","tokenBaseInner","OUTCLASS","isString","tokenStringFactory","lastToken","beginningOfLine","lambda","pushBracketScope","addErr","triples","wordObj","o","curPunc","indentWords","dedentWords","matching","[","(","newtok","readBlockComment","readQuoted","regexpAhead","phrase","varList","lastTok","more","tokenBaseUntilBrace","tokenBaseOnce","alreadyCalled","unescaped","continuedLine","kwtype","thisTok","ct","tokens","tokenDollar","client","operatorChars","support","dateSQL","date","timestamp","hexNumber","binaryNumber","charCodeAt","decimallessFloat","doubleQuote","nCharCast","charsetCast","commentSlashSlash","commentHash","commentSpaceRequired","zerolessFloat","ODBCdotTable","hookIdentifier","hookVar","hookClient","sqlKeywords","set","`","\\","identifierQuote","textwords","allTags","closeAll","newJournal","newTiddler","permaview","saveChanges","slider","tabs","tagging","tiddler","timeline","today","filter","isSpaceName","reHR","reWikiCommentStart","reWikiCommentStop","reBlockQuote","reJsCodeStart","reJsCodeStop","reXmlCodeStart","reXmlCodeStop","reCodeBlockStart","reCodeBlockStop","reUntilCodeStop","twTokenCode","twTokenComment","twTokenEm","twTokenUnderline","twTokenStrike","twTokenStrong","twTokenMacro","sb","openingKeywords","middleKeywords","endKeywords","operatorKeywords","commontypes","types","opening","middle","doubleClosing","doOpening","indentInfo","currentIndent","doInCurrentLine","nextLineIndent","trueText","brakets","builtinObjsWords","knownWords","isASP","builtinFuncs","builtinObjs","known","noIndentWords","comment","ignoreKeyword","parseWords","functions","beforeParams","inParams","lastTokenWasBuiltin","tokenUnparsed","statementIndentUnit","dontAlignCalls","noIndentKeywords","curKeyword","isBracketChar","unsignedNumber","decimalLiteral","binaryLiteral","octLiteral","hexLiteral","realLiteral","closingBracketOrWord","closingBracket","openClose","keyword","statementKeywords","isClosing","contextClosing","closingKeywords","allClosings","forEach","buildElectricInputRegEx","fromHook","possibleClosing","tlvIdentifierStyle","?$","?*","/-","@++","@+=","@+=-","@--","@-=","<>","^^","^!","tlvScopePrefixChars","tlvIndentUnit","tlvIdentMatch","tlvFirstLevelIndentMatch","tlvLineIndentationMatch","tlvCommentMatch","tlvScopeStyle","tlvIndentationStyle","tlvInBlockComment","tlvCodeActive","blankline","chPos","bodyString","tlvNextIndent","beginStatement","tlvIdentNext","mnemonic","qualifier","kwObj","then","element","attribute","implements","namespace","throws","where","private","fn:false()","fn:true()","basic","axis_specifiers","mightBeFunction","isEQName","tokenXMLComment","tokenCDATA","tokenPreProcessing","isclose","popStateStack","pushStateStack","tokenAttribute","isInXmlBlock","tokenVariable","foundColon","isIn","maybeNested","nestedCount","isInXmlAttributeBlock","isVariableChar","newState","reinstateTokenize","keywordRegex","esc","literal","keyCol","pair","pairStart","inlinePairs","inlineList","chan","defer","fallthrough","func","go","interface","range","struct","bool","byte","complex64","complex128","float32","float64","int8","int16","int32","int64","uint8","uint16","uint32","uint64","uint","uintptr","error","rune","iota","nil","append","cap","complex","copy","imag","len","make","panic","println","real","recover","standaloneKeywords","startString","expectExpression","isBase","tripleQuoted","newline","keywords_block","keywords_important","tokenSGMLComment","dashes","expressionEnd","tokenTranspose","typeBefore","prevToken","typeAtEndOfLine","isTopScope","isDefKeyword","indentStatements","indentSwitch","namespaceSeparator","isPunctuationChar","numberStart","isIdentifierChar","contains","maybeEOL","typeFirstDefinitions","styleDefs","dontIndentStatements","hook","allmanIndentation","cKeywords","cTypes","cppHook","pointerHook","cpp14Literal","cpp11StringHook","cpp11RawStringDelim","tokenRawString","tokenAtString","def","mimes","add","modeProps","u","U","L","R","0","1","2","3","4","5","6","7","8","9","lastTwo","cppLooksLikeConstructor","tokenTripleString","'","intendSwitch","tripleString","_state","stringTokenizer","toUpperCase","tokenCeylonString","wordSet","definingKeywords","punc","binary","octal","hexadecimal","decimal","identifier","instruction","tokenUntilClosingParen","ident","res","blockkeywords","opChars","argList","setFlag","flag","afterIdent","tokenNestedComment","TOKEN_NAMES","tw_pos","token_name","typeWords","keywordWords","separatorRE","separatorWords","operatorAtomWords","operatorSymbolRE","operatorSymbolWords","openParenRE","openParenWords","closeParenRE","closeParenWords","guardWords","bifWords","anumRE","escapesRE","nongreedy","re","is_member","greedy","singleQuote","quoteChar","escapeChar","rval","aToken","tokenStack","maybe_drop_pre","d","g","r","E","maybe_drop_post","ind","typ","peekToken","dep","tt","ss","indenter","unit","wordAfter","truthy","wordafter","currT","prevT","in_string","in_atom","getToken","objs","getTokenIndex","postcommaToken","stop","oper","defaultToken","propname","propvals","lookahead","tokenizer","failFirstLine","responseStatusCode","requestPath","responseStatusText","status","requestProtocol","symbol_regex1","open_paren_regex","close_paren_regex","keyword_regex1","keyword_regex2","keyword_regex3","html_regex1","html_regex2","stringType","beforeTag","justMatchedKeyword","afterParen","rx_strong","rx_emphasis","rx_literal","rx_number","rx_positive","rx_negative","rx_uri","overlay","backdrop","args","mode_python","mode_stex","TAIL","rx_TAIL","NAME","rx_NAME","REF_NAME","TEXT1","TEXT2","rx_TEXT2","rx_section","rx_explicit","rx_link","rx_directive","rx_substitution","rx_footnote","rx_citation","rx_substitution_ref","rx_footnote_ref","rx_citation_ref","rx_link_ref1","rx_link_ref2","rx_role_pre","rx_role_suf","rx_role","rx_directive_name","rx_directive_tail","rx_substitution_text","rx_substitution_sepa","rx_substitution_name","rx_substitution_tail","rx_link_head","rx_link_name","rx_link_tail","rx_verbatim","rx_examples","to_normal","change","to_mode","to_explicit","phase","stage","tmp_stex","tmp","to_verbatim","tmp_py","to_comment","as_block","string_raw","string_raw_hash","incomment","intag","instring","scriptStartRegex","scriptEndRegex","scriptingModeSpec","window","buildRegexp","notCharacterOrDash","varNames","grammar","punctuation","parent","returnStack","shouldReturnFrom","bracketNesting","key","tokenSingleQuoteString","tokenDoubleQuoteString","quoteMatch","tokenMultiString","startQuote","tokenStringInterpolation","tokenInterpolation","tokenMultiStringReturn","tokenHereStringInterpolation","parentTokenize","savedBracketNesting","tokenVariableWithBraces","instructionRegex","instructionOnlyLine","instructionWithArguments","xmlMode","jsMode","flatXMLIndent","xmlContext","xmlToken","jsToken","copyContext","tagLanguages","template","_parserConfig","Identifier","pFloat","pPrecision","reBaseForm","reFloatForm","reIdInContext","commentLevel","returnTokenizer","inLine","inPlugin","pluginName","attributes","err","attvalue","attvaluemaybe","afterSection","nextMultiline","inMultiline","position","next_rule","nr","Rules","i$","keywordend","stringfill","heregex","qdoc","qqdoc","qstring","qqstring","js","idx","rr","custom","directives",".abort",".align",".altmacro",".ascii",".asciz",".balign",".balignw",".balignl",".bundle_align_mode",".bundle_lock",".bundle_unlock",".byte",".cfi_startproc",".comm",".data",".def",".desc",".dim",".double",".eject",".else",".elseif",".end",".endef",".endfunc",".endif",".equ",".equiv",".eqv",".err",".error",".exitm",".extern",".fail",".file",".fill",".float",".func",".global",".gnu_attribute",".hidden",".hword",".ident",".if",".incbin",".include",".int",".internal",".irp",".irpc",".lcomm",".lflags",".line",".linkonce",".list",".ln",".loc",".loc_mark_labels",".local",".long",".macro",".mri",".noaltmacro",".nolist",".octa",".offset",".org",".p2align",".popsection",".previous",".print",".protected",".psize",".purgem",".pushsection",".quad",".reloc",".rept",".sbttl",".scl",".section",".set",".short",".single",".size",".skip",".sleb128",".space",".stab",".string",".struct",".subsection",".symver",".tag",".text",".title",".type",".uleb128",".val",".version",".vtable_entry",".vtable_inherit",".warning",".weak",".weakref",".word","registers","syntax","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","r10","r11","r12","sp","lr","pc","r13","r14","r15","ax","eax","rax","bx","ebx","rbx","ecx","rcx","dx","edx","rdx","si","esi","rsi","di","edi","rdi","esp","rsp","bp","ebp","rbp","ip","eip","rip","cs","ds","es","fs","gs","clikeComment","renderKeyword","nextUntilUnescaped","lhs","inArray","beginString","afterDef","linkStart","contentMatch","flowMatch","afterText","defMatch","flowStart","resetSequenceState","beginController","beginActor","beginAttr","resetGanttState","beginTittle","beginSection","beginDateFormat","resetState","inFlowchart","inSequence","inGantt","inClassDiagram","inGitGraph","inInfo","inDotGraph","skipTo_","endBox","attrStart","rec","of","done","fun","mutable","ignore","begin","extraWords","slashComments","succ","trace","print_string","print_endline","raise","abstract","as","assert","delegate","downcast","downto","elif","exception","extern","global","inherit","internal","lazy","let!","member","public","return!","static","upcast","use!","yield!","List","Seq","Map","Set","failwith","isDef","errorIfNotEmpty","nonWS","parseComment","parseStringDelimiter","parseDocStringDelimiter","inDocString","matchesAtom","defining","variable_regex","found_var","continueString","inDefinition","inInclude","funcs","preds","newlineAndIndent","modeExtensions","autoFormatLineBreaks","lines","reProcessedPortion","trim","popInterpolationStack","interpolationStack","raw","tokenStringHelper","tokenInterpolationIdentifier","filters","inVariable","previousTokenizer","escapeNext","waitDot","waitProperty","waitPipe","waitFilter","foundVariable","keywordMatch","blockCommentTag","inBlockComment","htmlBase","djangoInner","sc","some","unnamedDefinition","namedDefinition","typeParameterizedDefinition","otherParameterizedDefinition","constantSimpleDefinition","variableSimpleDefinition","otherSimpleDefinition","separator","signalingCalls","symbolPattern","symbolKeyword","symbolClass","symbolGlobal","symbolConstant","patternStyles","patternName","wordLookup","styleLookup","handlebars","dash_comment","builtinArray","keywordArray","boolOperators","typeArray","atomArray","startDefs","endDefs","integers","floats","identifiersEnd","strings","multilineComments","multilineCommentsStart","multilineCommentsEnd","startDef","endDef","nextToken","readToken","bodiedOps","pIdentifier","reIdentifier","rePattern","reFunctionLike","currentScope","delta","rfc2822","rfc2822NoEmail","whitespace","rfc2822Header","rfc2822HeaderNoEmail","email","untilEmail","bracketedEmail","untilBracketedEmail","inSeparator","inHeader","inHeaders","emailPermitted","allCaps","firstCap","metaHook","using","cast","macro","untyped","callback","never","enum","typedef","dynamic","toUnescaped","haxeTokenBase","reAllowed","haxeTokenComment","kwAllowed","HaxeLexical","imported","typename","importedtypes","registerimport","importname","metadef","vardef1","maybeattribute","importdef","maybeoperator","metaargs","typeuse","vardef2","forin","typestring","parseHaxe","pushCommand","cmdState","peekCommand","addPluginPattern","cmdStyle","bracketNo","argument","styleIdentifier","openBracket","closeBracket","plugins","plug","cmdName","beginParams","inMathMode","getMostPowerful","endModeSeq","popCommand","dataTypes","litOperator","tokenDollarB","inMid","COMMENT","binaryMatcher","octalMatcher","hexMatcher","decimalMatcher","isBinaryNumber","isOctalNumber","isDecimalNumber","backup","isHexNumber","sExprComment","numTest","hasExactness","hasRadix","twigInner","isDoubleOperatorSym","isDoubleOperatorChar","isSingleOperatorChar","inDataStep","inProc","inMacro","nextword","continueComment","doubleOperator","define1","define2","define3","def_mode","internalTokenBase","chars","openers","closers","inGenerator","curr","leavingExpr","tokenAnnotation","imMatcher","numberLiteral","tokenChar","isDefinition","callOrDef","firstParenPos","charsAdvanced","nestedLevels","isChar","indentUnitString","tagKeywords","tagKeywords_","tagVariablesRegexp","documentTypesRegexp","fontProperties_","operatorsRegexp","wordOperatorKeywordsRegexp","wordOperatorKeywords_","blockKeywords_","vendorPrefixesRegexp","commonAtoms","commonAtoms_","firstWordMatch","firstWord","contextIndent","wordIsTag","wordIsProperty","wordIsBlock","wordIsVendorPrefix","wordLC","typeIsBlock","endOfLine","typeIsInterpolation","typeIsPseudo","firstWordOfLine","vendorPrefixes","extend","variableName","lineFirstWord","lineIndent","prevLineFirstWord","prevLineIndent","hintWords"],"mappings":"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","sourceRoot":"./","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var listRE = /^(\\s*)(>[> ]*|[*+-] \\[[x ]\\]\\s|[*+-]\\s|(\\d+)([.)]))(\\s*)/,\n      emptyListRE = /^(\\s*)(>[> ]*|[*+-] \\[[x ]\\]|[*+-]|(\\d+)[.)])(\\s*)$/,\n      unorderedListRE = /[*+-]\\s/;\n\n  CodeMirror.commands.newlineAndIndentContinueMarkdownList = function(cm) {\n    if (cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n    var ranges = cm.listSelections(), replacements = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var pos = ranges[i].head;\n      var eolState = cm.getStateAfter(pos.line);\n      var inList = eolState.list !== false;\n      var inQuote = eolState.quote !== 0;\n\n      var line = cm.getLine(pos.line), match = listRE.exec(line);\n      if (!ranges[i].empty() || (!inList && !inQuote) || !match) {\n        cm.execCommand(\"newlineAndIndent\");\n        return;\n      }\n      if (emptyListRE.test(line)) {\n        if (!/>\\s*$/.test(line)) cm.replaceRange(\"\", {\n          line: pos.line, ch: 0\n        }, {\n          line: pos.line, ch: pos.ch + 1\n        });\n        replacements[i] = \"\\n\";\n      } else {\n        var indent = match[1], after = match[5];\n        var bullet = unorderedListRE.test(match[2]) || match[2].indexOf(\">\") >= 0\n          ? match[2].replace(\"x\", \" \")\n          : (parseInt(match[3], 10) + (File.option.olStyle ? 0 : 1)) + match[4];\n\n        replacements[i] = \"\\n\" + indent + bullet + after;\n      }\n    }\n\n    cm.replaceSelections(replacements);\n  };\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          if (matches.length > 2) {\n            state.pending = [];\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                state.pending.push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return rule.token[0];\n          } else if (rule.token && rule.token.join) {\n            return rule.token[0];\n          } else {\n            return rule.token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.multiplexingMode = function(outer /*, others */) {\n  // Others should be {open, close, mode [, delimStyle] [, innerStyle]} objects\n  var others = Array.prototype.slice.call(arguments, 1);\n\n  function indexOf(string, pattern, from, returnEnd) {\n    if (typeof pattern == \"string\") {\n      var found = string.indexOf(pattern, from);\n      return returnEnd && found > -1 ? found + pattern.length : found;\n    }\n    var m = pattern.exec(from ? string.slice(from) : string);\n    return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n  }\n\n  return {\n    startState: function() {\n      return {\n        outer: CodeMirror.startState(outer),\n        innerActive: null,\n        inner: null\n      };\n    },\n\n    copyState: function(state) {\n      return {\n        outer: CodeMirror.copyState(outer, state.outer),\n        innerActive: state.innerActive,\n        inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner)\n      };\n    },\n\n    token: function(stream, state) {\n      if (!state.innerActive) {\n        var cutOff = Infinity, oldContent = stream.string;\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          var found = indexOf(oldContent, other.open, stream.pos);\n          if (found == stream.pos) {\n            if (!other.parseDelimiters) stream.match(other.open);\n            state.innerActive = other;\n            state.inner = CodeMirror.startState(other.mode, outer.indent ? outer.indent(state.outer, \"\") : 0);\n            return other.delimStyle && (other.delimStyle + \" \" + other.delimStyle + \"-open\");\n          } else if (found != -1 && found < cutOff) {\n            cutOff = found;\n          }\n        }\n        if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n        var outerToken = outer.token(stream, state.outer);\n        if (cutOff != Infinity) stream.string = oldContent;\n        return outerToken;\n      } else {\n        var curInner = state.innerActive, oldContent = stream.string;\n        if (!curInner.close && stream.sol()) {\n          state.innerActive = state.inner = null;\n          return this.token(stream, state);\n        }\n        var found = curInner.close ? indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n        if (found == stream.pos && !curInner.parseDelimiters) {\n          stream.match(curInner.close);\n          state.innerActive = state.inner = null;\n          return curInner.delimStyle && (curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\");\n        }\n        if (found > -1) stream.string = oldContent.slice(0, found);\n        var innerToken = curInner.mode.token(stream, state.inner);\n        if (found > -1) stream.string = oldContent;\n\n        if (found == stream.pos && curInner.parseDelimiters)\n          state.innerActive = state.inner = null;\n\n        if (curInner.innerStyle) {\n          if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;\n          else innerToken = curInner.innerStyle;\n        }\n\n        return innerToken;\n      }\n    },\n\n    indent: function(state, textAfter) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (!mode.indent) return CodeMirror.Pass;\n      return mode.indent(state.innerActive ? state.inner : state.outer, textAfter);\n    },\n\n    blankLine: function(state) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (mode.blankLine) {\n        mode.blankLine(state.innerActive ? state.inner : state.outer);\n      }\n      if (!state.innerActive) {\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          if (other.open === \"\\n\") {\n            state.innerActive = other;\n            state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\") : 0);\n          }\n        }\n      } else if (state.innerActive.close === \"\\n\") {\n        state.innerActive = state.inner = null;\n      }\n    },\n\n    electricChars: outer.electricChars,\n\n    innerMode: function(state) {\n      return state.inner ? {state: state.inner, mode: state.innerActive.mode} : {state: state.outer, mode: outer};\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"javascript\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit;\n  var statementIndent = parserConfig.statementIndent;\n  var jsonldMode = parserConfig.jsonld;\n  var jsonMode = parserConfig.json || jsonldMode;\n  var isTS = parserConfig.typescript;\n  var wordRE = parserConfig.wordCharacters || /[\\w$\\xa1-\\uffff]/;\n\n  // Tokenizer\n\n  var keywords = function(){\n    function kw(type) {return {type: type, style: \"keyword\"};}\n    var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\"), D = kw(\"keyword d\");\n    var operator = kw(\"operator\"), atom = {type: \"atom\", style: \"atom\"};\n\n    return {\n      \"if\": kw(\"if\"), \"while\": A, \"with\": A, \"else\": B, \"do\": B, \"try\": B, \"finally\": B,\n      \"return\": D, \"break\": D, \"continue\": D, \"new\": kw(\"new\"), \"delete\": C, \"void\": C, \"throw\": C,\n      \"debugger\": kw(\"debugger\"), \"var\": kw(\"var\"), \"const\": kw(\"var\"), \"let\": kw(\"var\"),\n      \"function\": kw(\"function\"), \"catch\": kw(\"catch\"),\n      \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\n      \"in\": operator, \"typeof\": operator, \"instanceof\": operator,\n      \"true\": atom, \"false\": atom, \"null\": atom, \"undefined\": atom, \"NaN\": atom, \"Infinity\": atom,\n      \"this\": kw(\"this\"), \"class\": kw(\"class\"), \"super\": kw(\"atom\"),\n      \"yield\": C, \"export\": kw(\"export\"), \"import\": kw(\"import\"), \"extends\": C,\n      \"await\": C\n    };\n  }();\n\n  var isOperatorChar = /[+\\-*&%=<>!?|~^@]/;\n  var isJsonldKeyword = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)\"/;\n\n  function readRegexp(stream) {\n    var escaped = false, next, inSet = false;\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (next == \"/\" && !inSet) return;\n        if (next == \"[\") inSet = true;\n        else if (inSet && next == \"]\") inSet = false;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n  }\n\n  // Used as scratch variables to communicate multiple values without\n  // consing up tons of objects.\n  var type, content;\n  function ret(tp, style, cont) {\n    type = tp; content = cont;\n    return style;\n  }\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (ch == \".\" && stream.match(/^\\d+(?:[eE][+\\-]?\\d+)?/)) {\n      return ret(\"number\", \"number\");\n    } else if (ch == \".\" && stream.match(\"..\")) {\n      return ret(\"spread\", \"meta\");\n    } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      return ret(ch);\n    } else if (ch == \"=\" && stream.eat(\">\")) {\n      return ret(\"=>\", \"operator\");\n    } else if (ch == \"0\" && stream.match(/^(?:x[\\da-f]+|o[0-7]+|b[01]+)n?/i)) {\n      return ret(\"number\", \"number\");\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^\\d*(?:n|(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?/);\n      return ret(\"number\", \"number\");\n    } else if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      } else if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return ret(\"comment\", \"comment\");\n      } else if (expressionAllowed(stream, state, 1)) {\n        readRegexp(stream);\n        stream.match(/^\\b(([gimyus])(?![gimyus]*\\2))+\\b/);\n        return ret(\"regexp\", \"string-2\");\n      } else {\n        stream.eat(\"=\");\n        return ret(\"operator\", \"operator\", stream.current());\n      }\n    } else if (ch == \"`\") {\n      state.tokenize = tokenQuasi;\n      return tokenQuasi(stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return ret(\"error\", \"error\");\n    } else if (isOperatorChar.test(ch)) {\n      if (ch != \">\" || !state.lexical || state.lexical.type != \">\") {\n        if (stream.eat(\"=\")) {\n          if (ch == \"!\" || ch == \"=\") stream.eat(\"=\")\n        } else if (/[<>*+\\-]/.test(ch)) {\n          stream.eat(ch)\n          if (ch == \">\") stream.eat(ch)\n        }\n      }\n      return ret(\"operator\", \"operator\", stream.current());\n    } else if (wordRE.test(ch)) {\n      stream.eatWhile(wordRE);\n      var word = stream.current()\n      if (state.lastType != \".\") {\n        if (keywords.propertyIsEnumerable(word)) {\n          var kw = keywords[word]\n          return ret(kw.type, kw.style, word)\n        }\n        if (word == \"async\" && stream.match(/^(\\s|\\/\\*.*?\\*\\/)*[\\[\\(\\w]/, false))\n          return ret(\"async\", \"keyword\", word)\n      }\n      return ret(\"variable\", \"variable\", word)\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next;\n      if (jsonldMode && stream.peek() == \"@\" && stream.match(isJsonldKeyword)){\n        state.tokenize = tokenBase;\n        return ret(\"jsonld-keyword\", \"meta\");\n      }\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) break;\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (!escaped) state.tokenize = tokenBase;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenQuasi(stream, state) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (!escaped && (next == \"`\" || next == \"$\" && stream.eat(\"{\"))) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    return ret(\"quasi\", \"string-2\", stream.current());\n  }\n\n  var brackets = \"([{}])\";\n  // This is a crude lookahead trick to try and notice that we're\n  // parsing the argument patterns for a fat-arrow function before we\n  // actually hit the arrow token. It only works if the arrow is on\n  // the same line as the arguments and there's no strange noise\n  // (comments) in between. Fallback is to only notice when we hit the\n  // arrow, and not declare the arguments as locals for the arrow\n  // body.\n  function findFatArrow(stream, state) {\n    if (state.fatArrowAt) state.fatArrowAt = null;\n    var arrow = stream.string.indexOf(\"=>\", stream.start);\n    if (arrow < 0) return;\n\n    if (isTS) { // Try to skip TypeScript return type declarations after the arguments\n      var m = /:\\s*(?:\\w+(?:<[^>]*>|\\[\\])?|\\{[^}]*\\})\\s*$/.exec(stream.string.slice(stream.start, arrow))\n      if (m) arrow = m.index\n    }\n\n    var depth = 0, sawSomething = false;\n    for (var pos = arrow - 1; pos >= 0; --pos) {\n      var ch = stream.string.charAt(pos);\n      var bracket = brackets.indexOf(ch);\n      if (bracket >= 0 && bracket < 3) {\n        if (!depth) { ++pos; break; }\n        if (--depth == 0) { if (ch == \"(\") sawSomething = true; break; }\n      } else if (bracket >= 3 && bracket < 6) {\n        ++depth;\n      } else if (wordRE.test(ch)) {\n        sawSomething = true;\n      } else if (/[\"'\\/]/.test(ch)) {\n        return;\n      } else if (sawSomething && !depth) {\n        ++pos;\n        break;\n      }\n    }\n    if (sawSomething && !depth) state.fatArrowAt = pos;\n  }\n\n  // Parser\n\n  var atomicTypes = {\"atom\": true, \"number\": true, \"variable\": true, \"string\": true, \"regexp\": true, \"this\": true, \"jsonld-keyword\": true};\n\n  function JSLexical(indented, column, type, align, prev, info) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.prev = prev;\n    this.info = info;\n    if (align != null) this.align = align;\n  }\n\n  function inScope(state, varname) {\n    for (var v = state.localVars; v; v = v.next)\n      if (v.name == varname) return true;\n    for (var cx = state.context; cx; cx = cx.prev) {\n      for (var v = cx.vars; v; v = v.next)\n        if (v.name == varname) return true;\n    }\n  }\n\n  function parseJS(state, style, type, content, stream) {\n    var cc = state.cc;\n    // Communicate our context to the combinators.\n    // (Less wasteful than consing up a hundred closures on every call.)\n    cx.state = state; cx.stream = stream; cx.marked = null, cx.cc = cc; cx.style = style;\n\n    if (!state.lexical.hasOwnProperty(\"align\"))\n      state.lexical.align = true;\n\n    while(true) {\n      var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement;\n      if (combinator(type, content)) {\n        while(cc.length && cc[cc.length - 1].lex)\n          cc.pop()();\n        if (cx.marked) return cx.marked;\n        if (type == \"variable\" && inScope(state, content)) return \"variable-2\";\n        return style;\n      }\n    }\n  }\n\n  // Combinator utils\n\n  var cx = {state: null, column: null, marked: null, cc: null};\n  function pass() {\n    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n  }\n  function cont() {\n    pass.apply(null, arguments);\n    return true;\n  }\n  function inList(name, list) {\n    for (var v = list; v; v = v.next) if (v.name == name) return true\n    return false;\n  }\n  function register(varname) {\n    var state = cx.state;\n    cx.marked = \"def\";\n    if (state.context) {\n      if (state.lexical.info == \"var\" && state.context && state.context.block) {\n        // FIXME function decls are also not block scoped\n        var newContext = registerVarScoped(varname, state.context)\n        if (newContext != null) {\n          state.context = newContext\n          return\n        }\n      } else if (!inList(varname, state.localVars)) {\n        state.localVars = new Var(varname, state.localVars)\n        return\n      }\n    }\n    // Fall through means this is global\n    if (parserConfig.globalVars && !inList(varname, state.globalVars))\n      state.globalVars = new Var(varname, state.globalVars)\n  }\n  function registerVarScoped(varname, context) {\n    if (!context) {\n      return null\n    } else if (context.block) {\n      var inner = registerVarScoped(varname, context.prev)\n      if (!inner) return null\n      if (inner == context.prev) return context\n      return new Context(inner, context.vars, true)\n    } else if (inList(varname, context.vars)) {\n      return context\n    } else {\n      return new Context(context.prev, new Var(varname, context.vars), false)\n    }\n  }\n\n  function isModifier(name) {\n    return name == \"public\" || name == \"private\" || name == \"protected\" || name == \"abstract\" || name == \"readonly\"\n  }\n\n  // Combinators\n\n  function Context(prev, vars, block) { this.prev = prev; this.vars = vars; this.block = block }\n  function Var(name, next) { this.name = name; this.next = next }\n\n  var defaultVars = new Var(\"this\", new Var(\"arguments\", null))\n  function pushcontext() {\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, false)\n    cx.state.localVars = defaultVars\n  }\n  function pushblockcontext() {\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, true)\n    cx.state.localVars = null\n  }\n  function popcontext() {\n    cx.state.localVars = cx.state.context.vars\n    cx.state.context = cx.state.context.prev\n  }\n  popcontext.lex = true\n  function pushlex(type, info) {\n    var result = function() {\n      var state = cx.state, indent = state.indented;\n      if (state.lexical.type == \"stat\") indent = state.lexical.indented;\n      else for (var outer = state.lexical; outer && outer.type == \")\" && outer.align; outer = outer.prev)\n        indent = outer.indented;\n      state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info);\n    };\n    result.lex = true;\n    return result;\n  }\n  function poplex() {\n    var state = cx.state;\n    if (state.lexical.prev) {\n      if (state.lexical.type == \")\")\n        state.indented = state.lexical.indented;\n      state.lexical = state.lexical.prev;\n    }\n  }\n  poplex.lex = true;\n\n  function expect(wanted) {\n    function exp(type) {\n      if (type == wanted) return cont();\n      else if (wanted == \";\" || type == \"}\" || type == \")\" || type == \"]\") return pass();\n      else return cont(exp);\n    };\n    return exp;\n  }\n\n  function statement(type, value) {\n    if (type == \"var\") return cont(pushlex(\"vardef\", value), vardef, expect(\";\"), poplex);\n    if (type == \"keyword a\") return cont(pushlex(\"form\"), parenExpr, statement, poplex);\n    if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\n    if (type == \"keyword d\") return cx.stream.match(/^\\s*$/, false) ? cont() : cont(pushlex(\"stat\"), maybeexpression, expect(\";\"), poplex);\n    if (type == \"debugger\") return cont(expect(\";\"));\n    if (type == \"{\") return cont(pushlex(\"}\"), pushblockcontext, block, poplex, popcontext);\n    if (type == \";\") return cont();\n    if (type == \"if\") {\n      if (cx.state.lexical.info == \"else\" && cx.state.cc[cx.state.cc.length - 1] == poplex)\n        cx.state.cc.pop()();\n      return cont(pushlex(\"form\"), parenExpr, statement, poplex, maybeelse);\n    }\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"for\") return cont(pushlex(\"form\"), forspec, statement, poplex);\n    if (type == \"class\" || (isTS && value == \"interface\")) { cx.marked = \"keyword\"; return cont(pushlex(\"form\"), className, poplex); }\n    if (type == \"variable\") {\n      if (isTS && value == \"declare\") {\n        cx.marked = \"keyword\"\n        return cont(statement)\n      } else if (isTS && (value == \"module\" || value == \"enum\" || value == \"type\") && cx.stream.match(/^\\s*\\w/, false)) {\n        cx.marked = \"keyword\"\n        if (value == \"enum\") return cont(enumdef);\n        else if (value == \"type\") return cont(typeexpr, expect(\"operator\"), typeexpr, expect(\";\"));\n        else return cont(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), block, poplex, poplex)\n      } else if (isTS && value == \"namespace\") {\n        cx.marked = \"keyword\"\n        return cont(pushlex(\"form\"), expression, block, poplex)\n      } else if (isTS && value == \"abstract\") {\n        cx.marked = \"keyword\"\n        return cont(statement)\n      } else {\n        return cont(pushlex(\"stat\"), maybelabel);\n      }\n    }\n    if (type == \"switch\") return cont(pushlex(\"form\"), parenExpr, expect(\"{\"), pushlex(\"}\", \"switch\"), pushblockcontext,\n                                      block, poplex, poplex, popcontext);\n    if (type == \"case\") return cont(expression, expect(\":\"));\n    if (type == \"default\") return cont(expect(\":\"));\n    if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, maybeCatchBinding, statement, poplex, popcontext);\n    if (type == \"export\") return cont(pushlex(\"stat\"), afterExport, poplex);\n    if (type == \"import\") return cont(pushlex(\"stat\"), afterImport, poplex);\n    if (type == \"async\") return cont(statement)\n    if (value == \"@\") return cont(expression, statement)\n    return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\n  }\n  function maybeCatchBinding(type) {\n    if (type == \"(\") return cont(funarg, expect(\")\"))\n  }\n  function expression(type, value) {\n    return expressionInner(type, value, false);\n  }\n  function expressionNoComma(type, value) {\n    return expressionInner(type, value, true);\n  }\n  function parenExpr(type) {\n    if (type != \"(\") return pass()\n    return cont(pushlex(\")\"), expression, expect(\")\"), poplex)\n  }\n  function expressionInner(type, value, noComma) {\n    if (cx.state.fatArrowAt == cx.stream.start) {\n      var body = noComma ? arrowBodyNoComma : arrowBody;\n      if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, expect(\"=>\"), body, popcontext);\n      else if (type == \"variable\") return pass(pushcontext, pattern, expect(\"=>\"), body, popcontext);\n    }\n\n    var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma;\n    if (atomicTypes.hasOwnProperty(type)) return cont(maybeop);\n    if (type == \"function\") return cont(functiondef, maybeop);\n    if (type == \"class\" || (isTS && value == \"interface\")) { cx.marked = \"keyword\"; return cont(pushlex(\"form\"), classExpression, poplex); }\n    if (type == \"keyword c\" || type == \"async\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeop);\n    if (type == \"operator\" || type == \"spread\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"[\") return cont(pushlex(\"]\"), arrayLiteral, poplex, maybeop);\n    if (type == \"{\") return contCommasep(objprop, \"}\", null, maybeop);\n    if (type == \"quasi\") return pass(quasi, maybeop);\n    if (type == \"new\") return cont(maybeTarget(noComma));\n    if (type == \"import\") return cont(expression);\n    return cont();\n  }\n  function maybeexpression(type) {\n    if (type.match(/[;\\}\\)\\],]/)) return pass();\n    return pass(expression);\n  }\n\n  function maybeoperatorComma(type, value) {\n    if (type == \",\") return cont(expression);\n    return maybeoperatorNoComma(type, value, false);\n  }\n  function maybeoperatorNoComma(type, value, noComma) {\n    var me = noComma == false ? maybeoperatorComma : maybeoperatorNoComma;\n    var expr = noComma == false ? expression : expressionNoComma;\n    if (type == \"=>\") return cont(pushcontext, noComma ? arrowBodyNoComma : arrowBody, popcontext);\n    if (type == \"operator\") {\n      if (/\\+\\+|--/.test(value) || isTS && value == \"!\") return cont(me);\n      if (isTS && value == \"<\" && cx.stream.match(/^([^>]|<.*?>)*>\\s*\\(/, false))\n        return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, me);\n      if (value == \"?\") return cont(expression, expect(\":\"), expr);\n      return cont(expr);\n    }\n    if (type == \"quasi\") { return pass(quasi, me); }\n    if (type == \";\") return;\n    if (type == \"(\") return contCommasep(expressionNoComma, \")\", \"call\", me);\n    if (type == \".\") return cont(property, me);\n    if (type == \"[\") return cont(pushlex(\"]\"), maybeexpression, expect(\"]\"), poplex, me);\n    if (isTS && value == \"as\") { cx.marked = \"keyword\"; return cont(typeexpr, me) }\n    if (type == \"regexp\") {\n      cx.state.lastType = cx.marked = \"operator\"\n      cx.stream.backUp(cx.stream.pos - cx.stream.start - 1)\n      return cont(expr)\n    }\n  }\n  function quasi(type, value) {\n    if (type != \"quasi\") return pass();\n    if (value.slice(value.length - 2) != \"${\") return cont(quasi);\n    return cont(expression, continueQuasi);\n  }\n  function continueQuasi(type) {\n    if (type == \"}\") {\n      cx.marked = \"string-2\";\n      cx.state.tokenize = tokenQuasi;\n      return cont(quasi);\n    }\n  }\n  function arrowBody(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expression);\n  }\n  function arrowBodyNoComma(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expressionNoComma);\n  }\n  function maybeTarget(noComma) {\n    return function(type) {\n      if (type == \".\") return cont(noComma ? targetNoComma : target);\n      else if (type == \"variable\" && isTS) return cont(maybeTypeArgs, noComma ? maybeoperatorNoComma : maybeoperatorComma)\n      else return pass(noComma ? expressionNoComma : expression);\n    };\n  }\n  function target(_, value) {\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorComma); }\n  }\n  function targetNoComma(_, value) {\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorNoComma); }\n  }\n  function maybelabel(type) {\n    if (type == \":\") return cont(poplex, statement);\n    return pass(maybeoperatorComma, expect(\";\"), poplex);\n  }\n  function property(type) {\n    if (type == \"variable\") {cx.marked = \"property\"; return cont();}\n  }\n  function objprop(type, value) {\n    if (type == \"async\") {\n      cx.marked = \"property\";\n      return cont(objprop);\n    } else if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      if (value == \"get\" || value == \"set\") return cont(getterSetter);\n      var m // Work around fat-arrow-detection complication for detecting typescript typed arrow params\n      if (isTS && cx.state.fatArrowAt == cx.stream.start && (m = cx.stream.match(/^\\s*:\\s*/, false)))\n        cx.state.fatArrowAt = cx.stream.pos + m[0].length\n      return cont(afterprop);\n    } else if (type == \"number\" || type == \"string\") {\n      cx.marked = jsonldMode ? \"property\" : (cx.style + \" property\");\n      return cont(afterprop);\n    } else if (type == \"jsonld-keyword\") {\n      return cont(afterprop);\n    } else if (isTS && isModifier(value)) {\n      cx.marked = \"keyword\"\n      return cont(objprop)\n    } else if (type == \"[\") {\n      return cont(expression, maybetype, expect(\"]\"), afterprop);\n    } else if (type == \"spread\") {\n      return cont(expressionNoComma, afterprop);\n    } else if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(objprop);\n    } else if (type == \":\") {\n      return pass(afterprop)\n    }\n  }\n  function getterSetter(type) {\n    if (type != \"variable\") return pass(afterprop);\n    cx.marked = \"property\";\n    return cont(functiondef);\n  }\n  function afterprop(type) {\n    if (type == \":\") return cont(expressionNoComma);\n    if (type == \"(\") return pass(functiondef);\n  }\n  function commasep(what, end, sep) {\n    function proceed(type, value) {\n      if (sep ? sep.indexOf(type) > -1 : type == \",\") {\n        var lex = cx.state.lexical;\n        if (lex.info == \"call\") lex.pos = (lex.pos || 0) + 1;\n        return cont(function(type, value) {\n          if (type == end || value == end) return pass()\n          return pass(what)\n        }, proceed);\n      }\n      if (type == end || value == end) return cont();\n      return cont(expect(end));\n    }\n    return function(type, value) {\n      if (type == end || value == end) return cont();\n      return pass(what, proceed);\n    };\n  }\n  function contCommasep(what, end, info) {\n    for (var i = 3; i < arguments.length; i++)\n      cx.cc.push(arguments[i]);\n    return cont(pushlex(end, info), commasep(what, end), poplex);\n  }\n  function block(type) {\n    if (type == \"}\") return cont();\n    return pass(statement, block);\n  }\n  function maybetype(type, value) {\n    if (isTS) {\n      if (type == \":\") return cont(typeexpr);\n      if (value == \"?\") return cont(maybetype);\n    }\n  }\n  function mayberettype(type) {\n    if (isTS && type == \":\") {\n      if (cx.stream.match(/^\\s*\\w+\\s+is\\b/, false)) return cont(expression, isKW, typeexpr)\n      else return cont(typeexpr)\n    }\n  }\n  function isKW(_, value) {\n    if (value == \"is\") {\n      cx.marked = \"keyword\"\n      return cont()\n    }\n  }\n  function typeexpr(type, value) {\n    if (value == \"keyof\" || value == \"typeof\") {\n      cx.marked = \"keyword\"\n      return cont(value == \"keyof\" ? typeexpr : expressionNoComma)\n    }\n    if (type == \"variable\" || value == \"void\") {\n      cx.marked = \"type\"\n      return cont(afterType)\n    }\n    if (type == \"string\" || type == \"number\" || type == \"atom\") return cont(afterType);\n    if (type == \"[\") return cont(pushlex(\"]\"), commasep(typeexpr, \"]\", \",\"), poplex, afterType)\n    if (type == \"{\") return cont(pushlex(\"}\"), commasep(typeprop, \"}\", \",;\"), poplex, afterType)\n    if (type == \"(\") return cont(commasep(typearg, \")\"), maybeReturnType)\n    if (type == \"<\") return cont(commasep(typeexpr, \">\"), typeexpr)\n  }\n  function maybeReturnType(type) {\n    if (type == \"=>\") return cont(typeexpr)\n  }\n  function typeprop(type, value) {\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\"\n      return cont(typeprop)\n    } else if (value == \"?\") {\n      return cont(typeprop)\n    } else if (type == \":\") {\n      return cont(typeexpr)\n    } else if (type == \"[\") {\n      return cont(expression, maybetype, expect(\"]\"), typeprop)\n    }\n  }\n  function typearg(type, value) {\n    if (type == \"variable\" && cx.stream.match(/^\\s*[?:]/, false) || value == \"?\") return cont(typearg)\n    if (type == \":\") return cont(typeexpr)\n    return pass(typeexpr)\n  }\n  function afterType(type, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n    if (value == \"|\" || type == \".\" || value == \"&\") return cont(typeexpr)\n    if (type == \"[\") return cont(expect(\"]\"), afterType)\n    if (value == \"extends\" || value == \"implements\") { cx.marked = \"keyword\"; return cont(typeexpr) }\n  }\n  function maybeTypeArgs(_, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n  }\n  function typeparam() {\n    return pass(typeexpr, maybeTypeDefault)\n  }\n  function maybeTypeDefault(_, value) {\n    if (value == \"=\") return cont(typeexpr)\n  }\n  function vardef(_, value) {\n    if (value == \"enum\") {cx.marked = \"keyword\"; return cont(enumdef)}\n    return pass(pattern, maybetype, maybeAssign, vardefCont);\n  }\n  function pattern(type, value) {\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(pattern) }\n    if (type == \"variable\") { register(value); return cont(); }\n    if (type == \"spread\") return cont(pattern);\n    if (type == \"[\") return contCommasep(eltpattern, \"]\");\n    if (type == \"{\") return contCommasep(proppattern, \"}\");\n  }\n  function proppattern(type, value) {\n    if (type == \"variable\" && !cx.stream.match(/^\\s*:/, false)) {\n      register(value);\n      return cont(maybeAssign);\n    }\n    if (type == \"variable\") cx.marked = \"property\";\n    if (type == \"spread\") return cont(pattern);\n    if (type == \"}\") return pass();\n    return cont(expect(\":\"), pattern, maybeAssign);\n  }\n  function eltpattern() {\n    return pass(pattern, maybeAssign)\n  }\n  function maybeAssign(_type, value) {\n    if (value == \"=\") return cont(expressionNoComma);\n  }\n  function vardefCont(type) {\n    if (type == \",\") return cont(vardef);\n  }\n  function maybeelse(type, value) {\n    if (type == \"keyword b\" && value == \"else\") return cont(pushlex(\"form\", \"else\"), statement, poplex);\n  }\n  function forspec(type, value) {\n    if (value == \"await\") return cont(forspec);\n    if (type == \"(\") return cont(pushlex(\")\"), forspec1, expect(\")\"), poplex);\n  }\n  function forspec1(type) {\n    if (type == \"var\") return cont(vardef, expect(\";\"), forspec2);\n    if (type == \";\") return cont(forspec2);\n    if (type == \"variable\") return cont(formaybeinof);\n    return pass(expression, expect(\";\"), forspec2);\n  }\n  function formaybeinof(_type, value) {\n    if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression); }\n    return cont(maybeoperatorComma, forspec2);\n  }\n  function forspec2(type, value) {\n    if (type == \";\") return cont(forspec3);\n    if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression); }\n    return pass(expression, expect(\";\"), forspec3);\n  }\n  function forspec3(type) {\n    if (type != \")\") cont(expression);\n  }\n  function functiondef(type, value) {\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondef);}\n    if (type == \"variable\") {register(value); return cont(functiondef);}\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, statement, popcontext);\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondef)\n  }\n  function funarg(type, value) {\n    if (value == \"@\") cont(expression, funarg)\n    if (type == \"spread\") return cont(funarg);\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(funarg); }\n    return pass(pattern, maybetype, maybeAssign);\n  }\n  function classExpression(type, value) {\n    // Class expressions may have an optional name.\n    if (type == \"variable\") return className(type, value);\n    return classNameAfter(type, value);\n  }\n  function className(type, value) {\n    if (type == \"variable\") {register(value); return cont(classNameAfter);}\n  }\n  function classNameAfter(type, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, classNameAfter)\n    if (value == \"extends\" || value == \"implements\" || (isTS && type == \",\")) {\n      if (value == \"implements\") cx.marked = \"keyword\";\n      return cont(isTS ? typeexpr : expression, classNameAfter);\n    }\n    if (type == \"{\") return cont(pushlex(\"}\"), classBody, poplex);\n  }\n  function classBody(type, value) {\n    if (type == \"async\" ||\n        (type == \"variable\" &&\n         (value == \"static\" || value == \"get\" || value == \"set\" || (isTS && isModifier(value))) &&\n         cx.stream.match(/^\\s+[\\w$\\xa1-\\uffff]/, false))) {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      return cont(isTS ? classfield : functiondef, classBody);\n    }\n    if (type == \"[\")\n      return cont(expression, maybetype, expect(\"]\"), isTS ? classfield : functiondef, classBody)\n    if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (type == \";\") return cont(classBody);\n    if (type == \"}\") return cont();\n    if (value == \"@\") return cont(expression, classBody)\n  }\n  function classfield(type, value) {\n    if (value == \"?\") return cont(classfield)\n    if (type == \":\") return cont(typeexpr, maybeAssign)\n    if (value == \"=\") return cont(expressionNoComma)\n    return pass(functiondef)\n  }\n  function afterExport(type, value) {\n    if (value == \"*\") { cx.marked = \"keyword\"; return cont(maybeFrom, expect(\";\")); }\n    if (value == \"default\") { cx.marked = \"keyword\"; return cont(expression, expect(\";\")); }\n    if (type == \"{\") return cont(commasep(exportField, \"}\"), maybeFrom, expect(\";\"));\n    return pass(statement);\n  }\n  function exportField(type, value) {\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(expect(\"variable\")); }\n    if (type == \"variable\") return pass(expressionNoComma, exportField);\n  }\n  function afterImport(type) {\n    if (type == \"string\") return cont();\n    if (type == \"(\") return pass(expression);\n    return pass(importSpec, maybeMoreImports, maybeFrom);\n  }\n  function importSpec(type, value) {\n    if (type == \"{\") return contCommasep(importSpec, \"}\");\n    if (type == \"variable\") register(value);\n    if (value == \"*\") cx.marked = \"keyword\";\n    return cont(maybeAs);\n  }\n  function maybeMoreImports(type) {\n    if (type == \",\") return cont(importSpec, maybeMoreImports)\n  }\n  function maybeAs(_type, value) {\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(importSpec); }\n  }\n  function maybeFrom(_type, value) {\n    if (value == \"from\") { cx.marked = \"keyword\"; return cont(expression); }\n  }\n  function arrayLiteral(type) {\n    if (type == \"]\") return cont();\n    return pass(commasep(expressionNoComma, \"]\"));\n  }\n  function enumdef() {\n    return pass(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), commasep(enummember, \"}\"), poplex, poplex)\n  }\n  function enummember() {\n    return pass(pattern, maybeAssign);\n  }\n\n  function isContinuedStatement(state, textAfter) {\n    return state.lastType == \"operator\" || state.lastType == \",\" ||\n      isOperatorChar.test(textAfter.charAt(0)) ||\n      /[,.]/.test(textAfter.charAt(0));\n  }\n\n  function expressionAllowed(stream, state, backUp) {\n    return state.tokenize == tokenBase &&\n      /^(?:operator|sof|keyword [bcd]|case|new|export|default|spread|[\\[{}\\(,;:]|=>)$/.test(state.lastType) ||\n      (state.lastType == \"quasi\" && /\\{\\s*$/.test(stream.string.slice(0, stream.pos - (backUp || 0))))\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      var state = {\n        tokenize: tokenBase,\n        lastType: \"sof\",\n        cc: [],\n        lexical: new JSLexical((basecolumn || 0) - indentUnit, 0, \"block\", false),\n        localVars: parserConfig.localVars,\n        context: parserConfig.localVars && new Context(null, null, false),\n        indented: basecolumn || 0\n      };\n      if (parserConfig.globalVars && typeof parserConfig.globalVars == \"object\")\n        state.globalVars = parserConfig.globalVars;\n      return state;\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if (!state.lexical.hasOwnProperty(\"align\"))\n          state.lexical.align = false;\n        state.indented = stream.indentation();\n        findFatArrow(stream, state);\n      }\n      if (state.tokenize != tokenComment && stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      if (type == \"comment\") return style;\n      state.lastType = type == \"operator\" && (content == \"++\" || content == \"--\") ? \"incdec\" : type;\n      return parseJS(state, style, type, content, stream);\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize == tokenComment) return CodeMirror.Pass;\n      if (state.tokenize != tokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical, top\n      // Kludge to prevent 'maybelse' from blocking lexical scope pops\n      if (!/^\\s*else\\b/.test(textAfter)) for (var i = state.cc.length - 1; i >= 0; --i) {\n        var c = state.cc[i];\n        if (c == poplex) lexical = lexical.prev;\n        else if (c != maybeelse) break;\n      }\n      while ((lexical.type == \"stat\" || lexical.type == \"form\") &&\n             (firstChar == \"}\" || ((top = state.cc[state.cc.length - 1]) &&\n                                   (top == maybeoperatorComma || top == maybeoperatorNoComma) &&\n                                   !/^[,\\.=+\\-*:?[\\(]/.test(textAfter))))\n        lexical = lexical.prev;\n      if (statementIndent && lexical.type == \")\" && lexical.prev.type == \"stat\")\n        lexical = lexical.prev;\n      var type = lexical.type, closing = firstChar == type;\n\n      if (type == \"vardef\") return lexical.indented + (state.lastType == \"operator\" || state.lastType == \",\" ? lexical.info.length + 1 : 0);\n      else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\n      else if (type == \"form\") return lexical.indented + indentUnit;\n      else if (type == \"stat\")\n        return lexical.indented + (isContinuedStatement(state, textAfter) ? statementIndent || indentUnit : 0);\n      else if (lexical.info == \"switch\" && !closing && parserConfig.doubleIndentSwitch != false)\n        return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 2 * indentUnit);\n      else if (lexical.align) return lexical.column + (closing ? 0 : 1);\n      else return lexical.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricInput: /^\\s*(?:case .*?:|default:|\\{|\\})$/,\n    blockCommentStart: jsonMode ? null : \"/*\",\n    blockCommentEnd: jsonMode ? null : \"*/\",\n    blockCommentContinue: jsonMode ? null : \" * \",\n    lineComment: jsonMode ? null : \"//\",\n    fold: \"brace\",\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n\n    helperType: jsonMode ? \"json\" : \"javascript\",\n    jsonldMode: jsonldMode,\n    jsonMode: jsonMode,\n\n    expressionAllowed: expressionAllowed,\n\n    skipExpression: function(state) {\n      var top = state.cc[state.cc.length - 1]\n      if (top == expression || top == expressionNoComma) state.cc.pop()\n    }\n  };\n});\n\nCodeMirror.registerHelper(\"wordChars\", \"javascript\", /[\\w$]/);\n\nCodeMirror.defineMIME(\"text/javascript\", \"javascript\");\nCodeMirror.defineMIME(\"text/ecmascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/javascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/x-javascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/ecmascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/json\", {name: \"javascript\", json: true});\nCodeMirror.defineMIME(\"application/x-json\", {name: \"javascript\", json: true});\nCodeMirror.defineMIME(\"application/ld+json\", {name: \"javascript\", jsonld: true});\nCodeMirror.defineMIME(\"text/typescript\", { name: \"javascript\", typescript: true });\nCodeMirror.defineMIME(\"application/typescript\", { name: \"javascript\", typescript: true });\n\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n/**\n * Author: Hans Engel\n * Branched from CodeMirror's Scheme mode (by Koh Zi Han, based on implementation by Koh Zi Chun)\n */\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"clojure\", function (options) {\n    var BUILTIN = \"builtin\", COMMENT = \"comment\", STRING = \"string\", CHARACTER = \"string-2\",\n        ATOM = \"atom\", NUMBER = \"number\", BRACKET = \"bracket\", KEYWORD = \"keyword\", VAR = \"variable\";\n    var INDENT_WORD_SKIP = options.indentUnit || 2;\n    var NORMAL_INDENT_UNIT = options.indentUnit || 2;\n\n    function makeKeywords(str) {\n        var obj = {}, words = str.split(\" \");\n        for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n        return obj;\n    }\n\n    var atoms = makeKeywords(\"true false nil\");\n\n    var keywords = makeKeywords(\n      \"defn defn- def def- defonce defmulti defmethod defmacro defstruct deftype defprotocol defrecord defproject deftest \" +\n      \"slice defalias defhinted defmacro- defn-memo defnk defnk defonce- defunbound defunbound- defvar defvar- let letfn \" +\n      \"do case cond condp for loop recur when when-not when-let when-first if if-let if-not . .. -> ->> doto and or dosync \" +\n      \"doseq dotimes dorun doall load import unimport ns in-ns refer try catch finally throw with-open with-local-vars \" +\n      \"binding gen-class gen-and-load-class gen-and-save-class handler-case handle\");\n\n    var builtins = makeKeywords(\n        \"* *' *1 *2 *3 *agent* *allow-unresolved-vars* *assert* *clojure-version* *command-line-args* *compile-files* \" +\n        \"*compile-path* *compiler-options* *data-readers* *e *err* *file* *flush-on-newline* *fn-loader* *in* \" +\n        \"*math-context* *ns* *out* *print-dup* *print-length* *print-level* *print-meta* *print-readably* *read-eval* \" +\n        \"*source-path* *unchecked-math* *use-context-classloader* *verbose-defrecords* *warn-on-reflection* + +' - -' -> \" +\n        \"->> ->ArrayChunk ->Vec ->VecNode ->VecSeq -cache-protocol-fn -reset-methods .. / < <= = == > >= EMPTY-NODE accessor \" +\n        \"aclone add-classpath add-watch agent agent-error agent-errors aget alength alias all-ns alter alter-meta! \" +\n        \"alter-var-root amap ancestors and apply areduce array-map aset aset-boolean aset-byte aset-char aset-double \" +\n        \"aset-float aset-int aset-long aset-short assert assoc assoc! assoc-in associative? atom await await-for await1 \" +\n        \"bases bean bigdec bigint biginteger binding bit-and bit-and-not bit-clear bit-flip bit-not bit-or bit-set \" +\n        \"bit-shift-left bit-shift-right bit-test bit-xor boolean boolean-array booleans bound-fn bound-fn* bound? butlast \" +\n        \"byte byte-array bytes case cat cast char char-array char-escape-string char-name-string char? chars chunk chunk-append \" +\n        \"chunk-buffer chunk-cons chunk-first chunk-next chunk-rest chunked-seq? class class? clear-agent-errors \" +\n        \"clojure-version coll? comment commute comp comparator compare compare-and-set! compile complement completing concat cond condp \" +\n        \"conj conj! cons constantly construct-proxy contains? count counted? create-ns create-struct cycle dec dec' decimal? \" +\n        \"declare dedupe default-data-readers definline definterface defmacro defmethod defmulti defn defn- defonce defprotocol \" +\n        \"defrecord defstruct deftype delay delay? deliver denominator deref derive descendants destructure disj disj! dissoc \" +\n        \"dissoc! distinct distinct? doall dorun doseq dosync dotimes doto double double-array doubles drop drop-last \" +\n        \"drop-while eduction empty empty? ensure enumeration-seq error-handler error-mode eval even? every-pred every? ex-data ex-info \" +\n        \"extend extend-protocol extend-type extenders extends? false? ffirst file-seq filter filterv find find-keyword \" +\n        \"find-ns find-protocol-impl find-protocol-method find-var first flatten float float-array float? floats flush fn fn? \" +\n        \"fnext fnil for force format frequencies future future-call future-cancel future-cancelled? future-done? future? \" +\n        \"gen-class gen-interface gensym get get-in get-method get-proxy-class get-thread-bindings get-validator group-by hash \" +\n        \"hash-combine hash-map hash-set identical? identity if-let if-not ifn? import in-ns inc inc' init-proxy instance? \" +\n        \"int int-array integer? interleave intern interpose into into-array ints io! isa? iterate iterator-seq juxt keep \" +\n        \"keep-indexed key keys keyword keyword? last lazy-cat lazy-seq let letfn line-seq list list* list? load load-file \" +\n        \"load-reader load-string loaded-libs locking long long-array longs loop macroexpand macroexpand-1 make-array \" +\n        \"make-hierarchy map map-indexed map? mapcat mapv max max-key memfn memoize merge merge-with meta method-sig methods \" +\n        \"min min-key mod munge name namespace namespace-munge neg? newline next nfirst nil? nnext not not-any? not-empty \" +\n        \"not-every? not= ns ns-aliases ns-imports ns-interns ns-map ns-name ns-publics ns-refers ns-resolve ns-unalias \" +\n        \"ns-unmap nth nthnext nthrest num number? numerator object-array odd? or parents partial partition partition-all \" +\n        \"partition-by pcalls peek persistent! pmap pop pop! pop-thread-bindings pos? pr pr-str prefer-method prefers \" +\n        \"primitives-classnames print print-ctor print-dup print-method print-simple print-str printf println println-str \" +\n        \"prn prn-str promise proxy proxy-call-with-super proxy-mappings proxy-name proxy-super push-thread-bindings pvalues \" +\n        \"quot rand rand-int rand-nth random-sample range ratio? rational? rationalize re-find re-groups re-matcher re-matches re-pattern \" +\n        \"re-seq read read-line read-string realized? reduce reduce-kv reductions ref ref-history-count ref-max-history \" +\n        \"ref-min-history ref-set refer refer-clojure reify release-pending-sends rem remove remove-all-methods \" +\n        \"remove-method remove-ns remove-watch repeat repeatedly replace replicate require reset! reset-meta! resolve rest \" +\n        \"restart-agent resultset-seq reverse reversible? rseq rsubseq satisfies? second select-keys send send-off seq seq? \" +\n        \"seque sequence sequential? set set-error-handler! set-error-mode! set-validator! set? short short-array shorts \" +\n        \"shuffle shutdown-agents slurp some some-fn sort sort-by sorted-map sorted-map-by sorted-set sorted-set-by sorted? \" +\n        \"special-symbol? spit split-at split-with str string? struct struct-map subs subseq subvec supers swap! symbol \" +\n        \"symbol? sync take take-last take-nth take-while test the-ns thread-bound? time to-array to-array-2d trampoline transduce \" +\n        \"transient tree-seq true? type unchecked-add unchecked-add-int unchecked-byte unchecked-char unchecked-dec \" +\n        \"unchecked-dec-int unchecked-divide-int unchecked-double unchecked-float unchecked-inc unchecked-inc-int \" +\n        \"unchecked-int unchecked-long unchecked-multiply unchecked-multiply-int unchecked-negate unchecked-negate-int \"+\n        \"unchecked-remainder-int unchecked-short unchecked-subtract unchecked-subtract-int underive unquote \" +\n        \"unquote-splicing update update-in update-proxy use val vals var-get var-set var? vary-meta vec vector vector-of \" +\n        \"vector? volatile! volatile? vreset! vswap! when when-first when-let when-not while with-bindings with-bindings* with-in-str with-loading-context \" +\n        \"with-local-vars with-meta with-open with-out-str with-precision with-redefs with-redefs-fn xml-seq zero? zipmap \" +\n        \"*default-data-reader-fn* as-> cond-> cond->> reduced reduced? send-via set-agent-send-executor! \" +\n        \"set-agent-send-off-executor! some-> some->>\");\n\n    var indentKeys = makeKeywords(\n        // Built-ins\n        \"ns fn def defn defmethod bound-fn if if-not case condp when while when-not when-first do future comment doto \" +\n        \"locking proxy with-open with-precision reify deftype defrecord defprotocol extend extend-protocol extend-type \" +\n        \"try catch \" +\n\n        // Binding forms\n        \"let letfn binding loop for doseq dotimes when-let if-let \" +\n\n        // Data structures\n        \"defstruct struct-map assoc \" +\n\n        // clojure.test\n        \"testing deftest \" +\n\n        // contrib\n        \"handler-case handle dotrace deftrace\");\n\n    var tests = {\n        digit: /\\d/,\n        digit_or_colon: /[\\d:]/,\n        hex: /[0-9a-f]/i,\n        sign: /[+-]/,\n        exponent: /e/i,\n        keyword_char: /[^\\s\\(\\[\\;\\)\\]]/,\n        symbol: /[\\w*+!\\-\\._?:<>\\/\\xa1-\\uffff]/,\n        block_indent: /^(?:def|with)[^\\/]+$|\\/(?:def|with)/\n    };\n\n    function stateStack(indent, type, prev) { // represents a state stack object\n        this.indent = indent;\n        this.type = type;\n        this.prev = prev;\n    }\n\n    function pushStack(state, indent, type) {\n        state.indentStack = new stateStack(indent, type, state.indentStack);\n    }\n\n    function popStack(state) {\n        state.indentStack = state.indentStack.prev;\n    }\n\n    function isNumber(ch, stream){\n        // hex\n        if ( ch === '0' && stream.eat(/x/i) ) {\n            stream.eatWhile(tests.hex);\n            return true;\n        }\n\n        // leading sign\n        if ( ( ch == '+' || ch == '-' ) && ( tests.digit.test(stream.peek()) ) ) {\n          stream.eat(tests.sign);\n          ch = stream.next();\n        }\n\n        if ( tests.digit.test(ch) ) {\n            stream.eat(ch);\n            stream.eatWhile(tests.digit);\n\n            if ( '.' == stream.peek() ) {\n                stream.eat('.');\n                stream.eatWhile(tests.digit);\n            } else if ('/' == stream.peek() ) {\n                stream.eat('/');\n                stream.eatWhile(tests.digit);\n            }\n\n            if ( stream.eat(tests.exponent) ) {\n                stream.eat(tests.sign);\n                stream.eatWhile(tests.digit);\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    // Eat character that starts after backslash \\\n    function eatCharacter(stream) {\n        var first = stream.next();\n        // Read special literals: backspace, newline, space, return.\n        // Just read all lowercase letters.\n        if (first && first.match(/[a-z]/) && stream.match(/[a-z]+/, true)) {\n            return;\n        }\n        // Read unicode character: \\u1000 \\uA0a1\n        if (first === \"u\") {\n            stream.match(/[0-9a-z]{4}/i, true);\n        }\n    }\n\n    return {\n        startState: function () {\n            return {\n                indentStack: null,\n                indentation: 0,\n                mode: false\n            };\n        },\n\n        token: function (stream, state) {\n            if (state.indentStack == null && stream.sol()) {\n                // update indentation, but only if indentStack is empty\n                state.indentation = stream.indentation();\n            }\n\n            // skip spaces\n            if (state.mode != \"string\" && stream.eatSpace()) {\n                return null;\n            }\n            var returnType = null;\n\n            switch(state.mode){\n                case \"string\": // multi-line string parsing mode\n                    var next, escaped = false;\n                    while ((next = stream.next()) != null) {\n                        if (next == \"\\\"\" && !escaped) {\n\n                            state.mode = false;\n                            break;\n                        }\n                        escaped = !escaped && next == \"\\\\\";\n                    }\n                    returnType = STRING; // continue on in string mode\n                    break;\n                default: // default parsing mode\n                    var ch = stream.next();\n\n                    if (ch == \"\\\"\") {\n                        state.mode = \"string\";\n                        returnType = STRING;\n                    } else if (ch == \"\\\\\") {\n                        eatCharacter(stream);\n                        returnType = CHARACTER;\n                    } else if (ch == \"'\" && !( tests.digit_or_colon.test(stream.peek()) )) {\n                        returnType = ATOM;\n                    } else if (ch == \";\") { // comment\n                        stream.skipToEnd(); // rest of the line is a comment\n                        returnType = COMMENT;\n                    } else if (isNumber(ch,stream)){\n                        returnType = NUMBER;\n                    } else if (ch == \"(\" || ch == \"[\" || ch == \"{\" ) {\n                        var keyWord = '', indentTemp = stream.column(), letter;\n                        /**\n                        Either\n                        (indent-word ..\n                        (non-indent-word ..\n                        (;something else, bracket, etc.\n                        */\n\n                        if (ch == \"(\") while ((letter = stream.eat(tests.keyword_char)) != null) {\n                            keyWord += letter;\n                        }\n\n                        if (keyWord.length > 0 && (indentKeys.propertyIsEnumerable(keyWord) ||\n                                                   tests.block_indent.test(keyWord))) { // indent-word\n                            pushStack(state, indentTemp + INDENT_WORD_SKIP, ch);\n                        } else { // non-indent word\n                            // we continue eating the spaces\n                            stream.eatSpace();\n                            if (stream.eol() || stream.peek() == \";\") {\n                                // nothing significant after\n                                // we restart indentation the user defined spaces after\n                                pushStack(state, indentTemp + NORMAL_INDENT_UNIT, ch);\n                            } else {\n                                pushStack(state, indentTemp + stream.current().length, ch); // else we match\n                            }\n                        }\n                        stream.backUp(stream.current().length - 1); // undo all the eating\n\n                        returnType = BRACKET;\n                    } else if (ch == \")\" || ch == \"]\" || ch == \"}\") {\n                        returnType = BRACKET;\n                        if (state.indentStack != null && state.indentStack.type == (ch == \")\" ? \"(\" : (ch == \"]\" ? \"[\" :\"{\"))) {\n                            popStack(state);\n                        }\n                    } else if ( ch == \":\" ) {\n                        stream.eatWhile(tests.symbol);\n                        return ATOM;\n                    } else {\n                        stream.eatWhile(tests.symbol);\n\n                        if (keywords && keywords.propertyIsEnumerable(stream.current())) {\n                            returnType = KEYWORD;\n                        } else if (builtins && builtins.propertyIsEnumerable(stream.current())) {\n                            returnType = BUILTIN;\n                        } else if (atoms && atoms.propertyIsEnumerable(stream.current())) {\n                            returnType = ATOM;\n                        } else {\n                          returnType = VAR;\n                        }\n                    }\n            }\n\n            return returnType;\n        },\n\n        indent: function (state) {\n            if (state.indentStack == null) return state.indentation;\n            return state.indentStack.indent;\n        },\n\n        closeBrackets: {pairs: \"()[]{}\\\"\\\"\"},\n        lineComment: \";;\"\n    };\n});\n\nCodeMirror.defineMIME(\"text/x-clojure\", \"clojure\");\nCodeMirror.defineMIME(\"text/x-clojurescript\", \"clojure\");\nCodeMirror.defineMIME(\"application/edn\", \"clojure\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n/**\n * Link to the project's GitHub page:\n * https://github.com/pickhardt/coffeescript-codemirror-mode\n */\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"coffeescript\", function(conf, parserConf) {\n  var ERRORCLASS = \"error\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var operators = /^(?:->|=>|\\+[+=]?|-[\\-=]?|\\*[\\*=]?|\\/[\\/=]?|[=!]=|<[><]?=?|>>?=?|%=?|&=?|\\|=?|\\^=?|\\~|!|\\?|(or|and|\\|\\||&&|\\?)=)/;\n  var delimiters = /^(?:[()\\[\\]{},:`=;]|\\.\\.?\\.?)/;\n  var identifiers = /^[_A-Za-z$][_A-Za-z$0-9]*/;\n  var atProp = /^@[_A-Za-z$][_A-Za-z$0-9]*/;\n\n  var wordOperators = wordRegexp([\"and\", \"or\", \"not\",\n                                  \"is\", \"isnt\", \"in\",\n                                  \"instanceof\", \"typeof\"]);\n  var indentKeywords = [\"for\", \"while\", \"loop\", \"if\", \"unless\", \"else\",\n                        \"switch\", \"try\", \"catch\", \"finally\", \"class\"];\n  var commonKeywords = [\"break\", \"by\", \"continue\", \"debugger\", \"delete\",\n                        \"do\", \"in\", \"of\", \"new\", \"return\", \"then\",\n                        \"this\", \"@\", \"throw\", \"when\", \"until\", \"extends\"];\n\n  var keywords = wordRegexp(indentKeywords.concat(commonKeywords));\n\n  indentKeywords = wordRegexp(indentKeywords);\n\n\n  var stringPrefixes = /^('{3}|\\\"{3}|['\\\"])/;\n  var regexPrefixes = /^(\\/{3}|\\/)/;\n  var commonConstants = [\"Infinity\", \"NaN\", \"undefined\", \"null\", \"true\", \"false\", \"on\", \"off\", \"yes\", \"no\"];\n  var constants = wordRegexp(commonConstants);\n\n  // Tokenizers\n  function tokenBase(stream, state) {\n    // Handle scope changes\n    if (stream.sol()) {\n      if (state.scope.align === null) state.scope.align = false;\n      var scopeOffset = state.scope.offset;\n      if (stream.eatSpace()) {\n        var lineOffset = stream.indentation();\n        if (lineOffset > scopeOffset && state.scope.type == \"coffee\") {\n          return \"indent\";\n        } else if (lineOffset < scopeOffset) {\n          return \"dedent\";\n        }\n        return null;\n      } else {\n        if (scopeOffset > 0) {\n          dedent(stream, state);\n        }\n      }\n    }\n    if (stream.eatSpace()) {\n      return null;\n    }\n\n    var ch = stream.peek();\n\n    // Handle docco title comment (single line)\n    if (stream.match(\"####\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    // Handle multi line comments\n    if (stream.match(\"###\")) {\n      state.tokenize = longComment;\n      return state.tokenize(stream, state);\n    }\n\n    // Single line comment\n    if (ch === \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    // Handle number literals\n    if (stream.match(/^-?[0-9\\.]/, false)) {\n      var floatLiteral = false;\n      // Floats\n      if (stream.match(/^-?\\d*\\.\\d+(e[\\+\\-]?\\d+)?/i)) {\n        floatLiteral = true;\n      }\n      if (stream.match(/^-?\\d+\\.\\d*/)) {\n        floatLiteral = true;\n      }\n      if (stream.match(/^-?\\.\\d+/)) {\n        floatLiteral = true;\n      }\n\n      if (floatLiteral) {\n        // prevent from getting extra . on 1..\n        if (stream.peek() == \".\"){\n          stream.backUp(1);\n        }\n        return \"number\";\n      }\n      // Integers\n      var intLiteral = false;\n      // Hex\n      if (stream.match(/^-?0x[0-9a-f]+/i)) {\n        intLiteral = true;\n      }\n      // Decimal\n      if (stream.match(/^-?[1-9]\\d*(e[\\+\\-]?\\d+)?/)) {\n        intLiteral = true;\n      }\n      // Zero by itself with no other piece of number.\n      if (stream.match(/^-?0(?![\\dx])/i)) {\n        intLiteral = true;\n      }\n      if (intLiteral) {\n        return \"number\";\n      }\n    }\n\n    // Handle strings\n    if (stream.match(stringPrefixes)) {\n      state.tokenize = tokenFactory(stream.current(), false, \"string\");\n      return state.tokenize(stream, state);\n    }\n    // Handle regex literals\n    if (stream.match(regexPrefixes)) {\n      if (stream.current() != \"/\" || stream.match(/^.*\\//, false)) { // prevent highlight of division\n        state.tokenize = tokenFactory(stream.current(), true, \"string-2\");\n        return state.tokenize(stream, state);\n      } else {\n        stream.backUp(1);\n      }\n    }\n\n\n\n    // Handle operators and delimiters\n    if (stream.match(operators) || stream.match(wordOperators)) {\n      return \"operator\";\n    }\n    if (stream.match(delimiters)) {\n      return \"punctuation\";\n    }\n\n    if (stream.match(constants)) {\n      return \"atom\";\n    }\n\n    if (stream.match(atProp) || state.prop && stream.match(identifiers)) {\n      return \"property\";\n    }\n\n    if (stream.match(keywords)) {\n      return \"keyword\";\n    }\n\n    if (stream.match(identifiers)) {\n      return \"variable\";\n    }\n\n    // Handle non-detected items\n    stream.next();\n    return ERRORCLASS;\n  }\n\n  function tokenFactory(delimiter, singleline, outclass) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        stream.eatWhile(/[^'\"\\/\\\\]/);\n        if (stream.eat(\"\\\\\")) {\n          stream.next();\n          if (singleline && stream.eol()) {\n            return outclass;\n          }\n        } else if (stream.match(delimiter)) {\n          state.tokenize = tokenBase;\n          return outclass;\n        } else {\n          stream.eat(/['\"\\/]/);\n        }\n      }\n      if (singleline) {\n        if (parserConf.singleLineStringErrors) {\n          outclass = ERRORCLASS;\n        } else {\n          state.tokenize = tokenBase;\n        }\n      }\n      return outclass;\n    };\n  }\n\n  function longComment(stream, state) {\n    while (!stream.eol()) {\n      stream.eatWhile(/[^#]/);\n      if (stream.match(\"###\")) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      stream.eatWhile(\"#\");\n    }\n    return \"comment\";\n  }\n\n  function indent(stream, state, type) {\n    type = type || \"coffee\";\n    var offset = 0, align = false, alignOffset = null;\n    for (var scope = state.scope; scope; scope = scope.prev) {\n      if (scope.type === \"coffee\" || scope.type == \"}\") {\n        offset = scope.offset + conf.indentUnit;\n        break;\n      }\n    }\n    if (type !== \"coffee\") {\n      align = null;\n      alignOffset = stream.column() + stream.current().length;\n    } else if (state.scope.align) {\n      state.scope.align = false;\n    }\n    state.scope = {\n      offset: offset,\n      type: type,\n      prev: state.scope,\n      align: align,\n      alignOffset: alignOffset\n    };\n  }\n\n  function dedent(stream, state) {\n    if (!state.scope.prev) return;\n    if (state.scope.type === \"coffee\") {\n      var _indent = stream.indentation();\n      var matched = false;\n      for (var scope = state.scope; scope; scope = scope.prev) {\n        if (_indent === scope.offset) {\n          matched = true;\n          break;\n        }\n      }\n      if (!matched) {\n        return true;\n      }\n      while (state.scope.prev && state.scope.offset !== _indent) {\n        state.scope = state.scope.prev;\n      }\n      return false;\n    } else {\n      state.scope = state.scope.prev;\n      return false;\n    }\n  }\n\n  function tokenLexer(stream, state) {\n    var style = state.tokenize(stream, state);\n    var current = stream.current();\n\n    // Handle scope changes.\n    if (current === \"return\") {\n      state.dedent = true;\n    }\n    if (((current === \"->\" || current === \"=>\") && stream.eol())\n        || style === \"indent\") {\n      indent(stream, state);\n    }\n    var delimiter_index = \"[({\".indexOf(current);\n    if (delimiter_index !== -1) {\n      indent(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n    }\n    if (indentKeywords.exec(current)){\n      indent(stream, state);\n    }\n    if (current == \"then\"){\n      dedent(stream, state);\n    }\n\n\n    if (style === \"dedent\") {\n      if (dedent(stream, state)) {\n        return ERRORCLASS;\n      }\n    }\n    delimiter_index = \"])}\".indexOf(current);\n    if (delimiter_index !== -1) {\n      while (state.scope.type == \"coffee\" && state.scope.prev)\n        state.scope = state.scope.prev;\n      if (state.scope.type == current)\n        state.scope = state.scope.prev;\n    }\n    if (state.dedent && stream.eol()) {\n      if (state.scope.type == \"coffee\" && state.scope.prev)\n        state.scope = state.scope.prev;\n      state.dedent = false;\n    }\n\n    return style;\n  }\n\n  var external = {\n    startState: function(basecolumn) {\n      return {\n        tokenize: tokenBase,\n        scope: {offset:basecolumn || 0, type:\"coffee\", prev: null, align: false},\n        prop: false,\n        dedent: 0\n      };\n    },\n\n    token: function(stream, state) {\n      var fillAlign = state.scope.align === null && state.scope;\n      if (fillAlign && stream.sol()) fillAlign.align = false;\n\n      var style = tokenLexer(stream, state);\n      if (style && style != \"comment\") {\n        if (fillAlign) fillAlign.align = true;\n        state.prop = style == \"punctuation\" && stream.current() == \".\"\n      }\n\n      return style;\n    },\n\n    indent: function(state, text) {\n      if (state.tokenize != tokenBase) return 0;\n      var scope = state.scope;\n      var closer = text && \"])}\".indexOf(text.charAt(0)) > -1;\n      if (closer) while (scope.type == \"coffee\" && scope.prev) scope = scope.prev;\n      var closes = closer && scope.type === text.charAt(0);\n      if (scope.align)\n        return scope.alignOffset - (closes ? 1 : 0);\n      else\n        return (closes ? scope.prev : scope).offset;\n    },\n\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n  return external;\n});\n\nCodeMirror.defineMIME(\"text/x-coffeescript\", \"coffeescript\");\nCodeMirror.defineMIME(\"text/coffeescript\", \"coffeescript\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"css\", function(config, parserConfig) {\n  var inline = parserConfig.inline\n  if (!parserConfig.propertyKeywords) parserConfig = CodeMirror.resolveMode(\"text/css\");\n\n  var indentUnit = config.indentUnit,\n      tokenHooks = parserConfig.tokenHooks,\n      documentTypes = parserConfig.documentTypes || {},\n      mediaTypes = parserConfig.mediaTypes || {},\n      mediaFeatures = parserConfig.mediaFeatures || {},\n      mediaValueKeywords = parserConfig.mediaValueKeywords || {},\n      propertyKeywords = parserConfig.propertyKeywords || {},\n      nonStandardPropertyKeywords = parserConfig.nonStandardPropertyKeywords || {},\n      fontProperties = parserConfig.fontProperties || {},\n      counterDescriptors = parserConfig.counterDescriptors || {},\n      colorKeywords = parserConfig.colorKeywords || {},\n      valueKeywords = parserConfig.valueKeywords || {},\n      allowNested = parserConfig.allowNested,\n      lineComment = parserConfig.lineComment,\n      supportsAtComponent = parserConfig.supportsAtComponent === true;\n\n  var type, override;\n  function ret(style, tp) { type = tp; return style; }\n\n  // Tokenizers\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (tokenHooks[ch]) {\n      var result = tokenHooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == \"@\") {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"def\", stream.current());\n    } else if (ch == \"=\" || (ch == \"~\" || ch == \"|\") && stream.eat(\"=\")) {\n      return ret(null, \"compare\");\n    } else if (ch == \"\\\"\" || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (ch == \"#\") {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"atom\", \"hash\");\n    } else if (ch == \"!\") {\n      stream.match(/^\\s*\\w*/);\n      return ret(\"keyword\", \"important\");\n    } else if (/\\d/.test(ch) || ch == \".\" && stream.eat(/\\d/)) {\n      stream.eatWhile(/[\\w.%]/);\n      return ret(\"number\", \"unit\");\n    } else if (ch === \"-\") {\n      if (/[\\d.]/.test(stream.peek())) {\n        stream.eatWhile(/[\\w.%]/);\n        return ret(\"number\", \"unit\");\n      } else if (stream.match(/^-[\\w\\\\\\-]+/)) {\n        stream.eatWhile(/[\\w\\\\\\-]/);\n        if (stream.match(/^\\s*:/, false))\n          return ret(\"variable-2\", \"variable-definition\");\n        return ret(\"variable-2\", \"variable\");\n      } else if (stream.match(/^\\w+-/)) {\n        return ret(\"meta\", \"meta\");\n      }\n    } else if (/[,+>*\\/]/.test(ch)) {\n      return ret(null, \"select-op\");\n    } else if (ch == \".\" && stream.match(/^-?[_a-z][_a-z0-9-]*/i)) {\n      return ret(\"qualifier\", \"qualifier\");\n    } else if (/[:;{}\\[\\]\\(\\)]/.test(ch)) {\n      return ret(null, ch);\n    } else if ((ch == \"u\" && stream.match(/rl(-prefix)?\\(/)) ||\n               (ch == \"d\" && stream.match(\"omain(\")) ||\n               (ch == \"r\" && stream.match(\"egexp(\"))) {\n      stream.backUp(1);\n      state.tokenize = tokenParenthesized;\n      return ret(\"property\", \"word\");\n    } else if (/[\\w\\\\\\-]/.test(ch)) {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"property\", \"word\");\n    } else {\n      return ret(null, null);\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped) {\n          if (quote == \")\") stream.backUp(1);\n          break;\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function tokenParenthesized(stream, state) {\n    stream.next(); // Must be '('\n    if (!stream.match(/\\s*[\\\"\\')]/, false))\n      state.tokenize = tokenString(\")\");\n    else\n      state.tokenize = null;\n    return ret(null, \"(\");\n  }\n\n  // Context management\n\n  function Context(type, indent, prev) {\n    this.type = type;\n    this.indent = indent;\n    this.prev = prev;\n  }\n\n  function pushContext(state, stream, type, indent) {\n    state.context = new Context(type, stream.indentation() + (indent === false ? 0 : indentUnit), state.context);\n    return type;\n  }\n\n  function popContext(state) {\n    if (state.context.prev)\n      state.context = state.context.prev;\n    return state.context.type;\n  }\n\n  function pass(type, stream, state) {\n    return states[state.context.type](type, stream, state);\n  }\n  function popAndPass(type, stream, state, n) {\n    for (var i = n || 1; i > 0; i--)\n      state.context = state.context.prev;\n    return pass(type, stream, state);\n  }\n\n  // Parser\n\n  function wordAsValue(stream) {\n    var word = stream.current().toLowerCase();\n    if (valueKeywords.hasOwnProperty(word))\n      override = \"atom\";\n    else if (colorKeywords.hasOwnProperty(word))\n      override = \"keyword\";\n    else\n      override = \"variable\";\n  }\n\n  var states = {};\n\n  states.top = function(type, stream, state) {\n    if (type == \"{\") {\n      return pushContext(state, stream, \"block\");\n    } else if (type == \"}\" && state.context.prev) {\n      return popContext(state);\n    } else if (supportsAtComponent && /@component/.test(type)) {\n      return pushContext(state, stream, \"atComponentBlock\");\n    } else if (/^@(-moz-)?document$/.test(type)) {\n      return pushContext(state, stream, \"documentTypes\");\n    } else if (/^@(media|supports|(-moz-)?document|import)$/.test(type)) {\n      return pushContext(state, stream, \"atBlock\");\n    } else if (/^@(font-face|counter-style)/.test(type)) {\n      state.stateArg = type;\n      return \"restricted_atBlock_before\";\n    } else if (/^@(-(moz|ms|o|webkit)-)?keyframes$/.test(type)) {\n      return \"keyframes\";\n    } else if (type && type.charAt(0) == \"@\") {\n      return pushContext(state, stream, \"at\");\n    } else if (type == \"hash\") {\n      override = \"builtin\";\n    } else if (type == \"word\") {\n      override = \"tag\";\n    } else if (type == \"variable-definition\") {\n      return \"maybeprop\";\n    } else if (type == \"interpolation\") {\n      return pushContext(state, stream, \"interpolation\");\n    } else if (type == \":\") {\n      return \"pseudo\";\n    } else if (allowNested && type == \"(\") {\n      return pushContext(state, stream, \"parens\");\n    }\n    return state.context.type;\n  };\n\n  states.block = function(type, stream, state) {\n    if (type == \"word\") {\n      var word = stream.current().toLowerCase();\n      if (propertyKeywords.hasOwnProperty(word)) {\n        override = \"property\";\n        return \"maybeprop\";\n      } else if (nonStandardPropertyKeywords.hasOwnProperty(word)) {\n        override = \"string-2\";\n        return \"maybeprop\";\n      } else if (allowNested) {\n        override = stream.match(/^\\s*:(?:\\s|$)/, false) ? \"property\" : \"tag\";\n        return \"block\";\n      } else {\n        override += \" error\";\n        return \"maybeprop\";\n      }\n    } else if (type == \"meta\") {\n      return \"block\";\n    } else if (!allowNested && (type == \"hash\" || type == \"qualifier\")) {\n      override = \"error\";\n      return \"block\";\n    } else {\n      return states.top(type, stream, state);\n    }\n  };\n\n  states.maybeprop = function(type, stream, state) {\n    if (type == \":\") return pushContext(state, stream, \"prop\");\n    return pass(type, stream, state);\n  };\n\n  states.prop = function(type, stream, state) {\n    if (type == \";\") return popContext(state);\n    if (type == \"{\" && allowNested) return pushContext(state, stream, \"propBlock\");\n    if (type == \"}\" || type == \"{\") return popAndPass(type, stream, state);\n    if (type == \"(\") return pushContext(state, stream, \"parens\");\n\n    if (type == \"hash\" && !/^#([0-9a-fA-f]{3,4}|[0-9a-fA-f]{6}|[0-9a-fA-f]{8})$/.test(stream.current())) {\n      override += \" error\";\n    } else if (type == \"word\") {\n      wordAsValue(stream);\n    } else if (type == \"interpolation\") {\n      return pushContext(state, stream, \"interpolation\");\n    }\n    return \"prop\";\n  };\n\n  states.propBlock = function(type, _stream, state) {\n    if (type == \"}\") return popContext(state);\n    if (type == \"word\") { override = \"property\"; return \"maybeprop\"; }\n    return state.context.type;\n  };\n\n  states.parens = function(type, stream, state) {\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\n    if (type == \")\") return popContext(state);\n    if (type == \"(\") return pushContext(state, stream, \"parens\");\n    if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\n    if (type == \"word\") wordAsValue(stream);\n    return \"parens\";\n  };\n\n  states.pseudo = function(type, stream, state) {\n    if (type == \"meta\") return \"pseudo\";\n\n    if (type == \"word\") {\n      override = \"variable-3\";\n      return state.context.type;\n    }\n    return pass(type, stream, state);\n  };\n\n  states.documentTypes = function(type, stream, state) {\n    if (type == \"word\" && documentTypes.hasOwnProperty(stream.current())) {\n      override = \"tag\";\n      return state.context.type;\n    } else {\n      return states.atBlock(type, stream, state);\n    }\n  };\n\n  states.atBlock = function(type, stream, state) {\n    if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\n    if (type == \"}\" || type == \";\") return popAndPass(type, stream, state);\n    if (type == \"{\") return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\");\n\n    if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\n\n    if (type == \"word\") {\n      var word = stream.current().toLowerCase();\n      if (word == \"only\" || word == \"not\" || word == \"and\" || word == \"or\")\n        override = \"keyword\";\n      else if (mediaTypes.hasOwnProperty(word))\n        override = \"attribute\";\n      else if (mediaFeatures.hasOwnProperty(word))\n        override = \"property\";\n      else if (mediaValueKeywords.hasOwnProperty(word))\n        override = \"keyword\";\n      else if (propertyKeywords.hasOwnProperty(word))\n        override = \"property\";\n      else if (nonStandardPropertyKeywords.hasOwnProperty(word))\n        override = \"string-2\";\n      else if (valueKeywords.hasOwnProperty(word))\n        override = \"atom\";\n      else if (colorKeywords.hasOwnProperty(word))\n        override = \"keyword\";\n      else\n        override = \"error\";\n    }\n    return state.context.type;\n  };\n\n  states.atComponentBlock = function(type, stream, state) {\n    if (type == \"}\")\n      return popAndPass(type, stream, state);\n    if (type == \"{\")\n      return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\", false);\n    if (type == \"word\")\n      override = \"error\";\n    return state.context.type;\n  };\n\n  states.atBlock_parens = function(type, stream, state) {\n    if (type == \")\") return popContext(state);\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state, 2);\n    return states.atBlock(type, stream, state);\n  };\n\n  states.restricted_atBlock_before = function(type, stream, state) {\n    if (type == \"{\")\n      return pushContext(state, stream, \"restricted_atBlock\");\n    if (type == \"word\" && state.stateArg == \"@counter-style\") {\n      override = \"variable\";\n      return \"restricted_atBlock_before\";\n    }\n    return pass(type, stream, state);\n  };\n\n  states.restricted_atBlock = function(type, stream, state) {\n    if (type == \"}\") {\n      state.stateArg = null;\n      return popContext(state);\n    }\n    if (type == \"word\") {\n      if ((state.stateArg == \"@font-face\" && !fontProperties.hasOwnProperty(stream.current().toLowerCase())) ||\n          (state.stateArg == \"@counter-style\" && !counterDescriptors.hasOwnProperty(stream.current().toLowerCase())))\n        override = \"error\";\n      else\n        override = \"property\";\n      return \"maybeprop\";\n    }\n    return \"restricted_atBlock\";\n  };\n\n  states.keyframes = function(type, stream, state) {\n    if (type == \"word\") { override = \"variable\"; return \"keyframes\"; }\n    if (type == \"{\") return pushContext(state, stream, \"top\");\n    return pass(type, stream, state);\n  };\n\n  states.at = function(type, stream, state) {\n    if (type == \";\") return popContext(state);\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\n    if (type == \"word\") override = \"tag\";\n    else if (type == \"hash\") override = \"builtin\";\n    return \"at\";\n  };\n\n  states.interpolation = function(type, stream, state) {\n    if (type == \"}\") return popContext(state);\n    if (type == \"{\" || type == \";\") return popAndPass(type, stream, state);\n    if (type == \"word\") override = \"variable\";\n    else if (type != \"variable\" && type != \"(\" && type != \")\") override = \"error\";\n    return \"interpolation\";\n  };\n\n  return {\n    startState: function(base) {\n      return {tokenize: null,\n              state: inline ? \"block\" : \"top\",\n              stateArg: null,\n              context: new Context(inline ? \"block\" : \"top\", base || 0, null)};\n    },\n\n    token: function(stream, state) {\n      if (!state.tokenize && stream.eatSpace()) return null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style && typeof style == \"object\") {\n        type = style[1];\n        style = style[0];\n      }\n      override = style;\n      state.state = states[state.state](type, stream, state);\n      return override;\n    },\n\n    indent: function(state, textAfter) {\n      var cx = state.context, ch = textAfter && textAfter.charAt(0);\n      var indent = cx.indent;\n      if (cx.type == \"prop\" && (ch == \"}\" || ch == \")\")) cx = cx.prev;\n      if (cx.prev) {\n        if (ch == \"}\" && (cx.type == \"block\" || cx.type == \"top\" ||\n                          cx.type == \"interpolation\" || cx.type == \"restricted_atBlock\")) {\n          // Resume indentation from parent context.\n          cx = cx.prev;\n          indent = cx.indent;\n        } else if (ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") ||\n            ch == \"{\" && (cx.type == \"at\" || cx.type == \"atBlock\")) {\n          // Dedent relative to current context.\n          indent = Math.max(0, cx.indent - indentUnit);\n        }\n      }\n      return indent;\n    },\n\n    electricChars: \"}\",\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: lineComment,\n    fold: \"brace\"\n  };\n});\n\n  function keySet(array) {\n    var keys = {};\n    for (var i = 0; i < array.length; ++i) {\n      keys[array[i].toLowerCase()] = true;\n    }\n    return keys;\n  }\n\n  var documentTypes_ = [\n    \"domain\", \"regexp\", \"url\", \"url-prefix\"\n  ], documentTypes = keySet(documentTypes_);\n\n  var mediaTypes_ = [\n    \"all\", \"aural\", \"braille\", \"handheld\", \"print\", \"projection\", \"screen\",\n    \"tty\", \"tv\", \"embossed\"\n  ], mediaTypes = keySet(mediaTypes_);\n\n  var mediaFeatures_ = [\n    \"width\", \"min-width\", \"max-width\", \"height\", \"min-height\", \"max-height\",\n    \"device-width\", \"min-device-width\", \"max-device-width\", \"device-height\",\n    \"min-device-height\", \"max-device-height\", \"aspect-ratio\",\n    \"min-aspect-ratio\", \"max-aspect-ratio\", \"device-aspect-ratio\",\n    \"min-device-aspect-ratio\", \"max-device-aspect-ratio\", \"color\", \"min-color\",\n    \"max-color\", \"color-index\", \"min-color-index\", \"max-color-index\",\n    \"monochrome\", \"min-monochrome\", \"max-monochrome\", \"resolution\",\n    \"min-resolution\", \"max-resolution\", \"scan\", \"grid\", \"orientation\",\n    \"device-pixel-ratio\", \"min-device-pixel-ratio\", \"max-device-pixel-ratio\",\n    \"pointer\", \"any-pointer\", \"hover\", \"any-hover\"\n  ], mediaFeatures = keySet(mediaFeatures_);\n\n  var mediaValueKeywords_ = [\n    \"landscape\", \"portrait\", \"none\", \"coarse\", \"fine\", \"on-demand\", \"hover\",\n    \"interlace\", \"progressive\"\n  ], mediaValueKeywords = keySet(mediaValueKeywords_);\n\n  var propertyKeywords_ = [\n    \"align-content\", \"align-items\", \"align-self\", \"alignment-adjust\",\n    \"alignment-baseline\", \"anchor-point\", \"animation\", \"animation-delay\",\n    \"animation-direction\", \"animation-duration\", \"animation-fill-mode\",\n    \"animation-iteration-count\", \"animation-name\", \"animation-play-state\",\n    \"animation-timing-function\", \"appearance\", \"azimuth\", \"backface-visibility\",\n    \"background\", \"background-attachment\", \"background-blend-mode\", \"background-clip\",\n    \"background-color\", \"background-image\", \"background-origin\", \"background-position\",\n    \"background-repeat\", \"background-size\", \"baseline-shift\", \"binding\",\n    \"bleed\", \"bookmark-label\", \"bookmark-level\", \"bookmark-state\",\n    \"bookmark-target\", \"border\", \"border-bottom\", \"border-bottom-color\",\n    \"border-bottom-left-radius\", \"border-bottom-right-radius\",\n    \"border-bottom-style\", \"border-bottom-width\", \"border-collapse\",\n    \"border-color\", \"border-image\", \"border-image-outset\",\n    \"border-image-repeat\", \"border-image-slice\", \"border-image-source\",\n    \"border-image-width\", \"border-left\", \"border-left-color\",\n    \"border-left-style\", \"border-left-width\", \"border-radius\", \"border-right\",\n    \"border-right-color\", \"border-right-style\", \"border-right-width\",\n    \"border-spacing\", \"border-style\", \"border-top\", \"border-top-color\",\n    \"border-top-left-radius\", \"border-top-right-radius\", \"border-top-style\",\n    \"border-top-width\", \"border-width\", \"bottom\", \"box-decoration-break\",\n    \"box-shadow\", \"box-sizing\", \"break-after\", \"break-before\", \"break-inside\",\n    \"caption-side\", \"caret-color\", \"clear\", \"clip\", \"color\", \"color-profile\", \"column-count\",\n    \"column-fill\", \"column-gap\", \"column-rule\", \"column-rule-color\",\n    \"column-rule-style\", \"column-rule-width\", \"column-span\", \"column-width\",\n    \"columns\", \"content\", \"counter-increment\", \"counter-reset\", \"crop\", \"cue\",\n    \"cue-after\", \"cue-before\", \"cursor\", \"direction\", \"display\",\n    \"dominant-baseline\", \"drop-initial-after-adjust\",\n    \"drop-initial-after-align\", \"drop-initial-before-adjust\",\n    \"drop-initial-before-align\", \"drop-initial-size\", \"drop-initial-value\",\n    \"elevation\", \"empty-cells\", \"fit\", \"fit-position\", \"flex\", \"flex-basis\",\n    \"flex-direction\", \"flex-flow\", \"flex-grow\", \"flex-shrink\", \"flex-wrap\",\n    \"float\", \"float-offset\", \"flow-from\", \"flow-into\", \"font\", \"font-feature-settings\",\n    \"font-family\", \"font-kerning\", \"font-language-override\", \"font-size\", \"font-size-adjust\",\n    \"font-stretch\", \"font-style\", \"font-synthesis\", \"font-variant\",\n    \"font-variant-alternates\", \"font-variant-caps\", \"font-variant-east-asian\",\n    \"font-variant-ligatures\", \"font-variant-numeric\", \"font-variant-position\",\n    \"font-weight\", \"grid\", \"grid-area\", \"grid-auto-columns\", \"grid-auto-flow\",\n    \"grid-auto-rows\", \"grid-column\", \"grid-column-end\", \"grid-column-gap\",\n    \"grid-column-start\", \"grid-gap\", \"grid-row\", \"grid-row-end\", \"grid-row-gap\",\n    \"grid-row-start\", \"grid-template\", \"grid-template-areas\", \"grid-template-columns\",\n    \"grid-template-rows\", \"hanging-punctuation\", \"height\", \"hyphens\",\n    \"icon\", \"image-orientation\", \"image-rendering\", \"image-resolution\",\n    \"inline-box-align\", \"justify-content\", \"justify-items\", \"justify-self\", \"left\", \"letter-spacing\",\n    \"line-break\", \"line-height\", \"line-stacking\", \"line-stacking-ruby\",\n    \"line-stacking-shift\", \"line-stacking-strategy\", \"list-style\",\n    \"list-style-image\", \"list-style-position\", \"list-style-type\", \"margin\",\n    \"margin-bottom\", \"margin-left\", \"margin-right\", \"margin-top\",\n    \"marks\", \"marquee-direction\", \"marquee-loop\",\n    \"marquee-play-count\", \"marquee-speed\", \"marquee-style\", \"max-height\",\n    \"max-width\", \"min-height\", \"min-width\", \"move-to\", \"nav-down\", \"nav-index\",\n    \"nav-left\", \"nav-right\", \"nav-up\", \"object-fit\", \"object-position\",\n    \"opacity\", \"order\", \"orphans\", \"outline\",\n    \"outline-color\", \"outline-offset\", \"outline-style\", \"outline-width\",\n    \"overflow\", \"overflow-style\", \"overflow-wrap\", \"overflow-x\", \"overflow-y\",\n    \"padding\", \"padding-bottom\", \"padding-left\", \"padding-right\", \"padding-top\",\n    \"page\", \"page-break-after\", \"page-break-before\", \"page-break-inside\",\n    \"page-policy\", \"pause\", \"pause-after\", \"pause-before\", \"perspective\",\n    \"perspective-origin\", \"pitch\", \"pitch-range\", \"place-content\", \"place-items\", \"place-self\", \"play-during\", \"position\",\n    \"presentation-level\", \"punctuation-trim\", \"quotes\", \"region-break-after\",\n    \"region-break-before\", \"region-break-inside\", \"region-fragment\",\n    \"rendering-intent\", \"resize\", \"rest\", \"rest-after\", \"rest-before\", \"richness\",\n    \"right\", \"rotation\", \"rotation-point\", \"ruby-align\", \"ruby-overhang\",\n    \"ruby-position\", \"ruby-span\", \"shape-image-threshold\", \"shape-inside\", \"shape-margin\",\n    \"shape-outside\", \"size\", \"speak\", \"speak-as\", \"speak-header\",\n    \"speak-numeral\", \"speak-punctuation\", \"speech-rate\", \"stress\", \"string-set\",\n    \"tab-size\", \"table-layout\", \"target\", \"target-name\", \"target-new\",\n    \"target-position\", \"text-align\", \"text-align-last\", \"text-decoration\",\n    \"text-decoration-color\", \"text-decoration-line\", \"text-decoration-skip\",\n    \"text-decoration-style\", \"text-emphasis\", \"text-emphasis-color\",\n    \"text-emphasis-position\", \"text-emphasis-style\", \"text-height\",\n    \"text-indent\", \"text-justify\", \"text-outline\", \"text-overflow\", \"text-shadow\",\n    \"text-size-adjust\", \"text-space-collapse\", \"text-transform\", \"text-underline-position\",\n    \"text-wrap\", \"top\", \"transform\", \"transform-origin\", \"transform-style\",\n    \"transition\", \"transition-delay\", \"transition-duration\",\n    \"transition-property\", \"transition-timing-function\", \"unicode-bidi\",\n    \"user-select\", \"vertical-align\", \"visibility\", \"voice-balance\", \"voice-duration\",\n    \"voice-family\", \"voice-pitch\", \"voice-range\", \"voice-rate\", \"voice-stress\",\n    \"voice-volume\", \"volume\", \"white-space\", \"widows\", \"width\", \"will-change\", \"word-break\",\n    \"word-spacing\", \"word-wrap\", \"z-index\",\n    // SVG-specific\n    \"clip-path\", \"clip-rule\", \"mask\", \"enable-background\", \"filter\", \"flood-color\",\n    \"flood-opacity\", \"lighting-color\", \"stop-color\", \"stop-opacity\", \"pointer-events\",\n    \"color-interpolation\", \"color-interpolation-filters\",\n    \"color-rendering\", \"fill\", \"fill-opacity\", \"fill-rule\", \"image-rendering\",\n    \"marker\", \"marker-end\", \"marker-mid\", \"marker-start\", \"shape-rendering\", \"stroke\",\n    \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-linecap\", \"stroke-linejoin\",\n    \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\", \"text-rendering\",\n    \"baseline-shift\", \"dominant-baseline\", \"glyph-orientation-horizontal\",\n    \"glyph-orientation-vertical\", \"text-anchor\", \"writing-mode\"\n  ], propertyKeywords = keySet(propertyKeywords_);\n\n  var nonStandardPropertyKeywords_ = [\n    \"scrollbar-arrow-color\", \"scrollbar-base-color\", \"scrollbar-dark-shadow-color\",\n    \"scrollbar-face-color\", \"scrollbar-highlight-color\", \"scrollbar-shadow-color\",\n    \"scrollbar-3d-light-color\", \"scrollbar-track-color\", \"shape-inside\",\n    \"searchfield-cancel-button\", \"searchfield-decoration\", \"searchfield-results-button\",\n    \"searchfield-results-decoration\", \"zoom\"\n  ], nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_);\n\n  var fontProperties_ = [\n    \"font-family\", \"src\", \"unicode-range\", \"font-variant\", \"font-feature-settings\",\n    \"font-stretch\", \"font-weight\", \"font-style\"\n  ], fontProperties = keySet(fontProperties_);\n\n  var counterDescriptors_ = [\n    \"additive-symbols\", \"fallback\", \"negative\", \"pad\", \"prefix\", \"range\",\n    \"speak-as\", \"suffix\", \"symbols\", \"system\"\n  ], counterDescriptors = keySet(counterDescriptors_);\n\n  var colorKeywords_ = [\n    \"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\",\n    \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\",\n    \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\",\n    \"cornsilk\", \"crimson\", \"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\",\n    \"darkgray\", \"darkgreen\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\",\n    \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\",\n    \"darkslateblue\", \"darkslategray\", \"darkturquoise\", \"darkviolet\",\n    \"deeppink\", \"deepskyblue\", \"dimgray\", \"dodgerblue\", \"firebrick\",\n    \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\",\n    \"gold\", \"goldenrod\", \"gray\", \"grey\", \"green\", \"greenyellow\", \"honeydew\",\n    \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\",\n    \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\",\n    \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightpink\",\n    \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\",\n    \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\",\n    \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\",\n    \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\",\n    \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\",\n    \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\",\n    \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\",\n    \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\",\n    \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\",\n    \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\",\n    \"slateblue\", \"slategray\", \"snow\", \"springgreen\", \"steelblue\", \"tan\",\n    \"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\",\n    \"whitesmoke\", \"yellow\", \"yellowgreen\"\n  ], colorKeywords = keySet(colorKeywords_);\n\n  var valueKeywords_ = [\n    \"above\", \"absolute\", \"activeborder\", \"additive\", \"activecaption\", \"afar\",\n    \"after-white-space\", \"ahead\", \"alias\", \"all\", \"all-scroll\", \"alphabetic\", \"alternate\",\n    \"always\", \"amharic\", \"amharic-abegede\", \"antialiased\", \"appworkspace\",\n    \"arabic-indic\", \"armenian\", \"asterisks\", \"attr\", \"auto\", \"auto-flow\", \"avoid\", \"avoid-column\", \"avoid-page\",\n    \"avoid-region\", \"background\", \"backwards\", \"baseline\", \"below\", \"bidi-override\", \"binary\",\n    \"bengali\", \"blink\", \"block\", \"block-axis\", \"bold\", \"bolder\", \"border\", \"border-box\",\n    \"both\", \"bottom\", \"break\", \"break-all\", \"break-word\", \"bullets\", \"button\", \"button-bevel\",\n    \"buttonface\", \"buttonhighlight\", \"buttonshadow\", \"buttontext\", \"calc\", \"cambodian\",\n    \"capitalize\", \"caps-lock-indicator\", \"caption\", \"captiontext\", \"caret\",\n    \"cell\", \"center\", \"checkbox\", \"circle\", \"cjk-decimal\", \"cjk-earthly-branch\",\n    \"cjk-heavenly-stem\", \"cjk-ideographic\", \"clear\", \"clip\", \"close-quote\",\n    \"col-resize\", \"collapse\", \"color\", \"color-burn\", \"color-dodge\", \"column\", \"column-reverse\",\n    \"compact\", \"condensed\", \"contain\", \"content\", \"contents\",\n    \"content-box\", \"context-menu\", \"continuous\", \"copy\", \"counter\", \"counters\", \"cover\", \"crop\",\n    \"cross\", \"crosshair\", \"currentcolor\", \"cursive\", \"cyclic\", \"darken\", \"dashed\", \"decimal\",\n    \"decimal-leading-zero\", \"default\", \"default-button\", \"dense\", \"destination-atop\",\n    \"destination-in\", \"destination-out\", \"destination-over\", \"devanagari\", \"difference\",\n    \"disc\", \"discard\", \"disclosure-closed\", \"disclosure-open\", \"document\",\n    \"dot-dash\", \"dot-dot-dash\",\n    \"dotted\", \"double\", \"down\", \"e-resize\", \"ease\", \"ease-in\", \"ease-in-out\", \"ease-out\",\n    \"element\", \"ellipse\", \"ellipsis\", \"embed\", \"end\", \"ethiopic\", \"ethiopic-abegede\",\n    \"ethiopic-abegede-am-et\", \"ethiopic-abegede-gez\", \"ethiopic-abegede-ti-er\",\n    \"ethiopic-abegede-ti-et\", \"ethiopic-halehame-aa-er\",\n    \"ethiopic-halehame-aa-et\", \"ethiopic-halehame-am-et\",\n    \"ethiopic-halehame-gez\", \"ethiopic-halehame-om-et\",\n    \"ethiopic-halehame-sid-et\", \"ethiopic-halehame-so-et\",\n    \"ethiopic-halehame-ti-er\", \"ethiopic-halehame-ti-et\", \"ethiopic-halehame-tig\",\n    \"ethiopic-numeric\", \"ew-resize\", \"exclusion\", \"expanded\", \"extends\", \"extra-condensed\",\n    \"extra-expanded\", \"fantasy\", \"fast\", \"fill\", \"fixed\", \"flat\", \"flex\", \"flex-end\", \"flex-start\", \"footnotes\",\n    \"forwards\", \"from\", \"geometricPrecision\", \"georgian\", \"graytext\", \"grid\", \"groove\",\n    \"gujarati\", \"gurmukhi\", \"hand\", \"hangul\", \"hangul-consonant\", \"hard-light\", \"hebrew\",\n    \"help\", \"hidden\", \"hide\", \"higher\", \"highlight\", \"highlighttext\",\n    \"hiragana\", \"hiragana-iroha\", \"horizontal\", \"hsl\", \"hsla\", \"hue\", \"icon\", \"ignore\",\n    \"inactiveborder\", \"inactivecaption\", \"inactivecaptiontext\", \"infinite\",\n    \"infobackground\", \"infotext\", \"inherit\", \"initial\", \"inline\", \"inline-axis\",\n    \"inline-block\", \"inline-flex\", \"inline-grid\", \"inline-table\", \"inset\", \"inside\", \"intrinsic\", \"invert\",\n    \"italic\", \"japanese-formal\", \"japanese-informal\", \"justify\", \"kannada\",\n    \"katakana\", \"katakana-iroha\", \"keep-all\", \"khmer\",\n    \"korean-hangul-formal\", \"korean-hanja-formal\", \"korean-hanja-informal\",\n    \"landscape\", \"lao\", \"large\", \"larger\", \"left\", \"level\", \"lighter\", \"lighten\",\n    \"line-through\", \"linear\", \"linear-gradient\", \"lines\", \"list-item\", \"listbox\", \"listitem\",\n    \"local\", \"logical\", \"loud\", \"lower\", \"lower-alpha\", \"lower-armenian\",\n    \"lower-greek\", \"lower-hexadecimal\", \"lower-latin\", \"lower-norwegian\",\n    \"lower-roman\", \"lowercase\", \"ltr\", \"luminosity\", \"malayalam\", \"match\", \"matrix\", \"matrix3d\",\n    \"media-controls-background\", \"media-current-time-display\",\n    \"media-fullscreen-button\", \"media-mute-button\", \"media-play-button\",\n    \"media-return-to-realtime-button\", \"media-rewind-button\",\n    \"media-seek-back-button\", \"media-seek-forward-button\", \"media-slider\",\n    \"media-sliderthumb\", \"media-time-remaining-display\", \"media-volume-slider\",\n    \"media-volume-slider-container\", \"media-volume-sliderthumb\", \"medium\",\n    \"menu\", \"menulist\", \"menulist-button\", \"menulist-text\",\n    \"menulist-textfield\", \"menutext\", \"message-box\", \"middle\", \"min-intrinsic\",\n    \"mix\", \"mongolian\", \"monospace\", \"move\", \"multiple\", \"multiply\", \"myanmar\", \"n-resize\",\n    \"narrower\", \"ne-resize\", \"nesw-resize\", \"no-close-quote\", \"no-drop\",\n    \"no-open-quote\", \"no-repeat\", \"none\", \"normal\", \"not-allowed\", \"nowrap\",\n    \"ns-resize\", \"numbers\", \"numeric\", \"nw-resize\", \"nwse-resize\", \"oblique\", \"octal\", \"opacity\", \"open-quote\",\n    \"optimizeLegibility\", \"optimizeSpeed\", \"oriya\", \"oromo\", \"outset\",\n    \"outside\", \"outside-shape\", \"overlay\", \"overline\", \"padding\", \"padding-box\",\n    \"painted\", \"page\", \"paused\", \"persian\", \"perspective\", \"plus-darker\", \"plus-lighter\",\n    \"pointer\", \"polygon\", \"portrait\", \"pre\", \"pre-line\", \"pre-wrap\", \"preserve-3d\",\n    \"progress\", \"push-button\", \"radial-gradient\", \"radio\", \"read-only\",\n    \"read-write\", \"read-write-plaintext-only\", \"rectangle\", \"region\",\n    \"relative\", \"repeat\", \"repeating-linear-gradient\",\n    \"repeating-radial-gradient\", \"repeat-x\", \"repeat-y\", \"reset\", \"reverse\",\n    \"rgb\", \"rgba\", \"ridge\", \"right\", \"rotate\", \"rotate3d\", \"rotateX\", \"rotateY\",\n    \"rotateZ\", \"round\", \"row\", \"row-resize\", \"row-reverse\", \"rtl\", \"run-in\", \"running\",\n    \"s-resize\", \"sans-serif\", \"saturation\", \"scale\", \"scale3d\", \"scaleX\", \"scaleY\", \"scaleZ\", \"screen\",\n    \"scroll\", \"scrollbar\", \"scroll-position\", \"se-resize\", \"searchfield\",\n    \"searchfield-cancel-button\", \"searchfield-decoration\",\n    \"searchfield-results-button\", \"searchfield-results-decoration\", \"self-start\", \"self-end\",\n    \"semi-condensed\", \"semi-expanded\", \"separate\", \"serif\", \"show\", \"sidama\",\n    \"simp-chinese-formal\", \"simp-chinese-informal\", \"single\",\n    \"skew\", \"skewX\", \"skewY\", \"skip-white-space\", \"slide\", \"slider-horizontal\",\n    \"slider-vertical\", \"sliderthumb-horizontal\", \"sliderthumb-vertical\", \"slow\",\n    \"small\", \"small-caps\", \"small-caption\", \"smaller\", \"soft-light\", \"solid\", \"somali\",\n    \"source-atop\", \"source-in\", \"source-out\", \"source-over\", \"space\", \"space-around\", \"space-between\", \"space-evenly\", \"spell-out\", \"square\",\n    \"square-button\", \"start\", \"static\", \"status-bar\", \"stretch\", \"stroke\", \"sub\",\n    \"subpixel-antialiased\", \"super\", \"sw-resize\", \"symbolic\", \"symbols\", \"system-ui\", \"table\",\n    \"table-caption\", \"table-cell\", \"table-column\", \"table-column-group\",\n    \"table-footer-group\", \"table-header-group\", \"table-row\", \"table-row-group\",\n    \"tamil\",\n    \"telugu\", \"text\", \"text-bottom\", \"text-top\", \"textarea\", \"textfield\", \"thai\",\n    \"thick\", \"thin\", \"threeddarkshadow\", \"threedface\", \"threedhighlight\",\n    \"threedlightshadow\", \"threedshadow\", \"tibetan\", \"tigre\", \"tigrinya-er\",\n    \"tigrinya-er-abegede\", \"tigrinya-et\", \"tigrinya-et-abegede\", \"to\", \"top\",\n    \"trad-chinese-formal\", \"trad-chinese-informal\", \"transform\",\n    \"translate\", \"translate3d\", \"translateX\", \"translateY\", \"translateZ\",\n    \"transparent\", \"ultra-condensed\", \"ultra-expanded\", \"underline\", \"unset\", \"up\",\n    \"upper-alpha\", \"upper-armenian\", \"upper-greek\", \"upper-hexadecimal\",\n    \"upper-latin\", \"upper-norwegian\", \"upper-roman\", \"uppercase\", \"urdu\", \"url\",\n    \"var\", \"vertical\", \"vertical-text\", \"visible\", \"visibleFill\", \"visiblePainted\",\n    \"visibleStroke\", \"visual\", \"w-resize\", \"wait\", \"wave\", \"wider\",\n    \"window\", \"windowframe\", \"windowtext\", \"words\", \"wrap\", \"wrap-reverse\", \"x-large\", \"x-small\", \"xor\",\n    \"xx-large\", \"xx-small\"\n  ], valueKeywords = keySet(valueKeywords_);\n\n  var allWords = documentTypes_.concat(mediaTypes_).concat(mediaFeatures_).concat(mediaValueKeywords_)\n    .concat(propertyKeywords_).concat(nonStandardPropertyKeywords_).concat(colorKeywords_)\n    .concat(valueKeywords_);\n  CodeMirror.registerHelper(\"hintWords\", \"css\", allWords);\n\n  function tokenCComment(stream, state) {\n    var maybeEnd = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (maybeEnd && ch == \"/\") {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return [\"comment\", \"comment\"];\n  }\n\n  CodeMirror.defineMIME(\"text/css\", {\n    documentTypes: documentTypes,\n    mediaTypes: mediaTypes,\n    mediaFeatures: mediaFeatures,\n    mediaValueKeywords: mediaValueKeywords,\n    propertyKeywords: propertyKeywords,\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n    fontProperties: fontProperties,\n    counterDescriptors: counterDescriptors,\n    colorKeywords: colorKeywords,\n    valueKeywords: valueKeywords,\n    tokenHooks: {\n      \"/\": function(stream, state) {\n        if (!stream.eat(\"*\")) return false;\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      }\n    },\n    name: \"css\"\n  });\n\n  CodeMirror.defineMIME(\"text/x-scss\", {\n    mediaTypes: mediaTypes,\n    mediaFeatures: mediaFeatures,\n    mediaValueKeywords: mediaValueKeywords,\n    propertyKeywords: propertyKeywords,\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n    colorKeywords: colorKeywords,\n    valueKeywords: valueKeywords,\n    fontProperties: fontProperties,\n    allowNested: true,\n    lineComment: \"//\",\n    tokenHooks: {\n      \"/\": function(stream, state) {\n        if (stream.eat(\"/\")) {\n          stream.skipToEnd();\n          return [\"comment\", \"comment\"];\n        } else if (stream.eat(\"*\")) {\n          state.tokenize = tokenCComment;\n          return tokenCComment(stream, state);\n        } else {\n          return [\"operator\", \"operator\"];\n        }\n      },\n      \":\": function(stream) {\n        if (stream.match(/\\s*\\{/, false))\n          return [null, null]\n        return false;\n      },\n      \"$\": function(stream) {\n        stream.match(/^[\\w-]+/);\n        if (stream.match(/^\\s*:/, false))\n          return [\"variable-2\", \"variable-definition\"];\n        return [\"variable-2\", \"variable\"];\n      },\n      \"#\": function(stream) {\n        if (!stream.eat(\"{\")) return false;\n        return [null, \"interpolation\"];\n      }\n    },\n    name: \"css\",\n    helperType: \"scss\"\n  });\n\n  CodeMirror.defineMIME(\"text/x-less\", {\n    mediaTypes: mediaTypes,\n    mediaFeatures: mediaFeatures,\n    mediaValueKeywords: mediaValueKeywords,\n    propertyKeywords: propertyKeywords,\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n    colorKeywords: colorKeywords,\n    valueKeywords: valueKeywords,\n    fontProperties: fontProperties,\n    allowNested: true,\n    lineComment: \"//\",\n    tokenHooks: {\n      \"/\": function(stream, state) {\n        if (stream.eat(\"/\")) {\n          stream.skipToEnd();\n          return [\"comment\", \"comment\"];\n        } else if (stream.eat(\"*\")) {\n          state.tokenize = tokenCComment;\n          return tokenCComment(stream, state);\n        } else {\n          return [\"operator\", \"operator\"];\n        }\n      },\n      \"@\": function(stream) {\n        if (stream.eat(\"{\")) return [null, \"interpolation\"];\n        if (stream.match(/^(charset|document|font-face|import|(-(moz|ms|o|webkit)-)?keyframes|media|namespace|page|supports)\\b/, false)) return false;\n        stream.eatWhile(/[\\w\\\\\\-]/);\n        if (stream.match(/^\\s*:/, false))\n          return [\"variable-2\", \"variable-definition\"];\n        return [\"variable-2\", \"variable\"];\n      },\n      \"&\": function() {\n        return [\"atom\", \"atom\"];\n      }\n    },\n    name: \"css\",\n    helperType: \"less\"\n  });\n\n  CodeMirror.defineMIME(\"text/x-gss\", {\n    documentTypes: documentTypes,\n    mediaTypes: mediaTypes,\n    mediaFeatures: mediaFeatures,\n    propertyKeywords: propertyKeywords,\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n    fontProperties: fontProperties,\n    counterDescriptors: counterDescriptors,\n    colorKeywords: colorKeywords,\n    valueKeywords: valueKeywords,\n    supportsAtComponent: true,\n    tokenHooks: {\n      \"/\": function(stream, state) {\n        if (!stream.eat(\"*\")) return false;\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      }\n    },\n    name: \"css\",\n    helperType: \"gss\"\n  });\n\n});\n","CodeMirror.defineMode(\"gfm\", function(config, modeConfig) {\n    var codeDepth = 0;\n\n    function blankLine(state) {\n        state.code = false;\n        return null;\n    }\n    var gfmOverlay = {\n        startState: function() {\n            return {\n                code: false,\n                ateSpace: false\n            };\n        },\n        copyState: function(s) {\n            return {\n                code: s.code,\n                ateSpace: s.ateSpace\n            };\n        },\n        token: function(stream, state) {\n            // Hack to prevent formatting override inside code blocks (block and inline)\n            /*if (state.codeBlock) {\n                if (stream.match(/^```/)) {\n                    state.codeBlock = false;\n                    return null;\n                }\n                stream.skipToEnd();\n                return null;\n            }*/\n            if (stream.sol()) {\n                state.code = false;\n            }\n            /*if (stream.sol() && stream.match(/^```/)) {\n                stream.skipToEnd();\n                state.codeBlock = true;\n                return null;\n            }*/\n            // If this block is changed, it may need to be updated in Markdown mode\n            if (stream.peek() === '`') {\n                stream.next();\n                var before = stream.pos;\n                stream.eatWhile('`');\n                var difference = 1 + stream.pos - before;\n                if (!state.code) {\n                    codeDepth = difference;\n                    state.code = true;\n                } else {\n                    if (difference === codeDepth) { // Must be exact\n                        state.code = false;\n                    }\n                }\n                return null;\n            } else if (state.code) {\n                stream.next();\n                return null;\n            }\n            // Check if space. If so, links can be formatted later on\n            if (stream.eatSpace()) {\n                state.ateSpace = true;\n                return null;\n            }\n            if (stream.sol() || state.ateSpace) {\n                state.ateSpace = false;\n                /*if (stream.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+@)?(?:[a-f0-9]{7,40}\\b)/)) {\n                    // User/Project@SHA\n                    // User@SHA\n                    // SHA\n                    return \"link\";\n                } else if (stream.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+)?#[0-9]+\\b/)) {\n                    // User/Project#Num\n                    // User#Num\n                    // #Num\n                    return \"link\";\n                }*/\n            }\n            if (stream.match(/^((?:(https?|mailto):(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]|\\([^\\s()<>]*\\))+(?:\\([^\\s()<>]*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))/i)) {\n                // URLs\n                // Taken from http://daringfireball.net/2010/07/improved_regex_for_matching_urls\n                // And then (issue #1160) simplified to make it not crash the Chrome Regexp engine\n                return \"link\";\n            }\n            stream.next();\n            return null;\n        },\n        blankLine: blankLine\n    };\n\n    var markdownConfig = {\n        underscoresBreakWords: false,\n        taskLists: true,\n        fencedCodeBlocks: true\n    };\n    for (var attr in modeConfig) {\n        markdownConfig[attr] = modeConfig[attr];\n    }\n    markdownConfig.name = \"markdown\";\n    CodeMirror.defineMIME(\"gfmBase\", markdownConfig);\n    return CodeMirror.overlayMode(CodeMirror.getMode(config, \"gfmBase\"), gfmOverlay);\n}, \"markdown\");\n","CodeMirror.defineMode(\"markdown\", function(cmCfg, modeCfg) {\n\n    var htmlFound = CodeMirror.modes.hasOwnProperty(\"xml\");\n\n    var htmlMode = CodeMirror.getMode(cmCfg, htmlFound ? {\n        name: \"xml\",\n        htmlMode: true\n    } : \"text/plain\");\n\n    var htmlModeMissing = htmlMode.name == \"null\"\n\n    function copyObj(obj, target) {\n        if (!target) target = {};\n        for (var prop in obj)\n            if (obj.hasOwnProperty(prop) && !target.hasOwnProperty(prop))\n                target[prop] = obj[prop];\n        return target;\n    }\n\n    var getMode = (function() {\n        return function(lang) {\n            if(lang == \"markdown\" || lang == \"gfm\"){\n                return CodeMirror.getMode(cmCfg, {name: lang, isOverlay: true});\n            }\n            var modeLang = getCodeMirrorMode(lang, true);\n            return modeLang ? CodeMirror.getMode(cmCfg, modeLang) : null;\n        };\n    }());\n\n    // Should characters that affect highlighting be highlighted separate?\n    // Does not include characters that will be output (such as `1.` and `-` for lists)\n    if (modeCfg.highlightFormatting === undefined)\n        modeCfg.highlightFormatting = false;\n\n    // Should underscores in words open/close em/strong?\n    if (modeCfg.underscoresBreakWords === undefined)\n        modeCfg.underscoresBreakWords = false;\n\n    // Turn on fenced code blocks? (\"```\" to start/end)\n    if (modeCfg.fencedCodeBlocks === undefined) modeCfg.fencedCodeBlocks = false;\n\n    // Turn on task lists? (\"- [ ] \" and \"- [x] \")\n    if (modeCfg.taskLists === undefined) modeCfg.taskLists = true;\n\n    var codeDepth = 0;\n\n    var header = 'header',\n        code = 'comment',\n        quote1 = 'atom',\n        quote2 = 'number',\n        list1 = 'variable-2',\n        list2 = 'variable-2',\n        list3 = 'variable-2',\n        hr = 'hr',\n        image = 'tag',\n        formatting = 'formatting',\n        linkinline = 'link',\n        linkemail = 'link',\n        linktext = 'link',\n        linkhref = 'string',\n        em = 'em',\n        del = 'del',\n        strong = 'strong';\n\n    var hrRE = /^([*\\-=_])(?:\\s*\\1){2,}\\s*$/,\n        ulRE = /^[*\\-+]\\s+/,\n        olRE = /^[0-9]+\\.\\s+/,\n        taskListRE = /^\\[(x| )\\]\\s/ // Must follow ulRE or olRE\n        ,\n        atxHeaderRE = /^#+/,\n        atxHeaderREStrict = /^#+\\s+/,\n        tableLikeRE = /^ *(\\|[^\\|]*\\|.+\\|)\\s*$/,\n        npTableLikeRE = /^ *[^\\|]+\\|.+/,\n        setextHeaderRE = /^(?:\\={1,}|-{1,})$/,\n        yamlRE = /^---$/,\n        textRE = /^[^#!\\[\\]*_\\\\<>~` \"'(]+/,\n        mathBlockRE = /^\\s*\\$\\$\\s*$/;\n\n    function switchInline(stream, state, f) {\n        state.f = state.inline = f;\n        return f(stream, state);\n    }\n\n    function switchBlock(stream, state, f) {\n        state.f = state.block = f;\n        return f(stream, state);\n    }\n\n\n    // Blocks\n\n    function blankLine(state) {\n        // Reset linkTitle state\n        state.linkTitle = false;\n        // Reset EM state\n        state.em = false;\n        // Reset STRONG state\n        state.strong = false;\n\n        state.del = false;\n        // Reset state.quote\n        state.quote = 0;\n        if (!htmlFound && state.f == htmlBlock) {\n            var exit = htmlModeMissing\n            if (!exit) {\n                var inner = CodeMirror.innerMode(htmlMode, state.htmlState)\n                exit = inner.mode.name == \"xml\" && inner.state.tagStart === null &&\n                (!inner.state.context && inner.state.tokenize.isInText)\n            }\n            if (exit) {\n                state.f = inlineNormal;\n                state.block = blockNormal;\n                state.htmlState = null;\n            }\n        }\n        // Reset state.trailingSpace\n        state.trailingSpace = 0;\n        state.trailingSpaceNewLine = false;\n        // Mark this line as blank\n        state.thisLineHasContent = false;\n\n        if(state.localMode){\n            return \"line-cm-s-inner overlay\";\n        }\n\n        return null;\n    }\n\n    function blockNormal(stream, state) {\n\n        var prevLineIsList = (state.list !== false);\n        if (state.list !== false && state.indentationDiff >= 0) { // Continued list\n            if (state.indentationDiff < 4) { // Only adjust indentation if *not* a code block\n                state.indentation -= state.indentationDiff;\n            }\n            state.list = null;\n        } else if (state.list !== false && state.indentation > 0) {\n            state.list = null;\n            state.listDepth = Math.floor(state.indentation / 4);\n        } else if (state.list !== false) { // No longer a list\n            state.list = false;\n            state.listDepth = 0;\n        }\n\n        var match = null;\n        if (state.indentationDiff >= 4) {\n            state.indentation -= 4;\n            stream.skipToEnd();\n            return code;\n        } else if (stream.eatSpace()) {\n            return null;\n        } else if (!state.inYAML && state.lineBefore === undefined && stream.match(yamlRE)){\n            state.inYAML = true;\n            return \"hr\";\n        } else if(state.inYAML && stream.match(yamlRE)){\n            state.inYAML = false;\n            return \"hr\";\n        } else if(state.inYAML){\n            stream.skipToEnd();\n            return \"line-cm-yaml\";\n        } else if (stream.match(mathBlockRE)){\n            state.inMath = !state.inMath;\n            stream.skipToEnd();\n            return \"comment\";\n        } else if (state.inMath){\n            state.localMode = getMode(\"latex\");\n            if (state.localMode) state.localState = state.localMode.startState ? state.localMode.startState() : {};\n            switchBlock(stream, state, local);\n            if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n            state.codeBlock = true;\n            return getType(state, stream.pos);\n        } else if (match = stream.match(File.option.strictMarkdown ? atxHeaderREStrict : atxHeaderRE)) {\n            state.header = match[0].length <= 6 ? match[0].length : 6;\n            if (modeCfg.highlightFormatting) state.formatting = \"header\";\n            state.blockStyles.push(\"line-cm-header\");\n            state.blockStyles.push(\"line-cm-header\" + state.header);\n            state.f = state.inline;\n            return getType(state);\n        } else if (state.prevLineHasContent && (match = stream.match(setextHeaderRE))) {\n            state.header = match[0].charAt(0) == '=' ? 1 : 2;\n            if (modeCfg.highlightFormatting) state.formatting = \"header\";\n            state.f = state.inline;\n            return getType(state);\n        } else if (stream.eat('>')) {\n            state.indentation++;\n            state.quote = 1;\n            if (modeCfg.highlightFormatting) state.formatting = \"quote\";\n            stream.eatSpace();\n            while (stream.eat('>')) {\n                stream.eatSpace();\n                state.quote++;\n            }\n            state.blockStyles.push(\"line-cm-atom\");\n            return getType(state, stream.pos);\n        } else if (stream.peek() === '[') {\n            return switchInline(stream, state, footnoteLink);\n        } else if (stream.match(hrRE, true)) {\n            return hr;\n        } else if (((!state.prevLineHasContent || prevLineIsList) &&  stream.match(ulRE, false) || stream.match(olRE, false))) {\n            var listType = null;\n            if (stream.match(ulRE, true)) {\n                listType = 'ul';\n            } else {\n                stream.match(olRE, true);\n                listType = 'ol';\n            }\n            state.indentation += 4;\n            state.list = true;\n            state.listDepth++;\n            if (modeCfg.taskLists && stream.match(taskListRE, false)) {\n                state.taskList = true;\n            }\n            // state.f = state.inline;\n            if (modeCfg.highlightFormatting) state.formatting = [\"list\", \"list-\" + listType];\n            return getType(state, stream.pos);\n        } else if (modeCfg.fencedCodeBlocks && stream.match(/^( *(`{3,}|~{3,}) *)([^\\n`]+)? *$/, true)) {\n            // try switching mode\n            state.localMode = getMode(RegExp.$3);\n            state.codeBlock = RegExp.$2;\n            if (state.localMode) state.localState = state.localMode.startState ? state.localMode.startState() : {};\n            state.lineBefore = \"\";\n            switchBlock(stream, state, local);\n            if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n            return getType(state, stream.pos);\n        } else if(state.lineAfter && (match = state.lineAfter.match(setextHeaderRE, false))){\n            var header = match[0].charAt(0) == '=' ? 1 : 2;\n            state.blockStyles.push(\"line-cm-header cm-header\");\n            state.blockStyles.push(\"line-cm-header\" + header);\n            state.blockStyles.push(\"cm-header\" + header);\n        } else if(stream.match(tableLikeRE, false) && ((state.lineAfter || \"\").match(tableLikeRE, false) || (state.lineBefore || \"\").match(tableLikeRE, false))) {\n            state.blockStyles.push(\"line-cm-table-row\");\n            state.f = state.inline;\n        }\n\n        return switchInline(stream, state, state.inline);\n    }\n\n    function htmlBlock(stream, state) {\n        var style = htmlMode.token(stream, state.htmlState);\n        if (!htmlModeMissing) {\n            var inner = CodeMirror.innerMode(htmlMode, state.htmlState);\n            \n            if(/^(span|a|b|i|u|strong|em|font|s|small|big|strike|cite|q|sub|sup|mark)$/.exec(inner.state.tagName || \"\")) {\n                state.md_inside = true;\n            }\n\n            if ((inner.mode.name == \"xml\" && inner.state.tagStart === null &&\n                (!inner.state.context && inner.state.tokenize.isInText)) ||\n                (state.md_inside && stream.current().indexOf(\">\") > -1)) {\n                    state.f = inlineNormal;\n                    state.block = blockNormal;\n                    state.htmlState = null;\n            }\n        }\n        return style;\n    }\n\n    function buildEndReg(endReg, state){\n        if(state.quote){\n            endReg = \"^\\\\s*>?\" + endReg;\n        }\n\n        return new RegExp(endReg);\n    }\n\n    function local(stream, state) {\n        function stopCode(){\n            state.localMode = state.localState = null;\n            state.f = inlineNormal;\n            state.block = blockNormal;\n            if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n            var returnType = getType(state);\n            state.inMath = false;\n            state.codeBlock = false;\n            return returnType;\n        }\n\n        if (state.inMath && stream.sol() && stream.match(buildEndReg(\"\\\\s*\\\\$\\\\$\\\\s*\", state), true)) {\n            var returnType = stopCode();\n            return returnType;\n        }\n\n        if (!state.inMath && stream.sol() && stream.match(buildEndReg(\n            \"\\\\s*\" + \n            ((state.codeBlock + \"\")[0] == \"~\" ? \"~{3,}\" : \"`{3,}\") + \n            \"\\\\s*\", state), true)) {\n            var returnType = stopCode();\n            return returnType;\n        } else if (state.localMode) {\n            state.localState.lineBefore = state.lineBefore;\n            state.localState.lineAfter = state.lineAfter;\n            return \"line-cm-s-inner overlay \" + (state.localMode.token(stream, state.localState) || \"\");\n        } else {\n            stream.skipToEnd();\n            return \"line-cm-s-inner overlay code\";\n        }\n    }\n\n    // Inline\n    function getType(state, blockStart) {\n        var styles = [];\n\n        if (state.formatting) {\n            styles.push(formatting);\n\n            if (typeof state.formatting === \"string\") state.formatting = [state.formatting];\n\n            for (var i = 0; i < state.formatting.length; i++) {\n                styles.push(formatting + \"-\" + state.formatting[i]);\n\n                if (state.formatting[i] === \"header\") {\n                    styles.push(formatting + \"-\" + state.formatting[i] + state.header);\n                }\n            }\n        }\n\n        styles = styles.concat(state.blockStyles || []);\n        if(blockStart) {\n            styles.push(\"block-start\");\n            state.atBlockStart = blockStart;\n        }\n\n        if (state.taskList) {\n            styles.push(\"block-start\");\n        }\n\n        if (state.taskOpen) {\n            styles.push(\"meta\");\n            return styles.length ? styles.join(' ') : null;\n        }\n        if (state.taskClosed) {\n            styles.push(\"property\");\n            return styles.length ? styles.join(' ') : null;\n        }\n\n        if (state.linkHref) {\n            styles.push(linkhref);\n            return styles.length ? styles.join(' ') : null;\n        }\n\n        if (state.strong) {\n            styles.push(strong);\n        }\n        if (state.em) {\n            styles.push(em);\n        }\n        if (state.del) {\n            styles.push(del);\n        }\n        if (state.linkText) {\n            styles.push(linktext);\n        }\n\n        if (state.code || state.codeBlock) {\n            styles.push(code);\n        }\n\n        if (state.header) {\n            styles.push(header);\n            styles.push(header + state.header);\n        }\n        if (state.quote) {\n            styles.push(state.quote % 2 ? quote1 : quote2);\n        }\n        if (state.list !== false) {\n            var listMod = (state.listDepth - 1) % 3;\n            if (!listMod) {\n                styles.push(list1);\n            } else if (listMod === 1) {\n                styles.push(list2);\n            } else {\n                styles.push(list3);\n            }\n        }\n\n        if (state.trailingSpaceNewLine) {\n            styles.push(\"trailing-space-new-line\");\n        } else if (state.trailingSpace) {\n            styles.push(\"trailing-space-\" + (state.trailingSpace % 2 ? \"a\" : \"b\"));\n        }\n\n        return styles.length ? styles.join(' ') : null;\n    }\n\n    function handleText(stream, state) {\n        if (stream.match(textRE, true)) {\n            return getType(state);\n        }\n        return undefined;\n    }\n\n    function inlineNormal(stream, state) {\n        var style = state.text(stream, state);\n\n        if (typeof style !== 'undefined')\n            return style;\n\n        if (state.list) { // List marker (*, +, -, 1., etc)\n            state.list = null;\n            return getType(state);\n        }\n\n        if (state.taskList) {\n            var taskOpen = stream.match(taskListRE, true)[1] !== \"x\";\n            if (taskOpen) state.taskOpen = true;\n            else state.taskClosed = true;\n            state.formatting = \"task\";\n            var type = getType(state);\n            state.taskList = false;\n            state.taskOpen = false;\n            state.taskClosed = false;\n            return type;\n        }\n\n        state.taskOpen = false;\n        state.taskClosed = false;\n\n        if (state.header && stream.match(/^#+ *$/, true)) {\n            if (modeCfg.highlightFormatting) state.formatting = \"header\";\n            return getType(state);\n        }\n\n        // Get sol() value now, before character is consumed\n        var sol = stream.sol();\n\n        var ch = stream.next();\n\n        if (state.escape) {\n            state.escape = false;\n            return getType(state);\n        }\n\n        if (ch === '\\\\') {\n            if (modeCfg.highlightFormatting) state.formatting = \"escape\";\n            state.escape = true;\n            return getType(state);\n        }\n\n        // Matches link titles present on next line\n        if (state.linkTitle) {\n            state.linkTitle = false;\n            var matchCh = ch;\n            if (ch === '(') {\n                matchCh = ')';\n            }\n            matchCh = (matchCh + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n            var regex = '^\\\\s*(?:[^' + matchCh + '\\\\\\\\]+|\\\\\\\\\\\\\\\\|\\\\\\\\.)' + matchCh;\n            if (stream.match(new RegExp(regex), true)) {\n                return linkhref;\n            }\n        }\n\n        // If this block is changed, it may need to be updated in GFM mode\n        if (ch === '`') {\n            var previousFormatting = state.formatting;\n            if (modeCfg.highlightFormatting) state.formatting = \"code\";\n            var t = getType(state);\n            var before = stream.pos;\n            stream.eatWhile('`');\n            var difference = 1 + stream.pos - before;\n            if (!state.code) {\n                codeDepth = difference;\n                state.code = true;\n                return getType(state);\n            } else {\n                if (difference === codeDepth) { // Must be exact\n                    state.code = false;\n                    return t;\n                }\n                state.formatting = previousFormatting;\n                return getType(state);\n            }\n        } else if (state.code) {\n            return getType(state);\n        }\n\n        if (ch === '!' && stream.match(/\\[[^\\]]*\\] ?(?:\\(|\\[)/, false)) {\n            stream.match(/\\[[^\\]]*\\]/);\n            state.inline = state.f = linkHref;\n            return image;\n        }\n\n        if (ch === '[' && stream.match(/.*\\](\\(| ?\\[)/, false)) {\n            state.linkText = true;\n            if (modeCfg.highlightFormatting) state.formatting = \"link\";\n            return getType(state);\n        }\n\n        if (ch === ']' && state.linkText) {\n            if (modeCfg.highlightFormatting) state.formatting = \"link\";\n            var type = getType(state);\n            state.linkText = false;\n            state.inline = state.f = linkHref;\n            return type;\n        }\n\n        if (ch === '<' && stream.match(/^(https?|ftps?):\\/\\/(?:[^\\\\>]|\\\\.)+>/, false)) {\n            state.f = state.inline = linkInline;\n            if (modeCfg.highlightFormatting) state.formatting = \"link\";\n            var type = getType(state);\n            if (type) {\n                type += \" \";\n            } else {\n                type = \"\";\n            }\n            return type + linkinline;\n        }\n\n        if (ch === '<' && stream.match(/^[^> \\\\]+@(?:[^\\\\>]|\\\\.)+>/, false)) {\n            state.f = state.inline = linkInline;\n            if (modeCfg.highlightFormatting) state.formatting = \"link\";\n            var type = getType(state);\n            if (type) {\n                type += \" \";\n            } else {\n                type = \"\";\n            }\n            return type + linkemail;\n        }\n\n        if (ch === '<' && stream.match(/^(!--|\\?|!\\[CDATA\\[|[a-z][a-z0-9-]*(?:\\s+[a-z_:.\\-]+(?:\\s*=\\s*[^>]+)?)*\\s*(?:>|$))/i, false)) {\n            var end = stream.string.indexOf(\">\", stream.pos);\n            if (end != -1) {\n                var atts = stream.string.substring(stream.start, end);\n                if (/markdown\\s*=\\s*('|\"){0,1}1('|\"){0,1}/.test(atts)) state.md_inside = true;\n            }\n            stream.backUp(1);\n            state.htmlState = CodeMirror.startState(htmlMode);\n            return switchBlock(stream, state, htmlBlock);\n        }\n\n        if (ch === '<' && stream.match(/^\\/?\\w*?>/)) {\n            state.md_inside = false;\n            return \"tag\";\n        }\n\n        var ignoreUnderscore = false;\n        if (!modeCfg.underscoresBreakWords) {\n            if (ch === '_' && stream.peek() !== '_' && stream.match(/(\\w)/, false)) {\n                var prevPos = stream.pos - 2;\n                if (prevPos >= 0) {\n                    var prevCh = stream.string.charAt(prevPos);\n                    if (prevCh !== '_' && prevCh.match(/(\\w)/, false)) {\n                        ignoreUnderscore = true;\n                    }\n                }\n            }\n        }\n\n        if(ch === '~' && stream.eat('~')){\n            if(state.del){\n                modeCfg.highlightFormatting && (state.formatting = \"del\");\n                t = getType(state);\n                state.del = false;\n                return t;\n            } else {\n                state.del = true;\n                return getType(state);\n            }\n        }\n\n        if (ch === '*' || (ch === '_' && !ignoreUnderscore)) {\n            if (sol && stream.peek() === ' ') {\n                // Do nothing, surrounded by newline and space\n            } else if (state.strong === ch && stream.eat(ch)) { // Remove STRONG\n                if (modeCfg.highlightFormatting) state.formatting = \"strong\";\n                var t = getType(state);\n                state.strong = false;\n                return t;\n            } else if (!state.strong && stream.eat(ch)) { // Add STRONG\n                state.strong = ch;\n                if (modeCfg.highlightFormatting) state.formatting = \"strong\";\n                return getType(state);\n            } else if (state.em === ch) { // Remove EM\n                if (modeCfg.highlightFormatting) state.formatting = \"em\";\n                var t = getType(state);\n                state.em = false;\n                return t;\n            } else if (!state.em) { // Add EM\n                state.em = ch;\n                if (modeCfg.highlightFormatting) state.formatting = \"em\";\n                return getType(state);\n            }\n        } else if (ch === ' ') {\n            if (stream.eat('*') || stream.eat('_')) { // Probably surrounded by spaces\n                if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n                    return getType(state);\n                } else { // Not surrounded by spaces, back up pointer\n                    stream.backUp(1);\n                }\n            }\n            if(ch === '~' && stream.eat('~')){\n                if(state.del){\n                    modeCfg.highlightFormatting && (state.formatting = \"del\");\n                    t = getType(state);\n                    state.del = false;\n                    return t;\n                } else {\n                    state.del = true;\n                    return getType(state);\n                }\n            }\n        }\n\n        if (ch === ' ') {\n            if (stream.match(/ +$/, false)) {\n                state.trailingSpace++;\n            } else if (state.trailingSpace) {\n                state.trailingSpaceNewLine = true;\n            }\n        }\n\n        return getType(state);\n    }\n\n    function linkInline(stream, state) {\n        var ch = stream.next();\n\n        if (ch === \">\") {\n            state.f = state.inline = inlineNormal;\n            if (modeCfg.highlightFormatting) state.formatting = \"link\";\n            var type = getType(state);\n            if (type) {\n                type += \" \";\n            } else {\n                type = \"\";\n            }\n            return type + linkinline;\n        }\n\n        stream.match(/^[^>]+/, true);\n\n        return linkinline;\n    }\n\n    function linkHref(stream, state) {\n        // Check if space, and return NULL if so (to avoid marking the space)\n        if (stream.eatSpace()) {\n            return null;\n        }\n        var ch = stream.next();\n        if (ch === '(' || ch === '[') {\n            state.f = state.inline = getLinkHrefInside(ch === \"(\" ? \")\" : \"]\");\n            if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n            state.linkHref = true;\n            return getType(state);\n        }\n        return 'error';\n    }\n\n    function getLinkHrefInside(endChar) {\n        return function(stream, state) {\n            var ch = stream.next();\n\n            if (ch === endChar) {\n                state.f = state.inline = inlineNormal;\n                if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n                var returnState = getType(state);\n                state.linkHref = false;\n                return returnState;\n            }\n\n            if (stream.match(inlineRE(endChar), true)) {\n                stream.backUp(1);\n            }\n\n            state.linkHref = true;\n            return getType(state);\n        };\n    }\n\n    function footnoteLink(stream, state) {\n        if (stream.match(/^[^\\]]*\\]:/, false)) {\n            state.f = footnoteLinkInside;\n            stream.next(); // Consume [\n            if (modeCfg.highlightFormatting) state.formatting = \"link\";\n            state.linkText = true;\n            return getType(state);\n        }\n        return switchInline(stream, state, inlineNormal);\n    }\n\n    function footnoteLinkInside(stream, state) {\n        if (stream.match(/^\\]:/, true)) {\n            state.f = state.inline = footnoteUrl;\n            if (modeCfg.highlightFormatting) state.formatting = \"link\";\n            var returnType = getType(state);\n            state.linkText = false;\n            return returnType;\n        }\n\n        stream.match(/^[^\\]]+/, true);\n\n        return linktext;\n    }\n\n    function footnoteUrl(stream, state) {\n        // Check if space, and return NULL if so (to avoid marking the space)\n        if (stream.eatSpace()) {\n            return null;\n        }\n        // Match URL\n        stream.match(/^[^\\s]+/, true);\n        // Check for link title\n        if (stream.peek() === undefined) { // End of line, set flag to check next line\n            state.linkTitle = true;\n        } else { // More content on line, check if link title\n            stream.match(/^(?:\\s+(?:\"(?:[^\"\\\\]|\\\\\\\\|\\\\.)+\"|'(?:[^'\\\\]|\\\\\\\\|\\\\.)+'|\\((?:[^)\\\\]|\\\\\\\\|\\\\.)+\\)))?/, true);\n        }\n        state.f = state.inline = inlineNormal;\n        return linkhref;\n    }\n\n    var savedInlineRE = [];\n\n    function inlineRE(endChar) {\n        if (!savedInlineRE[endChar]) {\n            // Escape endChar for RegExp (taken from http://stackoverflow.com/a/494122/526741)\n            endChar = (endChar + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n            // Match any non-endChar, escaped character, as well as the closing\n            // endChar.\n            savedInlineRE[endChar] = new RegExp('^(?:[^\\\\\\\\]|\\\\\\\\.)*?(' + endChar + ')');\n        }\n        return savedInlineRE[endChar];\n    }\n\n    return {\n        startState: function() {\n            return {\n                f: blockNormal,\n\n                prevLineHasContent: false,\n                thisLineHasContent: false,\n                inYAML: false,\n                inMath: false,\n                codeBlock: false,\n\n                block: blockNormal,\n                htmlState: CodeMirror.startState(htmlMode),\n                indentation: 0,\n                blockStyles: [],\n\n                inline: inlineNormal,\n                text: handleText,\n\n                escape: false,\n                formatting: false,\n                linkText: false,\n                linkHref: false,\n                linkTitle: false,\n                em: false,\n                strong: false,\n                header: 0,\n                taskList: false,\n                list: false,\n                listDepth: 0,\n                quote: 0,\n                trailingSpace: 0,\n                trailingSpaceNewLine: false\n            };\n        },\n\n        copyState: function(s) {\n            return {\n                f: s.f,\n\n                prevLineHasContent: s.prevLineHasContent,\n                thisLineHasContent: s.thisLineHasContent,\n                inYAML: s.inYAML,\n                inMath: s.inMath,\n                codeBlock: s.codeBlock,\n                block: s.block,\n                htmlState: CodeMirror.copyState(htmlMode, s.htmlState),\n                indentation: s.indentation,\n                blockStyles: s.blockStyles.slice(0),\n\n                localMode: s.localMode,\n                localState: s.localMode ? CodeMirror.copyState(s.localMode, s.localState) : null,\n\n                inline: s.inline,\n                text: s.text,\n                escape: false,\n                formatting: false,\n                linkTitle: s.linkTitle,\n                em: s.em,\n                strong: s.strong,\n                header: s.header,\n                taskList: s.taskList,\n                list: s.list,\n                listDepth: s.listDepth,\n                quote: s.quote,\n                trailingSpace: s.trailingSpace,\n                trailingSpaceNewLine: s.trailingSpaceNewLine,\n                md_inside: s.md_inside\n            };\n        },\n\n        token: function(stream, state) {\n\n            // Reset state.formatting\n            state.formatting = false;\n\n            if (stream.sol()) {\n                var forceBlankLine = false;\n                if (stream.match(/^\\s*$/, true) || state.header) {\n                    forceBlankLine = true;\n                }\n\n                // Reset state.header\n                state.header = 0;\n                state.blockStyles = [];\n                state.atBlockStart = 0;\n\n                if (forceBlankLine) {\n                    state.prevLineHasContent = false;\n                    blankLine(state);\n                    return this.token(stream, state);\n                } else {\n                    state.prevLineHasContent = state.thisLineHasContent;\n                    state.thisLineHasContent = true;\n                }\n\n                // Reset state.escape\n                state.escape = false;\n\n                // Reset state.taskList\n                state.taskList = false;\n\n                // Reset state.code\n                state.code = false;\n\n                // Reset state.trailingSpace\n                state.trailingSpace = 0;\n                state.trailingSpaceNewLine = false;\n\n                state.f = state.block;\n                var indentation = stream.match(/^\\s*/, true)[0].replace(/\\t/g, '    ').length;\n                var difference = Math.floor((indentation - state.indentation) / 4) * 4;\n                if (difference > 4) difference = 4;\n                var adjustedIndentation = state.indentation + difference;\n                state.indentationDiff = adjustedIndentation - state.indentation;\n                state.indentation = adjustedIndentation;\n                if (indentation > 0) return null;\n            }\n            var result = state.f(stream, state);\n            if (stream.start == stream.pos) return this.token(stream, state);\n            else return result;\n        },\n\n        blankLine: blankLine,\n\n        getType: getType\n    };\n\n}, \"xml\");\n\nCodeMirror.defineMIME(\"text/x-markdown\", \"markdown\");\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    };\n  }\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"haskell\", function(_config, modeConfig) {\n\n  function switchState(source, setState, f) {\n    setState(f);\n    return f(source, setState);\n  }\n\n  // These should all be Unicode extended, as per the Haskell 2010 report\n  var smallRE = /[a-z_]/;\n  var largeRE = /[A-Z]/;\n  var digitRE = /\\d/;\n  var hexitRE = /[0-9A-Fa-f]/;\n  var octitRE = /[0-7]/;\n  var idRE = /[a-z_A-Z0-9'\\xa1-\\uffff]/;\n  var symbolRE = /[-!#$%&*+.\\/<=>?@\\\\^|~:]/;\n  var specialRE = /[(),;[\\]`{}]/;\n  var whiteCharRE = /[ \\t\\v\\f]/; // newlines are handled in tokenizer\n\n  function normal(source, setState) {\n    if (source.eatWhile(whiteCharRE)) {\n      return null;\n    }\n\n    var ch = source.next();\n    if (specialRE.test(ch)) {\n      if (ch == '{' && source.eat('-')) {\n        var t = \"comment\";\n        if (source.eat('#')) {\n          t = \"meta\";\n        }\n        return switchState(source, setState, ncomment(t, 1));\n      }\n      return null;\n    }\n\n    if (ch == '\\'') {\n      if (source.eat('\\\\')) {\n        source.next();  // should handle other escapes here\n      }\n      else {\n        source.next();\n      }\n      if (source.eat('\\'')) {\n        return \"string\";\n      }\n      return \"string error\";\n    }\n\n    if (ch == '\"') {\n      return switchState(source, setState, stringLiteral);\n    }\n\n    if (largeRE.test(ch)) {\n      source.eatWhile(idRE);\n      if (source.eat('.')) {\n        return \"qualifier\";\n      }\n      return \"variable-2\";\n    }\n\n    if (smallRE.test(ch)) {\n      source.eatWhile(idRE);\n      return \"variable\";\n    }\n\n    if (digitRE.test(ch)) {\n      if (ch == '0') {\n        if (source.eat(/[xX]/)) {\n          source.eatWhile(hexitRE); // should require at least 1\n          return \"integer\";\n        }\n        if (source.eat(/[oO]/)) {\n          source.eatWhile(octitRE); // should require at least 1\n          return \"number\";\n        }\n      }\n      source.eatWhile(digitRE);\n      var t = \"number\";\n      if (source.match(/^\\.\\d+/)) {\n        t = \"number\";\n      }\n      if (source.eat(/[eE]/)) {\n        t = \"number\";\n        source.eat(/[-+]/);\n        source.eatWhile(digitRE); // should require at least 1\n      }\n      return t;\n    }\n\n    if (ch == \".\" && source.eat(\".\"))\n      return \"keyword\";\n\n    if (symbolRE.test(ch)) {\n      if (ch == '-' && source.eat(/-/)) {\n        source.eatWhile(/-/);\n        if (!source.eat(symbolRE)) {\n          source.skipToEnd();\n          return \"comment\";\n        }\n      }\n      var t = \"variable\";\n      if (ch == ':') {\n        t = \"variable-2\";\n      }\n      source.eatWhile(symbolRE);\n      return t;\n    }\n\n    return \"error\";\n  }\n\n  function ncomment(type, nest) {\n    if (nest == 0) {\n      return normal;\n    }\n    return function(source, setState) {\n      var currNest = nest;\n      while (!source.eol()) {\n        var ch = source.next();\n        if (ch == '{' && source.eat('-')) {\n          ++currNest;\n        }\n        else if (ch == '-' && source.eat('}')) {\n          --currNest;\n          if (currNest == 0) {\n            setState(normal);\n            return type;\n          }\n        }\n      }\n      setState(ncomment(type, currNest));\n      return type;\n    };\n  }\n\n  function stringLiteral(source, setState) {\n    while (!source.eol()) {\n      var ch = source.next();\n      if (ch == '\"') {\n        setState(normal);\n        return \"string\";\n      }\n      if (ch == '\\\\') {\n        if (source.eol() || source.eat(whiteCharRE)) {\n          setState(stringGap);\n          return \"string\";\n        }\n        if (source.eat('&')) {\n        }\n        else {\n          source.next(); // should handle other escapes here\n        }\n      }\n    }\n    setState(normal);\n    return \"string error\";\n  }\n\n  function stringGap(source, setState) {\n    if (source.eat('\\\\')) {\n      return switchState(source, setState, stringLiteral);\n    }\n    source.next();\n    setState(normal);\n    return \"error\";\n  }\n\n\n  var wellKnownWords = (function() {\n    var wkw = {};\n    function setType(t) {\n      return function () {\n        for (var i = 0; i < arguments.length; i++)\n          wkw[arguments[i]] = t;\n      };\n    }\n\n    setType(\"keyword\")(\n      \"case\", \"class\", \"data\", \"default\", \"deriving\", \"do\", \"else\", \"foreign\",\n      \"if\", \"import\", \"in\", \"infix\", \"infixl\", \"infixr\", \"instance\", \"let\",\n      \"module\", \"newtype\", \"of\", \"then\", \"type\", \"where\", \"_\");\n\n    setType(\"keyword\")(\n      \"\\.\\.\", \":\", \"::\", \"=\", \"\\\\\", \"<-\", \"->\", \"@\", \"~\", \"=>\");\n\n    setType(\"builtin\")(\n      \"!!\", \"$!\", \"$\", \"&&\", \"+\", \"++\", \"-\", \".\", \"/\", \"/=\", \"<\", \"<=\", \"=<<\",\n      \"==\", \">\", \">=\", \">>\", \">>=\", \"^\", \"^^\", \"||\", \"*\", \"**\");\n\n    setType(\"builtin\")(\n      \"Bool\", \"Bounded\", \"Char\", \"Double\", \"EQ\", \"Either\", \"Enum\", \"Eq\",\n      \"False\", \"FilePath\", \"Float\", \"Floating\", \"Fractional\", \"Functor\", \"GT\",\n      \"IO\", \"IOError\", \"Int\", \"Integer\", \"Integral\", \"Just\", \"LT\", \"Left\",\n      \"Maybe\", \"Monad\", \"Nothing\", \"Num\", \"Ord\", \"Ordering\", \"Rational\", \"Read\",\n      \"ReadS\", \"Real\", \"RealFloat\", \"RealFrac\", \"Right\", \"Show\", \"ShowS\",\n      \"String\", \"True\");\n\n    setType(\"builtin\")(\n      \"abs\", \"acos\", \"acosh\", \"all\", \"and\", \"any\", \"appendFile\", \"asTypeOf\",\n      \"asin\", \"asinh\", \"atan\", \"atan2\", \"atanh\", \"break\", \"catch\", \"ceiling\",\n      \"compare\", \"concat\", \"concatMap\", \"const\", \"cos\", \"cosh\", \"curry\",\n      \"cycle\", \"decodeFloat\", \"div\", \"divMod\", \"drop\", \"dropWhile\", \"either\",\n      \"elem\", \"encodeFloat\", \"enumFrom\", \"enumFromThen\", \"enumFromThenTo\",\n      \"enumFromTo\", \"error\", \"even\", \"exp\", \"exponent\", \"fail\", \"filter\",\n      \"flip\", \"floatDigits\", \"floatRadix\", \"floatRange\", \"floor\", \"fmap\",\n      \"foldl\", \"foldl1\", \"foldr\", \"foldr1\", \"fromEnum\", \"fromInteger\",\n      \"fromIntegral\", \"fromRational\", \"fst\", \"gcd\", \"getChar\", \"getContents\",\n      \"getLine\", \"head\", \"id\", \"init\", \"interact\", \"ioError\", \"isDenormalized\",\n      \"isIEEE\", \"isInfinite\", \"isNaN\", \"isNegativeZero\", \"iterate\", \"last\",\n      \"lcm\", \"length\", \"lex\", \"lines\", \"log\", \"logBase\", \"lookup\", \"map\",\n      \"mapM\", \"mapM_\", \"max\", \"maxBound\", \"maximum\", \"maybe\", \"min\", \"minBound\",\n      \"minimum\", \"mod\", \"negate\", \"not\", \"notElem\", \"null\", \"odd\", \"or\",\n      \"otherwise\", \"pi\", \"pred\", \"print\", \"product\", \"properFraction\",\n      \"putChar\", \"putStr\", \"putStrLn\", \"quot\", \"quotRem\", \"read\", \"readFile\",\n      \"readIO\", \"readList\", \"readLn\", \"readParen\", \"reads\", \"readsPrec\",\n      \"realToFrac\", \"recip\", \"rem\", \"repeat\", \"replicate\", \"return\", \"reverse\",\n      \"round\", \"scaleFloat\", \"scanl\", \"scanl1\", \"scanr\", \"scanr1\", \"seq\",\n      \"sequence\", \"sequence_\", \"show\", \"showChar\", \"showList\", \"showParen\",\n      \"showString\", \"shows\", \"showsPrec\", \"significand\", \"signum\", \"sin\",\n      \"sinh\", \"snd\", \"span\", \"splitAt\", \"sqrt\", \"subtract\", \"succ\", \"sum\",\n      \"tail\", \"take\", \"takeWhile\", \"tan\", \"tanh\", \"toEnum\", \"toInteger\",\n      \"toRational\", \"truncate\", \"uncurry\", \"undefined\", \"unlines\", \"until\",\n      \"unwords\", \"unzip\", \"unzip3\", \"userError\", \"words\", \"writeFile\", \"zip\",\n      \"zip3\", \"zipWith\", \"zipWith3\");\n\n    var override = modeConfig.overrideKeywords;\n    if (override) for (var word in override) if (override.hasOwnProperty(word))\n      wkw[word] = override[word];\n\n    return wkw;\n  })();\n\n\n\n  return {\n    startState: function ()  { return { f: normal }; },\n    copyState:  function (s) { return { f: s.f }; },\n\n    token: function(stream, state) {\n      var t = state.f(stream, function(s) { state.f = s; });\n      var w = stream.current();\n      return wellKnownWords.hasOwnProperty(w) ? wellKnownWords[w] : t;\n    },\n\n    blockCommentStart: \"{-\",\n    blockCommentEnd: \"-}\",\n    lineComment: \"--\"\n  };\n\n});\n\nCodeMirror.defineMIME(\"text/x-haskell\", \"haskell\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// LUA mode. Ported to CodeMirror 2 from Franciszek Wawrzak's\n// CodeMirror 1 mode.\n// highlights keywords, strings, comments (no leveling supported! (\"[==[\")), tokens, basic indenting\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"lua\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit;\n\n  function prefixRE(words) {\n    return new RegExp(\"^(?:\" + words.join(\"|\") + \")\", \"i\");\n  }\n  function wordRE(words) {\n    return new RegExp(\"^(?:\" + words.join(\"|\") + \")$\", \"i\");\n  }\n  var specials = wordRE(parserConfig.specials || []);\n\n  // long list of standard functions from lua manual\n  var builtins = wordRE([\n    \"_G\",\"_VERSION\",\"assert\",\"collectgarbage\",\"dofile\",\"error\",\"getfenv\",\"getmetatable\",\"ipairs\",\"load\",\n    \"loadfile\",\"loadstring\",\"module\",\"next\",\"pairs\",\"pcall\",\"print\",\"rawequal\",\"rawget\",\"rawset\",\"require\",\n    \"select\",\"setfenv\",\"setmetatable\",\"tonumber\",\"tostring\",\"type\",\"unpack\",\"xpcall\",\n\n    \"coroutine.create\",\"coroutine.resume\",\"coroutine.running\",\"coroutine.status\",\"coroutine.wrap\",\"coroutine.yield\",\n\n    \"debug.debug\",\"debug.getfenv\",\"debug.gethook\",\"debug.getinfo\",\"debug.getlocal\",\"debug.getmetatable\",\n    \"debug.getregistry\",\"debug.getupvalue\",\"debug.setfenv\",\"debug.sethook\",\"debug.setlocal\",\"debug.setmetatable\",\n    \"debug.setupvalue\",\"debug.traceback\",\n\n    \"close\",\"flush\",\"lines\",\"read\",\"seek\",\"setvbuf\",\"write\",\n\n    \"io.close\",\"io.flush\",\"io.input\",\"io.lines\",\"io.open\",\"io.output\",\"io.popen\",\"io.read\",\"io.stderr\",\"io.stdin\",\n    \"io.stdout\",\"io.tmpfile\",\"io.type\",\"io.write\",\n\n    \"math.abs\",\"math.acos\",\"math.asin\",\"math.atan\",\"math.atan2\",\"math.ceil\",\"math.cos\",\"math.cosh\",\"math.deg\",\n    \"math.exp\",\"math.floor\",\"math.fmod\",\"math.frexp\",\"math.huge\",\"math.ldexp\",\"math.log\",\"math.log10\",\"math.max\",\n    \"math.min\",\"math.modf\",\"math.pi\",\"math.pow\",\"math.rad\",\"math.random\",\"math.randomseed\",\"math.sin\",\"math.sinh\",\n    \"math.sqrt\",\"math.tan\",\"math.tanh\",\n\n    \"os.clock\",\"os.date\",\"os.difftime\",\"os.execute\",\"os.exit\",\"os.getenv\",\"os.remove\",\"os.rename\",\"os.setlocale\",\n    \"os.time\",\"os.tmpname\",\n\n    \"package.cpath\",\"package.loaded\",\"package.loaders\",\"package.loadlib\",\"package.path\",\"package.preload\",\n    \"package.seeall\",\n\n    \"string.byte\",\"string.char\",\"string.dump\",\"string.find\",\"string.format\",\"string.gmatch\",\"string.gsub\",\n    \"string.len\",\"string.lower\",\"string.match\",\"string.rep\",\"string.reverse\",\"string.sub\",\"string.upper\",\n\n    \"table.concat\",\"table.insert\",\"table.maxn\",\"table.remove\",\"table.sort\"\n  ]);\n  var keywords = wordRE([\"and\",\"break\",\"elseif\",\"false\",\"nil\",\"not\",\"or\",\"return\",\n                         \"true\",\"function\", \"end\", \"if\", \"then\", \"else\", \"do\",\n                         \"while\", \"repeat\", \"until\", \"for\", \"in\", \"local\" ]);\n\n  var indentTokens = wordRE([\"function\", \"if\",\"repeat\",\"do\", \"\\\\(\", \"{\"]);\n  var dedentTokens = wordRE([\"end\", \"until\", \"\\\\)\", \"}\"]);\n  var dedentPartial = prefixRE([\"end\", \"until\", \"\\\\)\", \"}\", \"else\", \"elseif\"]);\n\n  function readBracket(stream) {\n    var level = 0;\n    while (stream.eat(\"=\")) ++level;\n    stream.eat(\"[\");\n    return level;\n  }\n\n  function normal(stream, state) {\n    var ch = stream.next();\n    if (ch == \"-\" && stream.eat(\"-\")) {\n      if (stream.eat(\"[\") && stream.eat(\"[\"))\n        return (state.cur = bracketed(readBracket(stream), \"comment\"))(stream, state);\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    if (ch == \"\\\"\" || ch == \"'\")\n      return (state.cur = string(ch))(stream, state);\n    if (ch == \"[\" && /[\\[=]/.test(stream.peek()))\n      return (state.cur = bracketed(readBracket(stream), \"string\"))(stream, state);\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\w.%]/);\n      return \"number\";\n    }\n    if (/[\\w_]/.test(ch)) {\n      stream.eatWhile(/[\\w\\\\\\-_.]/);\n      return \"variable\";\n    }\n    return null;\n  }\n\n  function bracketed(level, style) {\n    return function(stream, state) {\n      var curlev = null, ch;\n      while ((ch = stream.next()) != null) {\n        if (curlev == null) {if (ch == \"]\") curlev = 0;}\n        else if (ch == \"=\") ++curlev;\n        else if (ch == \"]\" && curlev == level) { state.cur = normal; break; }\n        else curlev = null;\n      }\n      return style;\n    };\n  }\n\n  function string(quote) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped) break;\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      if (!escaped) state.cur = normal;\n      return \"string\";\n    };\n  }\n\n  return {\n    startState: function(basecol) {\n      return {basecol: basecol || 0, indentDepth: 0, cur: normal};\n    },\n\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      var style = state.cur(stream, state);\n      var word = stream.current();\n      if (style == \"variable\") {\n        if (keywords.test(word)) style = \"keyword\";\n        else if (builtins.test(word)) style = \"builtin\";\n        else if (specials.test(word)) style = \"variable-2\";\n      }\n      if ((style != \"comment\") && (style != \"string\")){\n        if (indentTokens.test(word)) ++state.indentDepth;\n        else if (dedentTokens.test(word)) --state.indentDepth;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      var closing = dedentPartial.test(textAfter);\n      return state.basecol + indentUnit * (state.indentDepth - (closing ? 1 : 0));\n    },\n\n    lineComment: \"--\",\n    blockCommentStart: \"--[[\",\n    blockCommentEnd: \"]]\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-lua\", \"lua\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"commonlisp\", function (config) {\n  var specialForm = /^(block|let*|return-from|catch|load-time-value|setq|eval-when|locally|symbol-macrolet|flet|macrolet|tagbody|function|multiple-value-call|the|go|multiple-value-prog1|throw|if|progn|unwind-protect|labels|progv|let|quote)$/;\n  var assumeBody = /^with|^def|^do|^prog|case$|^cond$|bind$|when$|unless$/;\n  var numLiteral = /^(?:[+\\-]?(?:\\d+|\\d*\\.\\d+)(?:[efd][+\\-]?\\d+)?|[+\\-]?\\d+(?:\\/[+\\-]?\\d+)?|#b[+\\-]?[01]+|#o[+\\-]?[0-7]+|#x[+\\-]?[\\da-f]+)/;\n  var symbol = /[^\\s'`,@()\\[\\]\";]/;\n  var type;\n\n  function readSym(stream) {\n    var ch;\n    while (ch = stream.next()) {\n      if (ch == \"\\\\\") stream.next();\n      else if (!symbol.test(ch)) { stream.backUp(1); break; }\n    }\n    return stream.current();\n  }\n\n  function base(stream, state) {\n    if (stream.eatSpace()) {type = \"ws\"; return null;}\n    if (stream.match(numLiteral)) return \"number\";\n    var ch = stream.next();\n    if (ch == \"\\\\\") ch = stream.next();\n\n    if (ch == '\"') return (state.tokenize = inString)(stream, state);\n    else if (ch == \"(\") { type = \"open\"; return \"bracket\"; }\n    else if (ch == \")\" || ch == \"]\") { type = \"close\"; return \"bracket\"; }\n    else if (ch == \";\") { stream.skipToEnd(); type = \"ws\"; return \"comment\"; }\n    else if (/['`,@]/.test(ch)) return null;\n    else if (ch == \"|\") {\n      if (stream.skipTo(\"|\")) { stream.next(); return \"symbol\"; }\n      else { stream.skipToEnd(); return \"error\"; }\n    } else if (ch == \"#\") {\n      var ch = stream.next();\n      if (ch == \"(\") { type = \"open\"; return \"bracket\"; }\n      else if (/[+\\-=\\.']/.test(ch)) return null;\n      else if (/\\d/.test(ch) && stream.match(/^\\d*#/)) return null;\n      else if (ch == \"|\") return (state.tokenize = inComment)(stream, state);\n      else if (ch == \":\") { readSym(stream); return \"meta\"; }\n      else if (ch == \"\\\\\") { stream.next(); readSym(stream); return \"string-2\" }\n      else return \"error\";\n    } else {\n      var name = readSym(stream);\n      if (name == \".\") return null;\n      type = \"symbol\";\n      if (name == \"nil\" || name == \"t\" || name.charAt(0) == \":\") return \"atom\";\n      if (state.lastType == \"open\" && (specialForm.test(name) || assumeBody.test(name))) return \"keyword\";\n      if (name.charAt(0) == \"&\") return \"variable-2\";\n      return \"variable\";\n    }\n  }\n\n  function inString(stream, state) {\n    var escaped = false, next;\n    while (next = stream.next()) {\n      if (next == '\"' && !escaped) { state.tokenize = base; break; }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    return \"string\";\n  }\n\n  function inComment(stream, state) {\n    var next, last;\n    while (next = stream.next()) {\n      if (next == \"#\" && last == \"|\") { state.tokenize = base; break; }\n      last = next;\n    }\n    type = \"ws\";\n    return \"comment\";\n  }\n\n  return {\n    startState: function () {\n      return {ctx: {prev: null, start: 0, indentTo: 0}, lastType: null, tokenize: base};\n    },\n\n    token: function (stream, state) {\n      if (stream.sol() && typeof state.ctx.indentTo != \"number\")\n        state.ctx.indentTo = state.ctx.start + 1;\n\n      type = null;\n      var style = state.tokenize(stream, state);\n      if (type != \"ws\") {\n        if (state.ctx.indentTo == null) {\n          if (type == \"symbol\" && assumeBody.test(stream.current()))\n            state.ctx.indentTo = state.ctx.start + config.indentUnit;\n          else\n            state.ctx.indentTo = \"next\";\n        } else if (state.ctx.indentTo == \"next\") {\n          state.ctx.indentTo = stream.column();\n        }\n        state.lastType = type;\n      }\n      if (type == \"open\") state.ctx = {prev: state.ctx, start: stream.column(), indentTo: null};\n      else if (type == \"close\") state.ctx = state.ctx.prev || state.ctx;\n      return style;\n    },\n\n    indent: function (state, _textAfter) {\n      var i = state.ctx.indentTo;\n      return typeof i == \"number\" ? i : state.ctx.start + 1;\n    },\n\n    closeBrackets: {pairs: \"()[]{}\\\"\\\"\"},\n    lineComment: \";;\",\n    blockCommentStart: \"#|\",\n    blockCommentEnd: \"|#\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-common-lisp\", \"commonlisp\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"pascal\", function() {\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n  var keywords = words(\"and array begin case const div do downto else end file for forward integer \" +\n                       \"boolean char function goto if in label mod nil not of or packed procedure \" +\n                       \"program record repeat set string then to type until var while with\");\n  var atoms = {\"null\": true};\n\n  var isOperatorChar = /[+\\-*&%=<>!?|\\/]/;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == \"#\" && state.startOfLine) {\n      stream.skipToEnd();\n      return \"meta\";\n    }\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (ch == \"(\" && stream.eat(\"*\")) {\n      state.tokenize = tokenComment;\n      return tokenComment(stream, state);\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      return null;\n    }\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\w\\.]/);\n      return \"number\";\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_]/);\n    var cur = stream.current();\n    if (keywords.propertyIsEnumerable(cur)) return \"keyword\";\n    if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !escaped) state.tokenize = null;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \")\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  // Interface\n\n  return {\n    startState: function() {\n      return {tokenize: null};\n    },\n\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      return style;\n    },\n\n    electricChars: \"{}\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-pascal\", \"pascal\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// CodeMirror2 mode/perl/perl.js (text/x-perl) beta 0.10 (2011-11-08)\n// This is a part of CodeMirror from https://github.com/sabaca/CodeMirror_mode_perl (mail@sabaca.com)\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"perl\",function(){\n        // http://perldoc.perl.org\n        var PERL={                                      //   null - magic touch\n                                                        //   1 - keyword\n                                                        //   2 - def\n                                                        //   3 - atom\n                                                        //   4 - operator\n                                                        //   5 - variable-2 (predefined)\n                                                        //   [x,y] - x=1,2,3; y=must be defined if x{...}\n                                                //      PERL operators\n                '->'                            :   4,\n                '++'                            :   4,\n                '--'                            :   4,\n                '**'                            :   4,\n                                                        //   ! ~ \\ and unary + and -\n                '=~'                            :   4,\n                '!~'                            :   4,\n                '*'                             :   4,\n                '/'                             :   4,\n                '%'                             :   4,\n                'x'                             :   4,\n                '+'                             :   4,\n                '-'                             :   4,\n                '.'                             :   4,\n                '<<'                            :   4,\n                '>>'                            :   4,\n                                                        //   named unary operators\n                '<'                             :   4,\n                '>'                             :   4,\n                '<='                            :   4,\n                '>='                            :   4,\n                'lt'                            :   4,\n                'gt'                            :   4,\n                'le'                            :   4,\n                'ge'                            :   4,\n                '=='                            :   4,\n                '!='                            :   4,\n                '<=>'                           :   4,\n                'eq'                            :   4,\n                'ne'                            :   4,\n                'cmp'                           :   4,\n                '~~'                            :   4,\n                '&'                             :   4,\n                '|'                             :   4,\n                '^'                             :   4,\n                '&&'                            :   4,\n                '||'                            :   4,\n                '//'                            :   4,\n                '..'                            :   4,\n                '...'                           :   4,\n                '?'                             :   4,\n                ':'                             :   4,\n                '='                             :   4,\n                '+='                            :   4,\n                '-='                            :   4,\n                '*='                            :   4,  //   etc. ???\n                ','                             :   4,\n                '=>'                            :   4,\n                '::'                            :   4,\n                                                        //   list operators (rightward)\n                'not'                           :   4,\n                'and'                           :   4,\n                'or'                            :   4,\n                'xor'                           :   4,\n                                                //      PERL predefined variables (I know, what this is a paranoid idea, but may be needed for people, who learn PERL, and for me as well, ...and may be for you?;)\n                'BEGIN'                         :   [5,1],\n                'END'                           :   [5,1],\n                'PRINT'                         :   [5,1],\n                'PRINTF'                        :   [5,1],\n                'GETC'                          :   [5,1],\n                'READ'                          :   [5,1],\n                'READLINE'                      :   [5,1],\n                'DESTROY'                       :   [5,1],\n                'TIE'                           :   [5,1],\n                'TIEHANDLE'                     :   [5,1],\n                'UNTIE'                         :   [5,1],\n                'STDIN'                         :    5,\n                'STDIN_TOP'                     :    5,\n                'STDOUT'                        :    5,\n                'STDOUT_TOP'                    :    5,\n                'STDERR'                        :    5,\n                'STDERR_TOP'                    :    5,\n                '$ARG'                          :    5,\n                '$_'                            :    5,\n                '@ARG'                          :    5,\n                '@_'                            :    5,\n                '$LIST_SEPARATOR'               :    5,\n                '$\"'                            :    5,\n                '$PROCESS_ID'                   :    5,\n                '$PID'                          :    5,\n                '$$'                            :    5,\n                '$REAL_GROUP_ID'                :    5,\n                '$GID'                          :    5,\n                '$('                            :    5,\n                '$EFFECTIVE_GROUP_ID'           :    5,\n                '$EGID'                         :    5,\n                '$)'                            :    5,\n                '$PROGRAM_NAME'                 :    5,\n                '$0'                            :    5,\n                '$SUBSCRIPT_SEPARATOR'          :    5,\n                '$SUBSEP'                       :    5,\n                '$;'                            :    5,\n                '$REAL_USER_ID'                 :    5,\n                '$UID'                          :    5,\n                '$<'                            :    5,\n                '$EFFECTIVE_USER_ID'            :    5,\n                '$EUID'                         :    5,\n                '$>'                            :    5,\n                '$a'                            :    5,\n                '$b'                            :    5,\n                '$COMPILING'                    :    5,\n                '$^C'                           :    5,\n                '$DEBUGGING'                    :    5,\n                '$^D'                           :    5,\n                '${^ENCODING}'                  :    5,\n                '$ENV'                          :    5,\n                '%ENV'                          :    5,\n                '$SYSTEM_FD_MAX'                :    5,\n                '$^F'                           :    5,\n                '@F'                            :    5,\n                '${^GLOBAL_PHASE}'              :    5,\n                '$^H'                           :    5,\n                '%^H'                           :    5,\n                '@INC'                          :    5,\n                '%INC'                          :    5,\n                '$INPLACE_EDIT'                 :    5,\n                '$^I'                           :    5,\n                '$^M'                           :    5,\n                '$OSNAME'                       :    5,\n                '$^O'                           :    5,\n                '${^OPEN}'                      :    5,\n                '$PERLDB'                       :    5,\n                '$^P'                           :    5,\n                '$SIG'                          :    5,\n                '%SIG'                          :    5,\n                '$BASETIME'                     :    5,\n                '$^T'                           :    5,\n                '${^TAINT}'                     :    5,\n                '${^UNICODE}'                   :    5,\n                '${^UTF8CACHE}'                 :    5,\n                '${^UTF8LOCALE}'                :    5,\n                '$PERL_VERSION'                 :    5,\n                '$^V'                           :    5,\n                '${^WIN32_SLOPPY_STAT}'         :    5,\n                '$EXECUTABLE_NAME'              :    5,\n                '$^X'                           :    5,\n                '$1'                            :    5, // - regexp $1, $2...\n                '$MATCH'                        :    5,\n                '$&'                            :    5,\n                '${^MATCH}'                     :    5,\n                '$PREMATCH'                     :    5,\n                '$`'                            :    5,\n                '${^PREMATCH}'                  :    5,\n                '$POSTMATCH'                    :    5,\n                \"$'\"                            :    5,\n                '${^POSTMATCH}'                 :    5,\n                '$LAST_PAREN_MATCH'             :    5,\n                '$+'                            :    5,\n                '$LAST_SUBMATCH_RESULT'         :    5,\n                '$^N'                           :    5,\n                '@LAST_MATCH_END'               :    5,\n                '@+'                            :    5,\n                '%LAST_PAREN_MATCH'             :    5,\n                '%+'                            :    5,\n                '@LAST_MATCH_START'             :    5,\n                '@-'                            :    5,\n                '%LAST_MATCH_START'             :    5,\n                '%-'                            :    5,\n                '$LAST_REGEXP_CODE_RESULT'      :    5,\n                '$^R'                           :    5,\n                '${^RE_DEBUG_FLAGS}'            :    5,\n                '${^RE_TRIE_MAXBUF}'            :    5,\n                '$ARGV'                         :    5,\n                '@ARGV'                         :    5,\n                'ARGV'                          :    5,\n                'ARGVOUT'                       :    5,\n                '$OUTPUT_FIELD_SEPARATOR'       :    5,\n                '$OFS'                          :    5,\n                '$,'                            :    5,\n                '$INPUT_LINE_NUMBER'            :    5,\n                '$NR'                           :    5,\n                '$.'                            :    5,\n                '$INPUT_RECORD_SEPARATOR'       :    5,\n                '$RS'                           :    5,\n                '$/'                            :    5,\n                '$OUTPUT_RECORD_SEPARATOR'      :    5,\n                '$ORS'                          :    5,\n                '$\\\\'                           :    5,\n                '$OUTPUT_AUTOFLUSH'             :    5,\n                '$|'                            :    5,\n                '$ACCUMULATOR'                  :    5,\n                '$^A'                           :    5,\n                '$FORMAT_FORMFEED'              :    5,\n                '$^L'                           :    5,\n                '$FORMAT_PAGE_NUMBER'           :    5,\n                '$%'                            :    5,\n                '$FORMAT_LINES_LEFT'            :    5,\n                '$-'                            :    5,\n                '$FORMAT_LINE_BREAK_CHARACTERS' :    5,\n                '$:'                            :    5,\n                '$FORMAT_LINES_PER_PAGE'        :    5,\n                '$='                            :    5,\n                '$FORMAT_TOP_NAME'              :    5,\n                '$^'                            :    5,\n                '$FORMAT_NAME'                  :    5,\n                '$~'                            :    5,\n                '${^CHILD_ERROR_NATIVE}'        :    5,\n                '$EXTENDED_OS_ERROR'            :    5,\n                '$^E'                           :    5,\n                '$EXCEPTIONS_BEING_CAUGHT'      :    5,\n                '$^S'                           :    5,\n                '$WARNING'                      :    5,\n                '$^W'                           :    5,\n                '${^WARNING_BITS}'              :    5,\n                '$OS_ERROR'                     :    5,\n                '$ERRNO'                        :    5,\n                '$!'                            :    5,\n                '%OS_ERROR'                     :    5,\n                '%ERRNO'                        :    5,\n                '%!'                            :    5,\n                '$CHILD_ERROR'                  :    5,\n                '$?'                            :    5,\n                '$EVAL_ERROR'                   :    5,\n                '$@'                            :    5,\n                '$OFMT'                         :    5,\n                '$#'                            :    5,\n                '$*'                            :    5,\n                '$ARRAY_BASE'                   :    5,\n                '$['                            :    5,\n                '$OLD_PERL_VERSION'             :    5,\n                '$]'                            :    5,\n                                                //      PERL blocks\n                'if'                            :[1,1],\n                elsif                           :[1,1],\n                'else'                          :[1,1],\n                'while'                         :[1,1],\n                unless                          :[1,1],\n                'for'                           :[1,1],\n                foreach                         :[1,1],\n                                                //      PERL functions\n                'abs'                           :1,     // - absolute value function\n                accept                          :1,     // - accept an incoming socket connect\n                alarm                           :1,     // - schedule a SIGALRM\n                'atan2'                         :1,     // - arctangent of Y/X in the range -PI to PI\n                bind                            :1,     // - binds an address to a socket\n                binmode                         :1,     // - prepare binary files for I/O\n                bless                           :1,     // - create an object\n                bootstrap                       :1,     //\n                'break'                         :1,     // - break out of a \"given\" block\n                caller                          :1,     // - get context of the current subroutine call\n                chdir                           :1,     // - change your current working directory\n                chmod                           :1,     // - changes the permissions on a list of files\n                chomp                           :1,     // - remove a trailing record separator from a string\n                chop                            :1,     // - remove the last character from a string\n                chown                           :1,     // - change the ownership on a list of files\n                chr                             :1,     // - get character this number represents\n                chroot                          :1,     // - make directory new root for path lookups\n                close                           :1,     // - close file (or pipe or socket) handle\n                closedir                        :1,     // - close directory handle\n                connect                         :1,     // - connect to a remote socket\n                'continue'                      :[1,1], // - optional trailing block in a while or foreach\n                'cos'                           :1,     // - cosine function\n                crypt                           :1,     // - one-way passwd-style encryption\n                dbmclose                        :1,     // - breaks binding on a tied dbm file\n                dbmopen                         :1,     // - create binding on a tied dbm file\n                'default'                       :1,     //\n                defined                         :1,     // - test whether a value, variable, or function is defined\n                'delete'                        :1,     // - deletes a value from a hash\n                die                             :1,     // - raise an exception or bail out\n                'do'                            :1,     // - turn a BLOCK into a TERM\n                dump                            :1,     // - create an immediate core dump\n                each                            :1,     // - retrieve the next key/value pair from a hash\n                endgrent                        :1,     // - be done using group file\n                endhostent                      :1,     // - be done using hosts file\n                endnetent                       :1,     // - be done using networks file\n                endprotoent                     :1,     // - be done using protocols file\n                endpwent                        :1,     // - be done using passwd file\n                endservent                      :1,     // - be done using services file\n                eof                             :1,     // - test a filehandle for its end\n                'eval'                          :1,     // - catch exceptions or compile and run code\n                'exec'                          :1,     // - abandon this program to run another\n                exists                          :1,     // - test whether a hash key is present\n                exit                            :1,     // - terminate this program\n                'exp'                           :1,     // - raise I to a power\n                fcntl                           :1,     // - file control system call\n                fileno                          :1,     // - return file descriptor from filehandle\n                flock                           :1,     // - lock an entire file with an advisory lock\n                fork                            :1,     // - create a new process just like this one\n                format                          :1,     // - declare a picture format with use by the write() function\n                formline                        :1,     // - internal function used for formats\n                getc                            :1,     // - get the next character from the filehandle\n                getgrent                        :1,     // - get next group record\n                getgrgid                        :1,     // - get group record given group user ID\n                getgrnam                        :1,     // - get group record given group name\n                gethostbyaddr                   :1,     // - get host record given its address\n                gethostbyname                   :1,     // - get host record given name\n                gethostent                      :1,     // - get next hosts record\n                getlogin                        :1,     // - return who logged in at this tty\n                getnetbyaddr                    :1,     // - get network record given its address\n                getnetbyname                    :1,     // - get networks record given name\n                getnetent                       :1,     // - get next networks record\n                getpeername                     :1,     // - find the other end of a socket connection\n                getpgrp                         :1,     // - get process group\n                getppid                         :1,     // - get parent process ID\n                getpriority                     :1,     // - get current nice value\n                getprotobyname                  :1,     // - get protocol record given name\n                getprotobynumber                :1,     // - get protocol record numeric protocol\n                getprotoent                     :1,     // - get next protocols record\n                getpwent                        :1,     // - get next passwd record\n                getpwnam                        :1,     // - get passwd record given user login name\n                getpwuid                        :1,     // - get passwd record given user ID\n                getservbyname                   :1,     // - get services record given its name\n                getservbyport                   :1,     // - get services record given numeric port\n                getservent                      :1,     // - get next services record\n                getsockname                     :1,     // - retrieve the sockaddr for a given socket\n                getsockopt                      :1,     // - get socket options on a given socket\n                given                           :1,     //\n                glob                            :1,     // - expand filenames using wildcards\n                gmtime                          :1,     // - convert UNIX time into record or string using Greenwich time\n                'goto'                          :1,     // - create spaghetti code\n                grep                            :1,     // - locate elements in a list test true against a given criterion\n                hex                             :1,     // - convert a string to a hexadecimal number\n                'import'                        :1,     // - patch a module's namespace into your own\n                index                           :1,     // - find a substring within a string\n                'int'                           :1,     // - get the integer portion of a number\n                ioctl                           :1,     // - system-dependent device control system call\n                'join'                          :1,     // - join a list into a string using a separator\n                keys                            :1,     // - retrieve list of indices from a hash\n                kill                            :1,     // - send a signal to a process or process group\n                last                            :1,     // - exit a block prematurely\n                lc                              :1,     // - return lower-case version of a string\n                lcfirst                         :1,     // - return a string with just the next letter in lower case\n                length                          :1,     // - return the number of bytes in a string\n                'link'                          :1,     // - create a hard link in the filesytem\n                listen                          :1,     // - register your socket as a server\n                local                           : 2,    // - create a temporary value for a global variable (dynamic scoping)\n                localtime                       :1,     // - convert UNIX time into record or string using local time\n                lock                            :1,     // - get a thread lock on a variable, subroutine, or method\n                'log'                           :1,     // - retrieve the natural logarithm for a number\n                lstat                           :1,     // - stat a symbolic link\n                m                               :null,  // - match a string with a regular expression pattern\n                map                             :1,     // - apply a change to a list to get back a new list with the changes\n                mkdir                           :1,     // - create a directory\n                msgctl                          :1,     // - SysV IPC message control operations\n                msgget                          :1,     // - get SysV IPC message queue\n                msgrcv                          :1,     // - receive a SysV IPC message from a message queue\n                msgsnd                          :1,     // - send a SysV IPC message to a message queue\n                my                              : 2,    // - declare and assign a local variable (lexical scoping)\n                'new'                           :1,     //\n                next                            :1,     // - iterate a block prematurely\n                no                              :1,     // - unimport some module symbols or semantics at compile time\n                oct                             :1,     // - convert a string to an octal number\n                open                            :1,     // - open a file, pipe, or descriptor\n                opendir                         :1,     // - open a directory\n                ord                             :1,     // - find a character's numeric representation\n                our                             : 2,    // - declare and assign a package variable (lexical scoping)\n                pack                            :1,     // - convert a list into a binary representation\n                'package'                       :1,     // - declare a separate global namespace\n                pipe                            :1,     // - open a pair of connected filehandles\n                pop                             :1,     // - remove the last element from an array and return it\n                pos                             :1,     // - find or set the offset for the last/next m//g search\n                print                           :1,     // - output a list to a filehandle\n                printf                          :1,     // - output a formatted list to a filehandle\n                prototype                       :1,     // - get the prototype (if any) of a subroutine\n                push                            :1,     // - append one or more elements to an array\n                q                               :null,  // - singly quote a string\n                qq                              :null,  // - doubly quote a string\n                qr                              :null,  // - Compile pattern\n                quotemeta                       :null,  // - quote regular expression magic characters\n                qw                              :null,  // - quote a list of words\n                qx                              :null,  // - backquote quote a string\n                rand                            :1,     // - retrieve the next pseudorandom number\n                read                            :1,     // - fixed-length buffered input from a filehandle\n                readdir                         :1,     // - get a directory from a directory handle\n                readline                        :1,     // - fetch a record from a file\n                readlink                        :1,     // - determine where a symbolic link is pointing\n                readpipe                        :1,     // - execute a system command and collect standard output\n                recv                            :1,     // - receive a message over a Socket\n                redo                            :1,     // - start this loop iteration over again\n                ref                             :1,     // - find out the type of thing being referenced\n                rename                          :1,     // - change a filename\n                require                         :1,     // - load in external functions from a library at runtime\n                reset                           :1,     // - clear all variables of a given name\n                'return'                        :1,     // - get out of a function early\n                reverse                         :1,     // - flip a string or a list\n                rewinddir                       :1,     // - reset directory handle\n                rindex                          :1,     // - right-to-left substring search\n                rmdir                           :1,     // - remove a directory\n                s                               :null,  // - replace a pattern with a string\n                say                             :1,     // - print with newline\n                scalar                          :1,     // - force a scalar context\n                seek                            :1,     // - reposition file pointer for random-access I/O\n                seekdir                         :1,     // - reposition directory pointer\n                select                          :1,     // - reset default output or do I/O multiplexing\n                semctl                          :1,     // - SysV semaphore control operations\n                semget                          :1,     // - get set of SysV semaphores\n                semop                           :1,     // - SysV semaphore operations\n                send                            :1,     // - send a message over a socket\n                setgrent                        :1,     // - prepare group file for use\n                sethostent                      :1,     // - prepare hosts file for use\n                setnetent                       :1,     // - prepare networks file for use\n                setpgrp                         :1,     // - set the process group of a process\n                setpriority                     :1,     // - set a process's nice value\n                setprotoent                     :1,     // - prepare protocols file for use\n                setpwent                        :1,     // - prepare passwd file for use\n                setservent                      :1,     // - prepare services file for use\n                setsockopt                      :1,     // - set some socket options\n                shift                           :1,     // - remove the first element of an array, and return it\n                shmctl                          :1,     // - SysV shared memory operations\n                shmget                          :1,     // - get SysV shared memory segment identifier\n                shmread                         :1,     // - read SysV shared memory\n                shmwrite                        :1,     // - write SysV shared memory\n                shutdown                        :1,     // - close down just half of a socket connection\n                'sin'                           :1,     // - return the sine of a number\n                sleep                           :1,     // - block for some number of seconds\n                socket                          :1,     // - create a socket\n                socketpair                      :1,     // - create a pair of sockets\n                'sort'                          :1,     // - sort a list of values\n                splice                          :1,     // - add or remove elements anywhere in an array\n                'split'                         :1,     // - split up a string using a regexp delimiter\n                sprintf                         :1,     // - formatted print into a string\n                'sqrt'                          :1,     // - square root function\n                srand                           :1,     // - seed the random number generator\n                stat                            :1,     // - get a file's status information\n                state                           :1,     // - declare and assign a state variable (persistent lexical scoping)\n                study                           :1,     // - optimize input data for repeated searches\n                'sub'                           :1,     // - declare a subroutine, possibly anonymously\n                'substr'                        :1,     // - get or alter a portion of a stirng\n                symlink                         :1,     // - create a symbolic link to a file\n                syscall                         :1,     // - execute an arbitrary system call\n                sysopen                         :1,     // - open a file, pipe, or descriptor\n                sysread                         :1,     // - fixed-length unbuffered input from a filehandle\n                sysseek                         :1,     // - position I/O pointer on handle used with sysread and syswrite\n                system                          :1,     // - run a separate program\n                syswrite                        :1,     // - fixed-length unbuffered output to a filehandle\n                tell                            :1,     // - get current seekpointer on a filehandle\n                telldir                         :1,     // - get current seekpointer on a directory handle\n                tie                             :1,     // - bind a variable to an object class\n                tied                            :1,     // - get a reference to the object underlying a tied variable\n                time                            :1,     // - return number of seconds since 1970\n                times                           :1,     // - return elapsed time for self and child processes\n                tr                              :null,  // - transliterate a string\n                truncate                        :1,     // - shorten a file\n                uc                              :1,     // - return upper-case version of a string\n                ucfirst                         :1,     // - return a string with just the next letter in upper case\n                umask                           :1,     // - set file creation mode mask\n                undef                           :1,     // - remove a variable or function definition\n                unlink                          :1,     // - remove one link to a file\n                unpack                          :1,     // - convert binary structure into normal perl variables\n                unshift                         :1,     // - prepend more elements to the beginning of a list\n                untie                           :1,     // - break a tie binding to a variable\n                use                             :1,     // - load in a module at compile time\n                utime                           :1,     // - set a file's last access and modify times\n                values                          :1,     // - return a list of the values in a hash\n                vec                             :1,     // - test or set particular bits in a string\n                wait                            :1,     // - wait for any child process to die\n                waitpid                         :1,     // - wait for a particular child process to die\n                wantarray                       :1,     // - get void vs scalar vs list context of current subroutine call\n                warn                            :1,     // - print debugging info\n                when                            :1,     //\n                write                           :1,     // - print a picture record\n                y                               :null}; // - transliterate a string\n\n        var RXstyle=\"string-2\";\n        var RXmodifiers=/[goseximacplud]/;              // NOTE: \"m\", \"s\", \"y\" and \"tr\" need to correct real modifiers for each regexp type\n\n        function tokenChain(stream,state,chain,style,tail){     // NOTE: chain.length > 2 is not working now (it's for s[...][...]geos;)\n                state.chain=null;                               //                                                          12   3tail\n                state.style=null;\n                state.tail=null;\n                state.tokenize=function(stream,state){\n                        var e=false,c,i=0;\n                        while(c=stream.next()){\n                                if(c===chain[i]&&!e){\n                                        if(chain[++i]!==undefined){\n                                                state.chain=chain[i];\n                                                state.style=style;\n                                                state.tail=tail;}\n                                        else if(tail)\n                                                stream.eatWhile(tail);\n                                        state.tokenize=tokenPerl;\n                                        return style;}\n                                e=!e&&c==\"\\\\\";}\n                        return style;};\n                return state.tokenize(stream,state);}\n\n        function tokenSOMETHING(stream,state,string){\n                state.tokenize=function(stream,state){\n                        if(stream.string==string)\n                                state.tokenize=tokenPerl;\n                        stream.skipToEnd();\n                        return \"string\";};\n                return state.tokenize(stream,state);}\n\n        function tokenPerl(stream,state){\n                if(stream.eatSpace())\n                        return null;\n                if(state.chain)\n                        return tokenChain(stream,state,state.chain,state.style,state.tail);\n                if(stream.match(/^\\-?[\\d\\.]/,false))\n                        if(stream.match(/^(\\-?(\\d*\\.\\d+(e[+-]?\\d+)?|\\d+\\.\\d*)|0x[\\da-fA-F]+|0b[01]+|\\d+(e[+-]?\\d+)?)/))\n                                return 'number';\n                if(stream.match(/^<<(?=\\w)/)){                  // NOTE: <<SOMETHING\\n...\\nSOMETHING\\n\n                        stream.eatWhile(/\\w/);\n                        return tokenSOMETHING(stream,state,stream.current().substr(2));}\n                if(stream.sol()&&stream.match(/^\\=item(?!\\w)/)){// NOTE: \\n=item...\\n=cut\\n\n                        return tokenSOMETHING(stream,state,'=cut');}\n                var ch=stream.next();\n                if(ch=='\"'||ch==\"'\"){                           // NOTE: ' or \" or <<'SOMETHING'\\n...\\nSOMETHING\\n or <<\"SOMETHING\"\\n...\\nSOMETHING\\n\n                        if(prefix(stream, 3)==\"<<\"+ch){\n                                var p=stream.pos;\n                                stream.eatWhile(/\\w/);\n                                var n=stream.current().substr(1);\n                                if(n&&stream.eat(ch))\n                                        return tokenSOMETHING(stream,state,n);\n                                stream.pos=p;}\n                        return tokenChain(stream,state,[ch],\"string\");}\n                if(ch==\"q\"){\n                        var c=look(stream, -2);\n                        if(!(c&&/\\w/.test(c))){\n                                c=look(stream, 0);\n                                if(c==\"x\"){\n                                        c=look(stream, 1);\n                                        if(c==\"(\"){\n                                                eatSuffix(stream, 2);\n                                                return tokenChain(stream,state,[\")\"],RXstyle,RXmodifiers);}\n                                        if(c==\"[\"){\n                                                eatSuffix(stream, 2);\n                                                return tokenChain(stream,state,[\"]\"],RXstyle,RXmodifiers);}\n                                        if(c==\"{\"){\n                                                eatSuffix(stream, 2);\n                                                return tokenChain(stream,state,[\"}\"],RXstyle,RXmodifiers);}\n                                        if(c==\"<\"){\n                                                eatSuffix(stream, 2);\n                                                return tokenChain(stream,state,[\">\"],RXstyle,RXmodifiers);}\n                                        if(/[\\^'\"!~\\/]/.test(c)){\n                                                eatSuffix(stream, 1);\n                                                return tokenChain(stream,state,[stream.eat(c)],RXstyle,RXmodifiers);}}\n                                else if(c==\"q\"){\n                                        c=look(stream, 1);\n                                        if(c==\"(\"){\n                                                eatSuffix(stream, 2);\n                                                return tokenChain(stream,state,[\")\"],\"string\");}\n                                        if(c==\"[\"){\n                                                eatSuffix(stream, 2);\n                                                return tokenChain(stream,state,[\"]\"],\"string\");}\n                                        if(c==\"{\"){\n                                                eatSuffix(stream, 2);\n                                                return tokenChain(stream,state,[\"}\"],\"string\");}\n                                        if(c==\"<\"){\n                                                eatSuffix(stream, 2);\n                                                return tokenChain(stream,state,[\">\"],\"string\");}\n                                        if(/[\\^'\"!~\\/]/.test(c)){\n                                                eatSuffix(stream, 1);\n                                                return tokenChain(stream,state,[stream.eat(c)],\"string\");}}\n                                else if(c==\"w\"){\n                                        c=look(stream, 1);\n                                        if(c==\"(\"){\n                                                eatSuffix(stream, 2);\n                                                return tokenChain(stream,state,[\")\"],\"bracket\");}\n                                        if(c==\"[\"){\n                                                eatSuffix(stream, 2);\n                                                return tokenChain(stream,state,[\"]\"],\"bracket\");}\n                                        if(c==\"{\"){\n                                                eatSuffix(stream, 2);\n                                                return tokenChain(stream,state,[\"}\"],\"bracket\");}\n                                        if(c==\"<\"){\n                                                eatSuffix(stream, 2);\n                                                return tokenChain(stream,state,[\">\"],\"bracket\");}\n                                        if(/[\\^'\"!~\\/]/.test(c)){\n                                                eatSuffix(stream, 1);\n                                                return tokenChain(stream,state,[stream.eat(c)],\"bracket\");}}\n                                else if(c==\"r\"){\n                                        c=look(stream, 1);\n                                        if(c==\"(\"){\n                                                eatSuffix(stream, 2);\n                                                return tokenChain(stream,state,[\")\"],RXstyle,RXmodifiers);}\n                                        if(c==\"[\"){\n                                                eatSuffix(stream, 2);\n                                                return tokenChain(stream,state,[\"]\"],RXstyle,RXmodifiers);}\n                                        if(c==\"{\"){\n                                                eatSuffix(stream, 2);\n                                                return tokenChain(stream,state,[\"}\"],RXstyle,RXmodifiers);}\n                                        if(c==\"<\"){\n                                                eatSuffix(stream, 2);\n                                                return tokenChain(stream,state,[\">\"],RXstyle,RXmodifiers);}\n                                        if(/[\\^'\"!~\\/]/.test(c)){\n                                                eatSuffix(stream, 1);\n                                                return tokenChain(stream,state,[stream.eat(c)],RXstyle,RXmodifiers);}}\n                                else if(/[\\^'\"!~\\/(\\[{<]/.test(c)){\n                                        if(c==\"(\"){\n                                                eatSuffix(stream, 1);\n                                                return tokenChain(stream,state,[\")\"],\"string\");}\n                                        if(c==\"[\"){\n                                                eatSuffix(stream, 1);\n                                                return tokenChain(stream,state,[\"]\"],\"string\");}\n                                        if(c==\"{\"){\n                                                eatSuffix(stream, 1);\n                                                return tokenChain(stream,state,[\"}\"],\"string\");}\n                                        if(c==\"<\"){\n                                                eatSuffix(stream, 1);\n                                                return tokenChain(stream,state,[\">\"],\"string\");}\n                                        if(/[\\^'\"!~\\/]/.test(c)){\n                                                return tokenChain(stream,state,[stream.eat(c)],\"string\");}}}}\n                if(ch==\"m\"){\n                        var c=look(stream, -2);\n                        if(!(c&&/\\w/.test(c))){\n                                c=stream.eat(/[(\\[{<\\^'\"!~\\/]/);\n                                if(c){\n                                        if(/[\\^'\"!~\\/]/.test(c)){\n                                                return tokenChain(stream,state,[c],RXstyle,RXmodifiers);}\n                                        if(c==\"(\"){\n                                                return tokenChain(stream,state,[\")\"],RXstyle,RXmodifiers);}\n                                        if(c==\"[\"){\n                                                return tokenChain(stream,state,[\"]\"],RXstyle,RXmodifiers);}\n                                        if(c==\"{\"){\n                                                return tokenChain(stream,state,[\"}\"],RXstyle,RXmodifiers);}\n                                        if(c==\"<\"){\n                                                return tokenChain(stream,state,[\">\"],RXstyle,RXmodifiers);}}}}\n                if(ch==\"s\"){\n                        var c=/[\\/>\\]})\\w]/.test(look(stream, -2));\n                        if(!c){\n                                c=stream.eat(/[(\\[{<\\^'\"!~\\/]/);\n                                if(c){\n                                        if(c==\"[\")\n                                                return tokenChain(stream,state,[\"]\",\"]\"],RXstyle,RXmodifiers);\n                                        if(c==\"{\")\n                                                return tokenChain(stream,state,[\"}\",\"}\"],RXstyle,RXmodifiers);\n                                        if(c==\"<\")\n                                                return tokenChain(stream,state,[\">\",\">\"],RXstyle,RXmodifiers);\n                                        if(c==\"(\")\n                                                return tokenChain(stream,state,[\")\",\")\"],RXstyle,RXmodifiers);\n                                        return tokenChain(stream,state,[c,c],RXstyle,RXmodifiers);}}}\n                if(ch==\"y\"){\n                        var c=/[\\/>\\]})\\w]/.test(look(stream, -2));\n                        if(!c){\n                                c=stream.eat(/[(\\[{<\\^'\"!~\\/]/);\n                                if(c){\n                                        if(c==\"[\")\n                                                return tokenChain(stream,state,[\"]\",\"]\"],RXstyle,RXmodifiers);\n                                        if(c==\"{\")\n                                                return tokenChain(stream,state,[\"}\",\"}\"],RXstyle,RXmodifiers);\n                                        if(c==\"<\")\n                                                return tokenChain(stream,state,[\">\",\">\"],RXstyle,RXmodifiers);\n                                        if(c==\"(\")\n                                                return tokenChain(stream,state,[\")\",\")\"],RXstyle,RXmodifiers);\n                                        return tokenChain(stream,state,[c,c],RXstyle,RXmodifiers);}}}\n                if(ch==\"t\"){\n                        var c=/[\\/>\\]})\\w]/.test(look(stream, -2));\n                        if(!c){\n                                c=stream.eat(\"r\");if(c){\n                                c=stream.eat(/[(\\[{<\\^'\"!~\\/]/);\n                                if(c){\n                                        if(c==\"[\")\n                                                return tokenChain(stream,state,[\"]\",\"]\"],RXstyle,RXmodifiers);\n                                        if(c==\"{\")\n                                                return tokenChain(stream,state,[\"}\",\"}\"],RXstyle,RXmodifiers);\n                                        if(c==\"<\")\n                                                return tokenChain(stream,state,[\">\",\">\"],RXstyle,RXmodifiers);\n                                        if(c==\"(\")\n                                                return tokenChain(stream,state,[\")\",\")\"],RXstyle,RXmodifiers);\n                                        return tokenChain(stream,state,[c,c],RXstyle,RXmodifiers);}}}}\n                if(ch==\"`\"){\n                        return tokenChain(stream,state,[ch],\"variable-2\");}\n                if(ch==\"/\"){\n                        if(!/~\\s*$/.test(prefix(stream)))\n                                return \"operator\";\n                        else\n                                return tokenChain(stream,state,[ch],RXstyle,RXmodifiers);}\n                if(ch==\"$\"){\n                        var p=stream.pos;\n                        if(stream.eatWhile(/\\d/)||stream.eat(\"{\")&&stream.eatWhile(/\\d/)&&stream.eat(\"}\"))\n                                return \"variable-2\";\n                        else\n                                stream.pos=p;}\n                if(/[$@%]/.test(ch)){\n                        var p=stream.pos;\n                        if(stream.eat(\"^\")&&stream.eat(/[A-Z]/)||!/[@$%&]/.test(look(stream, -2))&&stream.eat(/[=|\\\\\\-#?@;:&`~\\^!\\[\\]*'\"$+.,\\/<>()]/)){\n                                var c=stream.current();\n                                if(PERL[c])\n                                        return \"variable-2\";}\n                        stream.pos=p;}\n                if(/[$@%&]/.test(ch)){\n                        if(stream.eatWhile(/[\\w$\\[\\]]/)||stream.eat(\"{\")&&stream.eatWhile(/[\\w$\\[\\]]/)&&stream.eat(\"}\")){\n                                var c=stream.current();\n                                if(PERL[c])\n                                        return \"variable-2\";\n                                else\n                                        return \"variable\";}}\n                if(ch==\"#\"){\n                        if(look(stream, -2)!=\"$\"){\n                                stream.skipToEnd();\n                                return \"comment\";}}\n                if(/[:+\\-\\^*$&%@=<>!?|\\/~\\.]/.test(ch)){\n                        var p=stream.pos;\n                        stream.eatWhile(/[:+\\-\\^*$&%@=<>!?|\\/~\\.]/);\n                        if(PERL[stream.current()])\n                                return \"operator\";\n                        else\n                                stream.pos=p;}\n                if(ch==\"_\"){\n                        if(stream.pos==1){\n                                if(suffix(stream, 6)==\"_END__\"){\n                                        return tokenChain(stream,state,['\\0'],\"comment\");}\n                                else if(suffix(stream, 7)==\"_DATA__\"){\n                                        return tokenChain(stream,state,['\\0'],\"variable-2\");}\n                                else if(suffix(stream, 7)==\"_C__\"){\n                                        return tokenChain(stream,state,['\\0'],\"string\");}}}\n                if(/\\w/.test(ch)){\n                        var p=stream.pos;\n                        if(look(stream, -2)==\"{\"&&(look(stream, 0)==\"}\"||stream.eatWhile(/\\w/)&&look(stream, 0)==\"}\"))\n                                return \"string\";\n                        else\n                                stream.pos=p;}\n                if(/[A-Z]/.test(ch)){\n                        var l=look(stream, -2);\n                        var p=stream.pos;\n                        stream.eatWhile(/[A-Z_]/);\n                        if(/[\\da-z]/.test(look(stream, 0))){\n                                stream.pos=p;}\n                        else{\n                                var c=PERL[stream.current()];\n                                if(!c)\n                                        return \"meta\";\n                                if(c[1])\n                                        c=c[0];\n                                if(l!=\":\"){\n                                        if(c==1)\n                                                return \"keyword\";\n                                        else if(c==2)\n                                                return \"def\";\n                                        else if(c==3)\n                                                return \"atom\";\n                                        else if(c==4)\n                                                return \"operator\";\n                                        else if(c==5)\n                                                return \"variable-2\";\n                                        else\n                                                return \"meta\";}\n                                else\n                                        return \"meta\";}}\n                if(/[a-zA-Z_]/.test(ch)){\n                        var l=look(stream, -2);\n                        stream.eatWhile(/\\w/);\n                        var c=PERL[stream.current()];\n                        if(!c)\n                                return \"meta\";\n                        if(c[1])\n                                c=c[0];\n                        if(l!=\":\"){\n                                if(c==1)\n                                        return \"keyword\";\n                                else if(c==2)\n                                        return \"def\";\n                                else if(c==3)\n                                        return \"atom\";\n                                else if(c==4)\n                                        return \"operator\";\n                                else if(c==5)\n                                        return \"variable-2\";\n                                else\n                                        return \"meta\";}\n                        else\n                                return \"meta\";}\n                return null;}\n\n        return {\n            startState: function() {\n                return {\n                    tokenize: tokenPerl,\n                    chain: null,\n                    style: null,\n                    tail: null\n                };\n            },\n            token: function(stream, state) {\n                return (state.tokenize || tokenPerl)(stream, state);\n            },\n            lineComment: '#'\n        };\n});\n\nCodeMirror.registerHelper(\"wordChars\", \"perl\", /[\\w$]/);\n\nCodeMirror.defineMIME(\"text/x-perl\", \"perl\");\n\n// it's like \"peek\", but need for look-ahead or look-behind if index < 0\nfunction look(stream, c){\n  return stream.string.charAt(stream.pos+(c||0));\n}\n\n// return a part of prefix of current stream from current position\nfunction prefix(stream, c){\n  if(c){\n    var x=stream.pos-c;\n    return stream.string.substr((x>=0?x:0),c);}\n  else{\n    return stream.string.substr(0,stream.pos-1);\n  }\n}\n\n// return a part of suffix of current stream from current position\nfunction suffix(stream, c){\n  var y=stream.string.length;\n  var x=y-stream.pos+1;\n  return stream.string.substr(stream.pos,(c&&c<y?c:x));\n}\n\n// eating and vomiting a part of stream from current position\nfunction eatSuffix(stream, c){\n  var x=stream.pos+c;\n  var y;\n  if(x<=0)\n    stream.pos=0;\n  else if(x>=(y=stream.string.length-1))\n    stream.pos=y;\n  else\n    stream.pos=x;\n}\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../clike/clike\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../clike/clike\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function keywords(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  // Helper for phpString\n  function matchSequence(list, end, escapes) {\n    if (list.length == 0) return phpString(end);\n    return function (stream, state) {\n      var patterns = list[0];\n      for (var i = 0; i < patterns.length; i++) if (stream.match(patterns[i][0])) {\n        state.tokenize = matchSequence(list.slice(1), end);\n        return patterns[i][1];\n      }\n      state.tokenize = phpString(end, escapes);\n      return \"string\";\n    };\n  }\n  function phpString(closing, escapes) {\n    return function(stream, state) { return phpString_(stream, state, closing, escapes); };\n  }\n  function phpString_(stream, state, closing, escapes) {\n    // \"Complex\" syntax\n    if (escapes !== false && stream.match(\"${\", false) || stream.match(\"{$\", false)) {\n      state.tokenize = null;\n      return \"string\";\n    }\n\n    // Simple syntax\n    if (escapes !== false && stream.match(/^\\$[a-zA-Z_][a-zA-Z0-9_]*/)) {\n      // After the variable name there may appear array or object operator.\n      if (stream.match(\"[\", false)) {\n        // Match array operator\n        state.tokenize = matchSequence([\n          [[\"[\", null]],\n          [[/\\d[\\w\\.]*/, \"number\"],\n           [/\\$[a-zA-Z_][a-zA-Z0-9_]*/, \"variable-2\"],\n           [/[\\w\\$]+/, \"variable\"]],\n          [[\"]\", null]]\n        ], closing, escapes);\n      }\n      if (stream.match(/\\-\\>\\w/, false)) {\n        // Match object operator\n        state.tokenize = matchSequence([\n          [[\"->\", null]],\n          [[/[\\w]+/, \"variable\"]]\n        ], closing, escapes);\n      }\n      return \"variable-2\";\n    }\n\n    var escaped = false;\n    // Normal string\n    while (!stream.eol() &&\n           (escaped || escapes === false ||\n            (!stream.match(\"{$\", false) &&\n             !stream.match(/^(\\$[a-zA-Z_][a-zA-Z0-9_]*|\\$\\{)/, false)))) {\n      if (!escaped && stream.match(closing)) {\n        state.tokenize = null;\n        state.tokStack.pop(); state.tokStack.pop();\n        break;\n      }\n      escaped = stream.next() == \"\\\\\" && !escaped;\n    }\n    return \"string\";\n  }\n\n  var phpKeywords = \"abstract and array as break case catch class clone const continue declare default \" +\n    \"do else elseif enddeclare endfor endforeach endif endswitch endwhile extends final \" +\n    \"for foreach function global goto if implements interface instanceof namespace \" +\n    \"new or private protected public static switch throw trait try use var while xor \" +\n    \"die echo empty exit eval include include_once isset list require require_once return \" +\n    \"print unset __halt_compiler self static parent yield insteadof finally\";\n  var phpAtoms = \"true false null TRUE FALSE NULL __CLASS__ __DIR__ __FILE__ __LINE__ __METHOD__ __FUNCTION__ __NAMESPACE__ __TRAIT__\";\n  var phpBuiltin = \"func_num_args func_get_arg func_get_args strlen strcmp strncmp strcasecmp strncasecmp each error_reporting define defined trigger_error user_error set_error_handler restore_error_handler get_declared_classes get_loaded_extensions extension_loaded get_extension_funcs debug_backtrace constant bin2hex hex2bin sleep usleep time mktime gmmktime strftime gmstrftime strtotime date gmdate getdate localtime checkdate flush wordwrap htmlspecialchars htmlentities html_entity_decode md5 md5_file crc32 getimagesize image_type_to_mime_type phpinfo phpversion phpcredits strnatcmp strnatcasecmp substr_count strspn strcspn strtok strtoupper strtolower strpos strrpos strrev hebrev hebrevc nl2br basename dirname pathinfo stripslashes stripcslashes strstr stristr strrchr str_shuffle str_word_count strcoll substr substr_replace quotemeta ucfirst ucwords strtr addslashes addcslashes rtrim str_replace str_repeat count_chars chunk_split trim ltrim strip_tags similar_text explode implode setlocale localeconv parse_str str_pad chop strchr sprintf printf vprintf vsprintf sscanf fscanf parse_url urlencode urldecode rawurlencode rawurldecode readlink linkinfo link unlink exec system escapeshellcmd escapeshellarg passthru shell_exec proc_open proc_close rand srand getrandmax mt_rand mt_srand mt_getrandmax base64_decode base64_encode abs ceil floor round is_finite is_nan is_infinite bindec hexdec octdec decbin decoct dechex base_convert number_format fmod ip2long long2ip getenv putenv getopt microtime gettimeofday getrusage uniqid quoted_printable_decode set_time_limit get_cfg_var magic_quotes_runtime set_magic_quotes_runtime get_magic_quotes_gpc get_magic_quotes_runtime import_request_variables error_log serialize unserialize memory_get_usage var_dump var_export debug_zval_dump print_r highlight_file show_source highlight_string ini_get ini_get_all ini_set ini_alter ini_restore get_include_path set_include_path restore_include_path setcookie header headers_sent connection_aborted connection_status ignore_user_abort parse_ini_file is_uploaded_file move_uploaded_file intval floatval doubleval strval gettype settype is_null is_resource is_bool is_long is_float is_int is_integer is_double is_real is_numeric is_string is_array is_object is_scalar ereg ereg_replace eregi eregi_replace split spliti join sql_regcase dl pclose popen readfile rewind rmdir umask fclose feof fgetc fgets fgetss fread fopen fpassthru ftruncate fstat fseek ftell fflush fwrite fputs mkdir rename copy tempnam tmpfile file file_get_contents file_put_contents stream_select stream_context_create stream_context_set_params stream_context_set_option stream_context_get_options stream_filter_prepend stream_filter_append fgetcsv flock get_meta_tags stream_set_write_buffer set_file_buffer set_socket_blocking stream_set_blocking socket_set_blocking stream_get_meta_data stream_register_wrapper stream_wrapper_register stream_set_timeout socket_set_timeout socket_get_status realpath fnmatch fsockopen pfsockopen pack unpack get_browser crypt opendir closedir chdir getcwd rewinddir readdir dir glob fileatime filectime filegroup fileinode filemtime fileowner fileperms filesize filetype file_exists is_writable is_writeable is_readable is_executable is_file is_dir is_link stat lstat chown touch clearstatcache mail ob_start ob_flush ob_clean ob_end_flush ob_end_clean ob_get_flush ob_get_clean ob_get_length ob_get_level ob_get_status ob_get_contents ob_implicit_flush ob_list_handlers ksort krsort natsort natcasesort asort arsort sort rsort usort uasort uksort shuffle array_walk count end prev next reset current key min max in_array array_search extract compact array_fill range array_multisort array_push array_pop array_shift array_unshift array_splice array_slice array_merge array_merge_recursive array_keys array_values array_count_values array_reverse array_reduce array_pad array_flip array_change_key_case array_rand array_unique array_intersect array_intersect_assoc array_diff array_diff_assoc array_sum array_filter array_map array_chunk array_key_exists array_intersect_key array_combine array_column pos sizeof key_exists assert assert_options version_compare ftok str_rot13 aggregate session_name session_module_name session_save_path session_id session_regenerate_id session_decode session_register session_unregister session_is_registered session_encode session_start session_destroy session_unset session_set_save_handler session_cache_limiter session_cache_expire session_set_cookie_params session_get_cookie_params session_write_close preg_match preg_match_all preg_replace preg_replace_callback preg_split preg_quote preg_grep overload ctype_alnum ctype_alpha ctype_cntrl ctype_digit ctype_lower ctype_graph ctype_print ctype_punct ctype_space ctype_upper ctype_xdigit virtual apache_request_headers apache_note apache_lookup_uri apache_child_terminate apache_setenv apache_response_headers apache_get_version getallheaders mysql_connect mysql_pconnect mysql_close mysql_select_db mysql_create_db mysql_drop_db mysql_query mysql_unbuffered_query mysql_db_query mysql_list_dbs mysql_list_tables mysql_list_fields mysql_list_processes mysql_error mysql_errno mysql_affected_rows mysql_insert_id mysql_result mysql_num_rows mysql_num_fields mysql_fetch_row mysql_fetch_array mysql_fetch_assoc mysql_fetch_object mysql_data_seek mysql_fetch_lengths mysql_fetch_field mysql_field_seek mysql_free_result mysql_field_name mysql_field_table mysql_field_len mysql_field_type mysql_field_flags mysql_escape_string mysql_real_escape_string mysql_stat mysql_thread_id mysql_client_encoding mysql_get_client_info mysql_get_host_info mysql_get_proto_info mysql_get_server_info mysql_info mysql mysql_fieldname mysql_fieldtable mysql_fieldlen mysql_fieldtype mysql_fieldflags mysql_selectdb mysql_createdb mysql_dropdb mysql_freeresult mysql_numfields mysql_numrows mysql_listdbs mysql_listtables mysql_listfields mysql_db_name mysql_dbname mysql_tablename mysql_table_name pg_connect pg_pconnect pg_close pg_connection_status pg_connection_busy pg_connection_reset pg_host pg_dbname pg_port pg_tty pg_options pg_ping pg_query pg_send_query pg_cancel_query pg_fetch_result pg_fetch_row pg_fetch_assoc pg_fetch_array pg_fetch_object pg_fetch_all pg_affected_rows pg_get_result pg_result_seek pg_result_status pg_free_result pg_last_oid pg_num_rows pg_num_fields pg_field_name pg_field_num pg_field_size pg_field_type pg_field_prtlen pg_field_is_null pg_get_notify pg_get_pid pg_result_error pg_last_error pg_last_notice pg_put_line pg_end_copy pg_copy_to pg_copy_from pg_trace pg_untrace pg_lo_create pg_lo_unlink pg_lo_open pg_lo_close pg_lo_read pg_lo_write pg_lo_read_all pg_lo_import pg_lo_export pg_lo_seek pg_lo_tell pg_escape_string pg_escape_bytea pg_unescape_bytea pg_client_encoding pg_set_client_encoding pg_meta_data pg_convert pg_insert pg_update pg_delete pg_select pg_exec pg_getlastoid pg_cmdtuples pg_errormessage pg_numrows pg_numfields pg_fieldname pg_fieldsize pg_fieldtype pg_fieldnum pg_fieldprtlen pg_fieldisnull pg_freeresult pg_result pg_loreadall pg_locreate pg_lounlink pg_loopen pg_loclose pg_loread pg_lowrite pg_loimport pg_loexport http_response_code get_declared_traits getimagesizefromstring socket_import_stream stream_set_chunk_size trait_exists header_register_callback class_uses session_status session_register_shutdown echo print global static exit array empty eval isset unset die include require include_once require_once json_decode json_encode json_last_error json_last_error_msg curl_close curl_copy_handle curl_errno curl_error curl_escape curl_exec curl_file_create curl_getinfo curl_init curl_multi_add_handle curl_multi_close curl_multi_exec curl_multi_getcontent curl_multi_info_read curl_multi_init curl_multi_remove_handle curl_multi_select curl_multi_setopt curl_multi_strerror curl_pause curl_reset curl_setopt_array curl_setopt curl_share_close curl_share_init curl_share_setopt curl_strerror curl_unescape curl_version mysqli_affected_rows mysqli_autocommit mysqli_change_user mysqli_character_set_name mysqli_close mysqli_commit mysqli_connect_errno mysqli_connect_error mysqli_connect mysqli_data_seek mysqli_debug mysqli_dump_debug_info mysqli_errno mysqli_error_list mysqli_error mysqli_fetch_all mysqli_fetch_array mysqli_fetch_assoc mysqli_fetch_field_direct mysqli_fetch_field mysqli_fetch_fields mysqli_fetch_lengths mysqli_fetch_object mysqli_fetch_row mysqli_field_count mysqli_field_seek mysqli_field_tell mysqli_free_result mysqli_get_charset mysqli_get_client_info mysqli_get_client_stats mysqli_get_client_version mysqli_get_connection_stats mysqli_get_host_info mysqli_get_proto_info mysqli_get_server_info mysqli_get_server_version mysqli_info mysqli_init mysqli_insert_id mysqli_kill mysqli_more_results mysqli_multi_query mysqli_next_result mysqli_num_fields mysqli_num_rows mysqli_options mysqli_ping mysqli_prepare mysqli_query mysqli_real_connect mysqli_real_escape_string mysqli_real_query mysqli_reap_async_query mysqli_refresh mysqli_rollback mysqli_select_db mysqli_set_charset mysqli_set_local_infile_default mysqli_set_local_infile_handler mysqli_sqlstate mysqli_ssl_set mysqli_stat mysqli_stmt_init mysqli_store_result mysqli_thread_id mysqli_thread_safe mysqli_use_result mysqli_warning_count\";\n  CodeMirror.registerHelper(\"hintWords\", \"php\", [phpKeywords, phpAtoms, phpBuiltin].join(\" \").split(\" \"));\n  CodeMirror.registerHelper(\"wordChars\", \"php\", /[\\w$]/);\n\n  var phpConfig = {\n    name: \"clike\",\n    helperType: \"php\",\n    keywords: keywords(phpKeywords),\n    blockKeywords: keywords(\"catch do else elseif for foreach if switch try while finally\"),\n    defKeywords: keywords(\"class function interface namespace trait\"),\n    atoms: keywords(phpAtoms),\n    builtin: keywords(phpBuiltin),\n    multiLineStrings: true,\n    hooks: {\n      \"$\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"variable-2\";\n      },\n      \"<\": function(stream, state) {\n        var before;\n        if (before = stream.match(/<<\\s*/)) {\n          var quoted = stream.eat(/['\"]/);\n          stream.eatWhile(/[\\w\\.]/);\n          var delim = stream.current().slice(before[0].length + (quoted ? 2 : 1));\n          if (quoted) stream.eat(quoted);\n          if (delim) {\n            (state.tokStack || (state.tokStack = [])).push(delim, 0);\n            state.tokenize = phpString(delim, quoted != \"'\");\n            return \"string\";\n          }\n        }\n        return false;\n      },\n      \"#\": function(stream) {\n        while (!stream.eol() && !stream.match(\"?>\", false)) stream.next();\n        return \"comment\";\n      },\n      \"/\": function(stream) {\n        if (stream.eat(\"/\")) {\n          while (!stream.eol() && !stream.match(\"?>\", false)) stream.next();\n          return \"comment\";\n        }\n        return false;\n      },\n      '\"': function(_stream, state) {\n        (state.tokStack || (state.tokStack = [])).push('\"', 0);\n        state.tokenize = phpString('\"');\n        return \"string\";\n      },\n      \"{\": function(_stream, state) {\n        if (state.tokStack && state.tokStack.length)\n          state.tokStack[state.tokStack.length - 1]++;\n        return false;\n      },\n      \"}\": function(_stream, state) {\n        if (state.tokStack && state.tokStack.length > 0 &&\n            !--state.tokStack[state.tokStack.length - 1]) {\n          state.tokenize = phpString(state.tokStack[state.tokStack.length - 2]);\n        }\n        return false;\n      }\n    }\n  };\n\n  CodeMirror.defineMode(\"php\", function(config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, \"text/html\");\n    var phpMode = CodeMirror.getMode(config, phpConfig);\n\n    function dispatch(stream, state) {\n      var isPHP = state.curMode == phpMode;\n      if (stream.sol() && state.pending && state.pending != '\"' && state.pending != \"'\") state.pending = null;\n      if (!isPHP) {\n        if (stream.match(/^<\\?\\w*/)) {\n          state.curMode = phpMode;\n          if (!state.php) state.php = CodeMirror.startState(phpMode, htmlMode.indent(state.html, \"\"))\n          state.curState = state.php;\n          return \"meta\";\n        }\n        if (state.pending == '\"' || state.pending == \"'\") {\n          while (!stream.eol() && stream.next() != state.pending) {}\n          var style = \"string\";\n        } else if (state.pending && stream.pos < state.pending.end) {\n          stream.pos = state.pending.end;\n          var style = state.pending.style;\n        } else {\n          var style = htmlMode.token(stream, state.curState);\n        }\n        if (state.pending) state.pending = null;\n        var cur = stream.current(), openPHP = cur.search(/<\\?/), m;\n        if (openPHP != -1) {\n          if (style == \"string\" && (m = cur.match(/[\\'\\\"]$/)) && !/\\?>/.test(cur)) state.pending = m[0];\n          else state.pending = {end: stream.pos, style: style};\n          stream.backUp(cur.length - openPHP);\n        }\n        return style;\n      } else if (isPHP && state.php.tokenize == null && stream.match(\"?>\")) {\n        state.curMode = htmlMode;\n        state.curState = state.html;\n        if (!state.php.context.prev) state.php = null;\n        return \"meta\";\n      } else {\n        return phpMode.token(stream, state.curState);\n      }\n    }\n\n    return {\n      startState: function() {\n        var html = CodeMirror.startState(htmlMode)\n        var php = parserConfig.startOpen ? CodeMirror.startState(phpMode) : null\n        return {html: html,\n                php: php,\n                curMode: parserConfig.startOpen ? phpMode : htmlMode,\n                curState: parserConfig.startOpen ? php : html,\n                pending: null};\n      },\n\n      copyState: function(state) {\n        var html = state.html, htmlNew = CodeMirror.copyState(htmlMode, html),\n            php = state.php, phpNew = php && CodeMirror.copyState(phpMode, php), cur;\n        if (state.curMode == htmlMode) cur = htmlNew;\n        else cur = phpNew;\n        return {html: htmlNew, php: phpNew, curMode: state.curMode, curState: cur,\n                pending: state.pending};\n      },\n\n      token: dispatch,\n\n      indent: function(state, textAfter) {\n        if ((state.curMode != phpMode && /^\\s*<\\//.test(textAfter)) ||\n            (state.curMode == phpMode && /^\\?>/.test(textAfter)))\n          return htmlMode.indent(state.html, textAfter);\n        return state.curMode.indent(state.curState, textAfter);\n      },\n\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      lineComment: \"//\",\n\n      innerMode: function(state) { return {state: state.curState, mode: state.curMode}; }\n    };\n  }, \"htmlmixed\", \"clike\");\n\n  CodeMirror.defineMIME(\"application/x-httpd-php\", \"php\");\n  CodeMirror.defineMIME(\"application/x-httpd-php-open\", {name: \"php\", startOpen: true});\n  CodeMirror.defineMIME(\"text/x-php\", phpConfig);\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var wordOperators = wordRegexp([\"and\", \"or\", \"not\", \"is\"]);\n  var commonKeywords = [\"as\", \"assert\", \"break\", \"class\", \"continue\",\n                        \"def\", \"del\", \"elif\", \"else\", \"except\", \"finally\",\n                        \"for\", \"from\", \"global\", \"if\", \"import\",\n                        \"lambda\", \"pass\", \"raise\", \"return\",\n                        \"try\", \"while\", \"with\", \"yield\", \"in\"];\n  var commonBuiltins = [\"abs\", \"all\", \"any\", \"bin\", \"bool\", \"bytearray\", \"callable\", \"chr\",\n                        \"classmethod\", \"compile\", \"complex\", \"delattr\", \"dict\", \"dir\", \"divmod\",\n                        \"enumerate\", \"eval\", \"filter\", \"float\", \"format\", \"frozenset\",\n                        \"getattr\", \"globals\", \"hasattr\", \"hash\", \"help\", \"hex\", \"id\",\n                        \"input\", \"int\", \"isinstance\", \"issubclass\", \"iter\", \"len\",\n                        \"list\", \"locals\", \"map\", \"max\", \"memoryview\", \"min\", \"next\",\n                        \"object\", \"oct\", \"open\", \"ord\", \"pow\", \"property\", \"range\",\n                        \"repr\", \"reversed\", \"round\", \"set\", \"setattr\", \"slice\",\n                        \"sorted\", \"staticmethod\", \"str\", \"sum\", \"super\", \"tuple\",\n                        \"type\", \"vars\", \"zip\", \"__import__\", \"NotImplemented\",\n                        \"Ellipsis\", \"__debug__\"];\n  CodeMirror.registerHelper(\"hintWords\", \"python\", commonKeywords.concat(commonBuiltins));\n\n  function top(state) {\n    return state.scopes[state.scopes.length - 1];\n  }\n\n  CodeMirror.defineMode(\"python\", function(conf, parserConf) {\n    var ERRORCLASS = \"error\";\n\n    var singleDelimiters = parserConf.singleDelimiters || /^[\\(\\)\\[\\]\\{\\}@,:`=;\\.]/;\n    var doubleOperators = parserConf.doubleOperators || /^([!<>]==|<>|<<|>>|\\/\\/|\\*\\*)/;\n    var doubleDelimiters = parserConf.doubleDelimiters || /^(\\+=|\\-=|\\*=|%=|\\/=|&=|\\|=|\\^=)/;\n    var tripleDelimiters = parserConf.tripleDelimiters || /^(\\/\\/=|>>=|<<=|\\*\\*=)/;\n\n    var hangingIndent = parserConf.hangingIndent || conf.indentUnit;\n\n    var myKeywords = commonKeywords, myBuiltins = commonBuiltins;\n    if (parserConf.extra_keywords != undefined)\n      myKeywords = myKeywords.concat(parserConf.extra_keywords);\n\n    if (parserConf.extra_builtins != undefined)\n      myBuiltins = myBuiltins.concat(parserConf.extra_builtins);\n\n    var py3 = !(parserConf.version && Number(parserConf.version) < 3)\n    if (py3) {\n      // since http://legacy.python.org/dev/peps/pep-0465/ @ is also an operator\n      var singleOperators = parserConf.singleOperators || /^[\\+\\-\\*\\/%&|\\^~<>!@]/;\n      var identifiers = parserConf.identifiers|| /^[_A-Za-z\\u00A1-\\uFFFF][_A-Za-z0-9\\u00A1-\\uFFFF]*/;\n      myKeywords = myKeywords.concat([\"nonlocal\", \"False\", \"True\", \"None\", \"async\", \"await\"]);\n      myBuiltins = myBuiltins.concat([\"ascii\", \"bytes\", \"exec\", \"print\"]);\n      var stringPrefixes = new RegExp(\"^(([rbuf]|(br))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    } else {\n      var singleOperators = parserConf.singleOperators || /^[\\+\\-\\*\\/%&|\\^~<>!]/;\n      var identifiers = parserConf.identifiers|| /^[_A-Za-z][_A-Za-z0-9]*/;\n      myKeywords = myKeywords.concat([\"exec\", \"print\"]);\n      myBuiltins = myBuiltins.concat([\"apply\", \"basestring\", \"buffer\", \"cmp\", \"coerce\", \"execfile\",\n                                      \"file\", \"intern\", \"long\", \"raw_input\", \"reduce\", \"reload\",\n                                      \"unichr\", \"unicode\", \"xrange\", \"False\", \"True\", \"None\"]);\n      var stringPrefixes = new RegExp(\"^(([rubf]|(ur)|(br))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    }\n    var keywords = wordRegexp(myKeywords);\n    var builtins = wordRegexp(myBuiltins);\n\n    // tokenizers\n    function tokenBase(stream, state) {\n      if (stream.sol()) state.indent = stream.indentation()\n      // Handle scope changes\n      if (stream.sol() && top(state).type == \"py\") {\n        var scopeOffset = top(state).offset;\n        if (stream.eatSpace()) {\n          var lineOffset = stream.indentation();\n          if (lineOffset > scopeOffset)\n            pushPyScope(state);\n          else if (lineOffset < scopeOffset && dedent(stream, state) && stream.peek() != \"#\")\n            state.errorToken = true;\n          return null;\n        } else {\n          var style = tokenBaseInner(stream, state);\n          if (scopeOffset > 0 && dedent(stream, state))\n            style += \" \" + ERRORCLASS;\n          return style;\n        }\n      }\n      return tokenBaseInner(stream, state);\n    }\n\n    function tokenBaseInner(stream, state) {\n      if (stream.eatSpace()) return null;\n\n      var ch = stream.peek();\n\n      // Handle Comments\n      if (ch == \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      // Handle Number Literals\n      if (stream.match(/^[0-9\\.]/, false)) {\n        var floatLiteral = false;\n        // Floats\n        if (stream.match(/^[\\d_]*\\.\\d+(e[\\+\\-]?\\d+)?/i)) { floatLiteral = true; }\n        if (stream.match(/^[\\d_]+\\.\\d*/)) { floatLiteral = true; }\n        if (stream.match(/^\\.\\d+/)) { floatLiteral = true; }\n        if (floatLiteral) {\n          // Float literals may be \"imaginary\"\n          stream.eat(/J/i);\n          return \"number\";\n        }\n        // Integers\n        var intLiteral = false;\n        // Hex\n        if (stream.match(/^0x[0-9a-f_]+/i)) intLiteral = true;\n        // Binary\n        if (stream.match(/^0b[01_]+/i)) intLiteral = true;\n        // Octal\n        if (stream.match(/^0o[0-7_]+/i)) intLiteral = true;\n        // Decimal\n        if (stream.match(/^[1-9][\\d_]*(e[\\+\\-]?[\\d_]+)?/)) {\n          // Decimal literals may be \"imaginary\"\n          stream.eat(/J/i);\n          // TODO - Can you have imaginary longs?\n          intLiteral = true;\n        }\n        // Zero by itself with no other piece of number.\n        if (stream.match(/^0(?![\\dx])/i)) intLiteral = true;\n        if (intLiteral) {\n          // Integer literals may be \"long\"\n          stream.eat(/L/i);\n          return \"number\";\n        }\n      }\n\n      // Handle Strings\n      if (stream.match(stringPrefixes)) {\n        state.tokenize = tokenStringFactory(stream.current());\n        return state.tokenize(stream, state);\n      }\n\n      // Handle operators and Delimiters\n      if (stream.match(tripleDelimiters) || stream.match(doubleDelimiters))\n        return \"punctuation\";\n\n      if (stream.match(doubleOperators) || stream.match(singleOperators))\n        return \"operator\";\n\n      if (stream.match(singleDelimiters))\n        return \"punctuation\";\n\n      if (state.lastToken == \".\" && stream.match(identifiers))\n        return \"property\";\n\n      if (stream.match(keywords) || stream.match(wordOperators))\n        return \"keyword\";\n\n      if (stream.match(builtins))\n        return \"builtin\";\n\n      if (stream.match(/^(self|cls)\\b/))\n        return \"variable-2\";\n\n      if (stream.match(identifiers)) {\n        if (state.lastToken == \"def\" || state.lastToken == \"class\")\n          return \"def\";\n        return \"variable\";\n      }\n\n      // Handle non-detected items\n      stream.next();\n      return ERRORCLASS;\n    }\n\n    function tokenStringFactory(delimiter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n        delimiter = delimiter.substr(1);\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol())\n              return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenBase;\n            return OUTCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors)\n            return ERRORCLASS;\n          else\n            state.tokenize = tokenBase;\n        }\n        return OUTCLASS;\n      }\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function pushPyScope(state) {\n      while (top(state).type != \"py\") state.scopes.pop()\n      state.scopes.push({offset: top(state).offset + conf.indentUnit,\n                         type: \"py\",\n                         align: null})\n    }\n\n    function pushBracketScope(stream, state, type) {\n      var align = stream.match(/^([\\s\\[\\{\\(]|#.*)*$/, false) ? null : stream.column() + 1\n      state.scopes.push({offset: state.indent + hangingIndent,\n                         type: type,\n                         align: align})\n    }\n\n    function dedent(stream, state) {\n      var indented = stream.indentation();\n      while (state.scopes.length > 1 && top(state).offset > indented) {\n        if (top(state).type != \"py\") return true;\n        state.scopes.pop();\n      }\n      return top(state).offset != indented;\n    }\n\n    function tokenLexer(stream, state) {\n      if (stream.sol()) state.beginningOfLine = true;\n\n      var style = state.tokenize(stream, state);\n      var current = stream.current();\n\n      // Handle decorators\n      if (state.beginningOfLine && current == \"@\")\n        return stream.match(identifiers, false) ? \"meta\" : py3 ? \"operator\" : ERRORCLASS;\n\n      if (/\\S/.test(current)) state.beginningOfLine = false;\n\n      if ((style == \"variable\" || style == \"builtin\")\n          && state.lastToken == \"meta\")\n        style = \"meta\";\n\n      // Handle scope changes.\n      if (current == \"pass\" || current == \"return\")\n        state.dedent += 1;\n\n      if (current == \"lambda\") state.lambda = true;\n      if (current == \":\" && !state.lambda && top(state).type == \"py\")\n        pushPyScope(state);\n\n      var delimiter_index = current.length == 1 ? \"[({\".indexOf(current) : -1;\n      if (delimiter_index != -1)\n        pushBracketScope(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n\n      delimiter_index = \"])}\".indexOf(current);\n      if (delimiter_index != -1) {\n        if (top(state).type == current) state.indent = state.scopes.pop().offset - hangingIndent\n        else return ERRORCLASS;\n      }\n      if (state.dedent > 0 && stream.eol() && top(state).type == \"py\") {\n        if (state.scopes.length > 1) state.scopes.pop();\n        state.dedent -= 1;\n      }\n\n      return style;\n    }\n\n    var external = {\n      startState: function(basecolumn) {\n        return {\n          tokenize: tokenBase,\n          scopes: [{offset: basecolumn || 0, type: \"py\", align: null}],\n          indent: basecolumn || 0,\n          lastToken: null,\n          lambda: false,\n          dedent: 0\n        };\n      },\n\n      token: function(stream, state) {\n        var addErr = state.errorToken;\n        if (addErr) state.errorToken = false;\n        var style = tokenLexer(stream, state);\n\n        if (style && style != \"comment\")\n          state.lastToken = (style == \"keyword\" || style == \"punctuation\") ? stream.current() : style;\n        if (style == \"punctuation\") style = null;\n\n        if (stream.eol() && state.lambda)\n          state.lambda = false;\n        return addErr ? style + \" \" + ERRORCLASS : style;\n      },\n\n      indent: function(state, textAfter) {\n        if (state.tokenize != tokenBase)\n          return state.tokenize.isString ? CodeMirror.Pass : 0;\n\n        var scope = top(state), closing = scope.type == textAfter.charAt(0)\n        if (scope.align != null)\n          return scope.align - (closing ? 1 : 0)\n        else\n          return scope.offset - (closing ? hangingIndent : 0)\n      },\n\n      electricInput: /^\\s*[\\}\\]\\)]$/,\n      closeBrackets: {triples: \"'\\\"\"},\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n    return external;\n  });\n\n  CodeMirror.defineMIME(\"text/x-python\", \"python\");\n\n  var words = function(str) { return str.split(\" \"); };\n\n  CodeMirror.defineMIME(\"text/x-cython\", {\n    name: \"python\",\n    extra_keywords: words(\"by cdef cimport cpdef ctypedef enum except \"+\n                          \"extern gil include nogil property public \"+\n                          \"readonly struct union DEF IF ELIF ELSE\")\n  });\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  function wordObj(words) {\n    var o = {};\n    for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n    return o;\n  }\n  var keywords = wordObj([\n    \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n    \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n    \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n    \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n    \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n    \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n  ]);\n  var indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                             \"catch\", \"loop\", \"proc\", \"begin\"]);\n  var dedentWords = wordObj([\"end\", \"until\"]);\n  var matching = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (matching.propertyIsEnumerable(delim)) delim = matching[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<-?[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase) {\n    return function(stream, state) {\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closing = ct.type == matching[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closing ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('shell', function() {\n\n  var words = {};\n  function define(style, string) {\n    var split = string.split(' ');\n    for(var i = 0; i < split.length; i++) {\n      words[split[i]] = style;\n    }\n  };\n\n  // Atoms\n  define('atom', 'true false');\n\n  // Keywords\n  define('keyword', 'if then do else elif while until for in esac fi fin ' +\n    'fil done exit set unset export function');\n\n  // Commands\n  define('builtin', 'ab awk bash beep cat cc cd chown chmod chroot clear cp ' +\n    'curl cut diff echo find gawk gcc get git grep kill killall ln ls make ' +\n    'mkdir openssl mv nc node npm ping ps restart rm rmdir sed service sh ' +\n    'shopt shred source sort sleep ssh start stop su sudo tee telnet top ' +\n    'touch vi vim wall wc wget who write yes zsh');\n\n  function tokenBase(stream, state) {\n    if (stream.eatSpace()) return null;\n\n    var sol = stream.sol();\n    var ch = stream.next();\n\n    if (ch === '\\\\') {\n      stream.next();\n      return null;\n    }\n    if (ch === '\\'' || ch === '\"' || ch === '`') {\n      state.tokens.unshift(tokenString(ch, ch === \"`\" ? \"quote\" : \"string\"));\n      return tokenize(stream, state);\n    }\n    if (ch === '#') {\n      if (sol && stream.eat('!')) {\n        stream.skipToEnd();\n        return 'meta'; // 'comment'?\n      }\n      stream.skipToEnd();\n      return 'comment';\n    }\n    if (ch === '$') {\n      state.tokens.unshift(tokenDollar);\n      return tokenize(stream, state);\n    }\n    if (ch === '+' || ch === '=') {\n      return 'operator';\n    }\n    if (ch === '-') {\n      stream.eat('-');\n      stream.eatWhile(/\\w/);\n      return 'attribute';\n    }\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/\\d/);\n      if(stream.eol() || !/\\w/.test(stream.peek())) {\n        return 'number';\n      }\n    }\n    stream.eatWhile(/[\\w-]/);\n    var cur = stream.current();\n    if (stream.peek() === '=' && /\\w+/.test(cur)) return 'def';\n    return words.hasOwnProperty(cur) ? words[cur] : null;\n  }\n\n  function tokenString(quote, style) {\n    var close = quote == \"(\" ? \")\" : quote == \"{\" ? \"}\" : quote\n    return function(stream, state) {\n      var next, end = false, escaped = false;\n      while ((next = stream.next()) != null) {\n        if (next === close && !escaped) {\n          end = true;\n          break;\n        }\n        if (next === '$' && !escaped && quote !== \"'\") {\n          escaped = true;\n          stream.backUp(1);\n          state.tokens.unshift(tokenDollar);\n          break;\n        }\n        if (!escaped && next === quote && quote !== close) {\n          state.tokens.unshift(tokenString(quote, style))\n          return tokenize(stream, state)\n        }\n        escaped = !escaped && next === '\\\\';\n      }\n      if (end || !escaped) state.tokens.shift();\n      return style;\n    };\n  };\n\n  var tokenDollar = function(stream, state) {\n    if (state.tokens.length > 1) stream.eat('$');\n    var ch = stream.next()\n    if (/['\"({]/.test(ch)) {\n      state.tokens[0] = tokenString(ch, ch == \"(\" ? \"quote\" : ch == \"{\" ? \"def\" : \"string\");\n      return tokenize(stream, state);\n    }\n    if (!/\\d/.test(ch)) stream.eatWhile(/\\w/);\n    state.tokens.shift();\n    return 'def';\n  };\n\n  function tokenize(stream, state) {\n    return (state.tokens[0] || tokenBase) (stream, state);\n  };\n\n  return {\n    startState: function() {return {tokens:[]};},\n    token: function(stream, state) {\n      return tokenize(stream, state);\n    },\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n    lineComment: '#',\n    fold: \"brace\"\n  };\n});\n\nCodeMirror.defineMIME('text/x-sh', 'shell');\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"sql\", function(config, parserConfig) {\n  \"use strict\";\n\n  var client         = parserConfig.client || {},\n      atoms          = parserConfig.atoms || {\"false\": true, \"true\": true, \"null\": true},\n      builtin        = parserConfig.builtin || {},\n      keywords       = parserConfig.keywords || {},\n      operatorChars  = parserConfig.operatorChars || /^[*+\\-%<>!=&|~^]/,\n      support        = parserConfig.support || {},\n      hooks          = parserConfig.hooks || {},\n      dateSQL        = parserConfig.dateSQL || {\"date\" : true, \"time\" : true, \"timestamp\" : true};\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n\n    if(!ch){\n      return null;\n    }\n\n    // call hooks from the mime type\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n\n    if (support.hexNumber &&\n      ((ch == \"0\" && stream.match(/^[xX][0-9a-fA-F]+/))\n      || (ch == \"x\" || ch == \"X\") && stream.match(/^'[0-9a-fA-F]+'/))) {\n      // hex\n      // ref: http://dev.mysql.com/doc/refman/5.5/en/hexadecimal-literals.html\n      return \"number\";\n    } else if (support.binaryNumber &&\n      (((ch == \"b\" || ch == \"B\") && stream.match(/^'[01]+'/))\n      || (ch == \"0\" && stream.match(/^b[01]+/)))) {\n      // bitstring\n      // ref: http://dev.mysql.com/doc/refman/5.5/en/bit-field-literals.html\n      return \"number\";\n    } else if (ch.charCodeAt(0) > 47 && ch.charCodeAt(0) < 58) {\n      // numbers\n      // ref: http://dev.mysql.com/doc/refman/5.5/en/number-literals.html\n          stream.match(/^[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?/);\n      support.decimallessFloat && stream.eat('.');\n      return \"number\";\n    } else if (ch == \"?\" && (stream.eatSpace() || stream.eol() || stream.eat(\";\"))) {\n      // placeholders\n      return \"variable-3\";\n    } else if (ch == \"'\" || (ch == '\"' && support.doubleQuote)) {\n      // strings\n      // ref: http://dev.mysql.com/doc/refman/5.5/en/string-literals.html\n      state.tokenize = tokenLiteral(ch);\n      return state.tokenize(stream, state);\n    } else if ((((support.nCharCast && (ch == \"n\" || ch == \"N\"))\n        || (support.charsetCast && ch == \"_\" && stream.match(/[a-z][a-z0-9]*/i)))\n        && (stream.peek() == \"'\" || stream.peek() == '\"'))) {\n      // charset casting: _utf8'str', N'str', n'str'\n      // ref: http://dev.mysql.com/doc/refman/5.5/en/string-literals.html\n      return \"keyword\";\n    } else if (/^[\\(\\),\\;\\[\\]]/.test(ch)) {\n      // no highlighting\n      return null;\n    } else if (support.commentSlashSlash && ch == \"/\" && stream.eat(\"/\")) {\n      // 1-line comment\n      stream.skipToEnd();\n      return \"comment\";\n    } else if ((support.commentHash && ch == \"#\")\n        || (ch == \"-\" && stream.eat(\"-\") && (!support.commentSpaceRequired || stream.eat(\" \")))) {\n      // 1-line comments\n      // ref: https://kb.askmonty.org/en/comment-syntax/\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"/\" && stream.eat(\"*\")) {\n      // multi-line comments\n      // ref: https://kb.askmonty.org/en/comment-syntax/\n      state.tokenize = tokenComment;\n      return state.tokenize(stream, state);\n    } else if (ch == \".\") {\n      // .1 for 0.1\n      if (support.zerolessFloat && stream.match(/^(?:\\d+(?:e[+-]?\\d+)?)/i)) {\n        return \"number\";\n      }\n      // .table_name (ODBC)\n      // // ref: http://dev.mysql.com/doc/refman/5.6/en/identifier-qualifiers.html\n      if (support.ODBCdotTable && stream.match(/^[a-zA-Z_]+/)) {\n        return \"variable-2\";\n      }\n    } else if (operatorChars.test(ch)) {\n      // operators\n      stream.eatWhile(operatorChars);\n      return null;\n    } else if (ch == '{' &&\n        (stream.match(/^( )*(d|D|t|T|ts|TS)( )*'[^']*'( )*}/) || stream.match(/^( )*(d|D|t|T|ts|TS)( )*\"[^\"]*\"( )*}/))) {\n      // dates (weird ODBC syntax)\n      // ref: http://dev.mysql.com/doc/refman/5.5/en/date-and-time-literals.html\n      return \"number\";\n    } else {\n      stream.eatWhile(/^[_\\w\\d]/);\n      var word = stream.current().toLowerCase();\n      // dates (standard SQL syntax)\n      // ref: http://dev.mysql.com/doc/refman/5.5/en/date-and-time-literals.html\n      if (dateSQL.hasOwnProperty(word) && (stream.match(/^( )+'[^']*'/) || stream.match(/^( )+\"[^\"]*\"/)))\n        return \"number\";\n      if (atoms.hasOwnProperty(word)) return \"atom\";\n      if (builtin.hasOwnProperty(word)) return \"builtin\";\n      if (keywords.hasOwnProperty(word)) return \"keyword\";\n      if (client.hasOwnProperty(word)) return \"string-2\";\n      return null;\n    }\n  }\n\n  // 'string', with char specified in quote escaped by '\\'\n  function tokenLiteral(quote) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return \"string\";\n    };\n  }\n  function tokenComment(stream, state) {\n    while (true) {\n      if (stream.skipTo(\"*\")) {\n        stream.next();\n        if (stream.eat(\"/\")) {\n          state.tokenize = tokenBase;\n          break;\n        }\n      } else {\n        stream.skipToEnd();\n        break;\n      }\n    }\n    return \"comment\";\n  }\n\n  function pushContext(stream, state, type) {\n    state.context = {\n      prev: state.context,\n      indent: stream.indentation(),\n      col: stream.column(),\n      type: type\n    };\n  }\n\n  function popContext(state) {\n    state.indent = state.context.indent;\n    state.context = state.context.prev;\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: tokenBase, context: null};\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if (state.context && state.context.align == null)\n          state.context.align = false;\n      }\n      if (stream.eatSpace()) return null;\n\n      var style = state.tokenize(stream, state);\n      if (style == \"comment\") return style;\n\n      if (state.context && state.context.align == null)\n        state.context.align = true;\n\n      var tok = stream.current();\n      if (tok == \"(\")\n        pushContext(stream, state, \")\");\n      else if (tok == \"[\")\n        pushContext(stream, state, \"]\");\n      else if (state.context && state.context.type == tok)\n        popContext(state);\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      var cx = state.context;\n      if (!cx) return CodeMirror.Pass;\n      var closing = textAfter.charAt(0) == cx.type;\n      if (cx.align) return cx.col + (closing ? 0 : 1);\n      else return cx.indent + (closing ? 0 : config.indentUnit);\n    },\n\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: support.commentSlashSlash ? \"//\" : support.commentHash ? \"#\" : null\n  };\n});\n\n(function() {\n  \"use strict\";\n\n  // `identifier`\n  function hookIdentifier(stream) {\n    // MySQL/MariaDB identifiers\n    // ref: http://dev.mysql.com/doc/refman/5.6/en/identifier-qualifiers.html\n    var ch;\n    while ((ch = stream.next()) != null) {\n      if (ch == \"`\" && !stream.eat(\"`\")) return \"variable-2\";\n    }\n    stream.backUp(stream.current().length - 1);\n    return stream.eatWhile(/\\w/) ? \"variable-2\" : null;\n  }\n\n  // \"identifier\"\n  function hookIdentifierDoublequote(stream) {\n    // Standard SQL /SQLite identifiers\n    // ref: http://web.archive.org/web/20160813185132/http://savage.net.au/SQL/sql-99.bnf.html#delimited%20identifier\n    // ref: http://sqlite.org/lang_keywords.html\n    var ch;\n    while ((ch = stream.next()) != null) {\n      if (ch == \"\\\"\" && !stream.eat(\"\\\"\")) return \"variable-2\";\n    }\n    stream.backUp(stream.current().length - 1);\n    return stream.eatWhile(/\\w/) ? \"variable-2\" : null;\n  }\n\n  // variable token\n  function hookVar(stream) {\n    // variables\n    // @@prefix.varName @varName\n    // varName can be quoted with ` or ' or \"\n    // ref: http://dev.mysql.com/doc/refman/5.5/en/user-variables.html\n    if (stream.eat(\"@\")) {\n      stream.match(/^session\\./);\n      stream.match(/^local\\./);\n      stream.match(/^global\\./);\n    }\n\n    if (stream.eat(\"'\")) {\n      stream.match(/^.*'/);\n      return \"variable-2\";\n    } else if (stream.eat('\"')) {\n      stream.match(/^.*\"/);\n      return \"variable-2\";\n    } else if (stream.eat(\"`\")) {\n      stream.match(/^.*`/);\n      return \"variable-2\";\n    } else if (stream.match(/^[0-9a-zA-Z$\\.\\_]+/)) {\n      return \"variable-2\";\n    }\n    return null;\n  };\n\n  // short client keyword token\n  function hookClient(stream) {\n    // \\N means NULL\n    // ref: http://dev.mysql.com/doc/refman/5.5/en/null-values.html\n    if (stream.eat(\"N\")) {\n        return \"atom\";\n    }\n    // \\g, etc\n    // ref: http://dev.mysql.com/doc/refman/5.5/en/mysql-commands.html\n    return stream.match(/^[a-zA-Z.#!?]/) ? \"variable-2\" : null;\n  }\n\n  // these keywords are used by all SQL dialects (however, a mode can still overwrite it)\n  var sqlKeywords = \"alter and as asc between by count create delete desc distinct drop from group having in insert into is join like not on or order select set table union update values where limit \";\n\n  // turn a space-separated list into an array\n  function set(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  // A generic SQL Mode. It's not a standard, it just try to support what is generally supported\n  CodeMirror.defineMIME(\"text/x-sql\", {\n    name: \"sql\",\n    keywords: set(sqlKeywords + \"begin\"),\n    builtin: set(\"bool boolean bit blob enum long longblob longtext medium mediumblob mediumint mediumtext time timestamp tinyblob tinyint tinytext text bigint int int1 int2 int3 int4 int8 integer float float4 float8 double char varbinary varchar varcharacter precision real date datetime year unsigned signed decimal numeric\"),\n    atoms: set(\"false true null unknown\"),\n    operatorChars: /^[*+\\-%<>!=]/,\n    dateSQL: set(\"date time timestamp\"),\n    support: set(\"ODBCdotTable doubleQuote binaryNumber hexNumber\")\n  });\n\n  CodeMirror.defineMIME(\"text/x-mssql\", {\n    name: \"sql\",\n    client: set(\"charset clear connect edit ego exit go help nopager notee nowarning pager print prompt quit rehash source status system tee\"),\n    keywords: set(sqlKeywords + \"begin trigger proc view index for add constraint key primary foreign collate clustered nonclustered declare exec\"),\n    builtin: set(\"bigint numeric bit smallint decimal smallmoney int tinyint money float real char varchar text nchar nvarchar ntext binary varbinary image cursor timestamp hierarchyid uniqueidentifier sql_variant xml table \"),\n    atoms: set(\"false true null unknown\"),\n    operatorChars: /^[*+\\-%<>!=]/,\n    dateSQL: set(\"date datetimeoffset datetime2 smalldatetime datetime time\"),\n    hooks: {\n      \"@\":   hookVar\n    }\n  });\n\n  CodeMirror.defineMIME(\"text/x-mysql\", {\n    name: \"sql\",\n    client: set(\"charset clear connect edit ego exit go help nopager notee nowarning pager print prompt quit rehash source status system tee\"),\n    keywords: set(sqlKeywords + \"accessible action add after algorithm all analyze asensitive at authors auto_increment autocommit avg avg_row_length before binary binlog both btree cache call cascade cascaded case catalog_name chain change changed character check checkpoint checksum class_origin client_statistics close coalesce code collate collation collations column columns comment commit committed completion concurrent condition connection consistent constraint contains continue contributors convert cross current current_date current_time current_timestamp current_user cursor data database databases day_hour day_microsecond day_minute day_second deallocate dec declare default delay_key_write delayed delimiter des_key_file describe deterministic dev_pop dev_samp deviance diagnostics directory disable discard distinctrow div dual dumpfile each elseif enable enclosed end ends engine engines enum errors escape escaped even event events every execute exists exit explain extended fast fetch field fields first flush for force foreign found_rows full fulltext function general get global grant grants group group_concat handler hash help high_priority hosts hour_microsecond hour_minute hour_second if ignore ignore_server_ids import index index_statistics infile inner innodb inout insensitive insert_method install interval invoker isolation iterate key keys kill language last leading leave left level limit linear lines list load local localtime localtimestamp lock logs low_priority master master_heartbeat_period master_ssl_verify_server_cert masters match max max_rows maxvalue message_text middleint migrate min min_rows minute_microsecond minute_second mod mode modifies modify mutex mysql_errno natural next no no_write_to_binlog offline offset one online open optimize option optionally out outer outfile pack_keys parser partition partitions password phase plugin plugins prepare preserve prev primary privileges procedure processlist profile profiles purge query quick range read read_write reads real rebuild recover references regexp relaylog release remove rename reorganize repair repeatable replace require resignal restrict resume return returns revoke right rlike rollback rollup row row_format rtree savepoint schedule schema schema_name schemas second_microsecond security sensitive separator serializable server session share show signal slave slow smallint snapshot soname spatial specific sql sql_big_result sql_buffer_result sql_cache sql_calc_found_rows sql_no_cache sql_small_result sqlexception sqlstate sqlwarning ssl start starting starts status std stddev stddev_pop stddev_samp storage straight_join subclass_origin sum suspend table_name table_statistics tables tablespace temporary terminated to trailing transaction trigger triggers truncate uncommitted undo uninstall unique unlock upgrade usage use use_frm user user_resources user_statistics using utc_date utc_time utc_timestamp value variables varying view views warnings when while with work write xa xor year_month zerofill begin do then else loop repeat\"),\n    builtin: set(\"bool boolean bit blob decimal double float long longblob longtext medium mediumblob mediumint mediumtext time timestamp tinyblob tinyint tinytext text bigint int int1 int2 int3 int4 int8 integer float float4 float8 double char varbinary varchar varcharacter precision date datetime year unsigned signed numeric\"),\n    atoms: set(\"false true null unknown\"),\n    operatorChars: /^[*+\\-%<>!=&|^]/,\n    dateSQL: set(\"date time timestamp\"),\n    support: set(\"ODBCdotTable decimallessFloat zerolessFloat binaryNumber hexNumber doubleQuote nCharCast charsetCast commentHash commentSpaceRequired\"),\n    hooks: {\n      \"@\":   hookVar,\n      \"`\":   hookIdentifier,\n      \"\\\\\":  hookClient\n    }\n  });\n\n  CodeMirror.defineMIME(\"text/x-mariadb\", {\n    name: \"sql\",\n    client: set(\"charset clear connect edit ego exit go help nopager notee nowarning pager print prompt quit rehash source status system tee\"),\n    keywords: set(sqlKeywords + \"accessible action add after algorithm all always analyze asensitive at authors auto_increment autocommit avg avg_row_length before binary binlog both btree cache call cascade cascaded case catalog_name chain change changed character check checkpoint checksum class_origin client_statistics close coalesce code collate collation collations column columns comment commit committed completion concurrent condition connection consistent constraint contains continue contributors convert cross current current_date current_time current_timestamp current_user cursor data database databases day_hour day_microsecond day_minute day_second deallocate dec declare default delay_key_write delayed delimiter des_key_file describe deterministic dev_pop dev_samp deviance diagnostics directory disable discard distinctrow div dual dumpfile each elseif enable enclosed end ends engine engines enum errors escape escaped even event events every execute exists exit explain extended fast fetch field fields first flush for force foreign found_rows full fulltext function general generated get global grant grants group groupby_concat handler hard hash help high_priority hosts hour_microsecond hour_minute hour_second if ignore ignore_server_ids import index index_statistics infile inner innodb inout insensitive insert_method install interval invoker isolation iterate key keys kill language last leading leave left level limit linear lines list load local localtime localtimestamp lock logs low_priority master master_heartbeat_period master_ssl_verify_server_cert masters match max max_rows maxvalue message_text middleint migrate min min_rows minute_microsecond minute_second mod mode modifies modify mutex mysql_errno natural next no no_write_to_binlog offline offset one online open optimize option optionally out outer outfile pack_keys parser partition partitions password persistent phase plugin plugins prepare preserve prev primary privileges procedure processlist profile profiles purge query quick range read read_write reads real rebuild recover references regexp relaylog release remove rename reorganize repair repeatable replace require resignal restrict resume return returns revoke right rlike rollback rollup row row_format rtree savepoint schedule schema schema_name schemas second_microsecond security sensitive separator serializable server session share show shutdown signal slave slow smallint snapshot soft soname spatial specific sql sql_big_result sql_buffer_result sql_cache sql_calc_found_rows sql_no_cache sql_small_result sqlexception sqlstate sqlwarning ssl start starting starts status std stddev stddev_pop stddev_samp storage straight_join subclass_origin sum suspend table_name table_statistics tables tablespace temporary terminated to trailing transaction trigger triggers truncate uncommitted undo uninstall unique unlock upgrade usage use use_frm user user_resources user_statistics using utc_date utc_time utc_timestamp value variables varying view views virtual warnings when while with work write xa xor year_month zerofill begin do then else loop repeat\"),\n    builtin: set(\"bool boolean bit blob decimal double float long longblob longtext medium mediumblob mediumint mediumtext time timestamp tinyblob tinyint tinytext text bigint int int1 int2 int3 int4 int8 integer float float4 float8 double char varbinary varchar varcharacter precision date datetime year unsigned signed numeric\"),\n    atoms: set(\"false true null unknown\"),\n    operatorChars: /^[*+\\-%<>!=&|^]/,\n    dateSQL: set(\"date time timestamp\"),\n    support: set(\"ODBCdotTable decimallessFloat zerolessFloat binaryNumber hexNumber doubleQuote nCharCast charsetCast commentHash commentSpaceRequired\"),\n    hooks: {\n      \"@\":   hookVar,\n      \"`\":   hookIdentifier,\n      \"\\\\\":  hookClient\n    }\n  });\n\n  // provided by the phpLiteAdmin project - phpliteadmin.org\n  CodeMirror.defineMIME(\"text/x-sqlite\", {\n    name: \"sql\",\n    // commands of the official SQLite client, ref: https://www.sqlite.org/cli.html#dotcmd\n    client: set(\"auth backup bail binary changes check clone databases dbinfo dump echo eqp exit explain fullschema headers help import imposter indexes iotrace limit lint load log mode nullvalue once open output print prompt quit read restore save scanstats schema separator session shell show stats system tables testcase timeout timer trace vfsinfo vfslist vfsname width\"),\n    // ref: http://sqlite.org/lang_keywords.html\n    keywords: set(sqlKeywords + \"abort action add after all analyze attach autoincrement before begin cascade case cast check collate column commit conflict constraint cross current_date current_time current_timestamp database default deferrable deferred detach each else end escape except exclusive exists explain fail for foreign full glob if ignore immediate index indexed initially inner instead intersect isnull key left limit match natural no notnull null of offset outer plan pragma primary query raise recursive references regexp reindex release rename replace restrict right rollback row savepoint temp temporary then to transaction trigger unique using vacuum view virtual when with without\"),\n    // SQLite is weakly typed, ref: http://sqlite.org/datatype3.html. This is just a list of some common types.\n    builtin: set(\"bool boolean bit blob decimal double float long longblob longtext medium mediumblob mediumint mediumtext time timestamp tinyblob tinyint tinytext text clob bigint int int2 int8 integer float double char varchar date datetime year unsigned signed numeric real\"),\n    // ref: http://sqlite.org/syntax/literal-value.html\n    atoms: set(\"null current_date current_time current_timestamp\"),\n    // ref: http://sqlite.org/lang_expr.html#binaryops\n    operatorChars: /^[*+\\-%<>!=&|/~]/,\n    // SQLite is weakly typed, ref: http://sqlite.org/datatype3.html. This is just a list of some common types.\n    dateSQL: set(\"date time timestamp datetime\"),\n    support: set(\"decimallessFloat zerolessFloat\"),\n    identifierQuote: \"\\\"\",  //ref: http://sqlite.org/lang_keywords.html\n    hooks: {\n      // bind-parameters ref:http://sqlite.org/lang_expr.html#varparam\n      \"@\":   hookVar,\n      \":\":   hookVar,\n      \"?\":   hookVar,\n      \"$\":   hookVar,\n      // The preferred way to escape Identifiers is using double quotes, ref: http://sqlite.org/lang_keywords.html\n      \"\\\"\":   hookIdentifierDoublequote,\n      // there is also support for backtics, ref: http://sqlite.org/lang_keywords.html\n      \"`\":   hookIdentifier\n    }\n  });\n\n  // the query language used by Apache Cassandra is called CQL, but this mime type\n  // is called Cassandra to avoid confusion with Contextual Query Language\n  CodeMirror.defineMIME(\"text/x-cassandra\", {\n    name: \"sql\",\n    client: { },\n    keywords: set(\"add all allow alter and any apply as asc authorize batch begin by clustering columnfamily compact consistency count create custom delete desc distinct drop each_quorum exists filtering from grant if in index insert into key keyspace keyspaces level limit local_one local_quorum modify nan norecursive nosuperuser not of on one order password permission permissions primary quorum rename revoke schema select set storage superuser table three to token truncate ttl two type unlogged update use user users using values where with writetime\"),\n    builtin: set(\"ascii bigint blob boolean counter decimal double float frozen inet int list map static text timestamp timeuuid tuple uuid varchar varint\"),\n    atoms: set(\"false true infinity NaN\"),\n    operatorChars: /^[<>=]/,\n    dateSQL: { },\n    support: set(\"commentSlashSlash decimallessFloat\"),\n    hooks: { }\n  });\n\n  // this is based on Peter Raganitsch's 'plsql' mode\n  CodeMirror.defineMIME(\"text/x-plsql\", {\n    name:       \"sql\",\n    client:     set(\"appinfo arraysize autocommit autoprint autorecovery autotrace blockterminator break btitle cmdsep colsep compatibility compute concat copycommit copytypecheck define describe echo editfile embedded escape exec execute feedback flagger flush heading headsep instance linesize lno loboffset logsource long longchunksize markup native newpage numformat numwidth pagesize pause pno recsep recsepchar release repfooter repheader serveroutput shiftinout show showmode size spool sqlblanklines sqlcase sqlcode sqlcontinue sqlnumber sqlpluscompatibility sqlprefix sqlprompt sqlterminator suffix tab term termout time timing trimout trimspool ttitle underline verify version wrap\"),\n    keywords:   set(\"abort accept access add all alter and any array arraylen as asc assert assign at attributes audit authorization avg base_table begin between binary_integer body boolean by case cast char char_base check close cluster clusters colauth column comment commit compress connect connected constant constraint crash create current currval cursor data_base database date dba deallocate debugoff debugon decimal declare default definition delay delete desc digits dispose distinct do drop else elseif elsif enable end entry escape exception exception_init exchange exclusive exists exit external fast fetch file for force form from function generic goto grant group having identified if immediate in increment index indexes indicator initial initrans insert interface intersect into is key level library like limited local lock log logging long loop master maxextents maxtrans member minextents minus mislabel mode modify multiset new next no noaudit nocompress nologging noparallel not nowait number_base object of off offline on online only open option or order out package parallel partition pctfree pctincrease pctused pls_integer positive positiven pragma primary prior private privileges procedure public raise range raw read rebuild record ref references refresh release rename replace resource restrict return returning returns reverse revoke rollback row rowid rowlabel rownum rows run savepoint schema segment select separate session set share snapshot some space split sql start statement storage subtype successful synonym tabauth table tables tablespace task terminate then to trigger truncate type union unique unlimited unrecoverable unusable update use using validate value values variable view views when whenever where while with work\"),\n    builtin:    set(\"abs acos add_months ascii asin atan atan2 average bfile bfilename bigserial bit blob ceil character chartorowid chr clob concat convert cos cosh count dec decode deref dual dump dup_val_on_index empty error exp false float floor found glb greatest hextoraw initcap instr instrb int integer isopen last_day least length lengthb ln lower lpad ltrim lub make_ref max min mlslabel mod months_between natural naturaln nchar nclob new_time next_day nextval nls_charset_decl_len nls_charset_id nls_charset_name nls_initcap nls_lower nls_sort nls_upper nlssort no_data_found notfound null number numeric nvarchar2 nvl others power rawtohex real reftohex round rowcount rowidtochar rowtype rpad rtrim serial sign signtype sin sinh smallint soundex sqlcode sqlerrm sqrt stddev string substr substrb sum sysdate tan tanh to_char text to_date to_label to_multi_byte to_number to_single_byte translate true trunc uid unlogged upper user userenv varchar varchar2 variance varying vsize xml\"),\n    operatorChars: /^[*+\\-%<>!=~]/,\n    dateSQL:    set(\"date time timestamp\"),\n    support:    set(\"doubleQuote nCharCast zerolessFloat binaryNumber hexNumber\")\n  });\n\n  // Created to support specific hive keywords\n  CodeMirror.defineMIME(\"text/x-hive\", {\n    name: \"sql\",\n    keywords: set(\"select alter $elem$ $key$ $value$ add after all analyze and archive as asc before between binary both bucket buckets by cascade case cast change cluster clustered clusterstatus collection column columns comment compute concatenate continue create cross cursor data database databases dbproperties deferred delete delimited desc describe directory disable distinct distribute drop else enable end escaped exclusive exists explain export extended external false fetch fields fileformat first format formatted from full function functions grant group having hold_ddltime idxproperties if import in index indexes inpath inputdriver inputformat insert intersect into is items join keys lateral left like limit lines load local location lock locks mapjoin materialized minus msck no_drop nocompress not of offline on option or order out outer outputdriver outputformat overwrite partition partitioned partitions percent plus preserve procedure purge range rcfile read readonly reads rebuild recordreader recordwriter recover reduce regexp rename repair replace restrict revoke right rlike row schema schemas semi sequencefile serde serdeproperties set shared show show_database sort sorted ssl statistics stored streamtable table tables tablesample tblproperties temporary terminated textfile then tmp to touch transform trigger true unarchive undo union uniquejoin unlock update use using utc utc_tmestamp view when where while with\"),\n    builtin: set(\"bool boolean long timestamp tinyint smallint bigint int float double date datetime unsigned string array struct map uniontype\"),\n    atoms: set(\"false true null unknown\"),\n    operatorChars: /^[*+\\-%<>!=]/,\n    dateSQL: set(\"date timestamp\"),\n    support: set(\"ODBCdotTable doubleQuote binaryNumber hexNumber\")\n  });\n\n  CodeMirror.defineMIME(\"text/x-pgsql\", {\n    name: \"sql\",\n    client: set(\"source\"),\n    // http://www.postgresql.org/docs/9.5/static/sql-keywords-appendix.html\n    keywords: set(sqlKeywords + \"a abort abs absent absolute access according action ada add admin after aggregate all allocate also always analyse analyze any are array array_agg array_max_cardinality asensitive assertion assignment asymmetric at atomic attribute attributes authorization avg backward base64 before begin begin_frame begin_partition bernoulli binary bit_length blob blocked bom both breadth c cache call called cardinality cascade cascaded case cast catalog catalog_name ceil ceiling chain characteristics characters character_length character_set_catalog character_set_name character_set_schema char_length check checkpoint class class_origin clob close cluster coalesce cobol collate collation collation_catalog collation_name collation_schema collect column columns column_name command_function command_function_code comment comments commit committed concurrently condition condition_number configuration conflict connect connection connection_name constraint constraints constraint_catalog constraint_name constraint_schema constructor contains content continue control conversion convert copy corr corresponding cost covar_pop covar_samp cross csv cube cume_dist current current_catalog current_date current_default_transform_group current_path current_role current_row current_schema current_time current_timestamp current_transform_group_for_type current_user cursor cursor_name cycle data database datalink datetime_interval_code datetime_interval_precision day db deallocate dec declare default defaults deferrable deferred defined definer degree delimiter delimiters dense_rank depth deref derived describe descriptor deterministic diagnostics dictionary disable discard disconnect dispatch dlnewcopy dlpreviouscopy dlurlcomplete dlurlcompleteonly dlurlcompletewrite dlurlpath dlurlpathonly dlurlpathwrite dlurlscheme dlurlserver dlvalue do document domain dynamic dynamic_function dynamic_function_code each element else empty enable encoding encrypted end end-exec end_frame end_partition enforced enum equals escape event every except exception exclude excluding exclusive exec execute exists exp explain expression extension external extract false family fetch file filter final first first_value flag float floor following for force foreign fortran forward found frame_row free freeze fs full function functions fusion g general generated get global go goto grant granted greatest grouping groups handler header hex hierarchy hold hour id identity if ignore ilike immediate immediately immutable implementation implicit import including increment indent index indexes indicator inherit inherits initially inline inner inout input insensitive instance instantiable instead integrity intersect intersection invoker isnull isolation k key key_member key_type label lag language large last last_value lateral lead leading leakproof least left length level library like_regex link listen ln load local localtime localtimestamp location locator lock locked logged lower m map mapping match matched materialized max maxvalue max_cardinality member merge message_length message_octet_length message_text method min minute minvalue mod mode modifies module month more move multiset mumps name names namespace national natural nchar nclob nesting new next nfc nfd nfkc nfkd nil no none normalize normalized nothing notify notnull nowait nth_value ntile null nullable nullif nulls number object occurrences_regex octets octet_length of off offset oids old only open operator option options ordering ordinality others out outer output over overlaps overlay overriding owned owner p pad parameter parameter_mode parameter_name parameter_ordinal_position parameter_specific_catalog parameter_specific_name parameter_specific_schema parser partial partition pascal passing passthrough password percent percentile_cont percentile_disc percent_rank period permission placing plans pli policy portion position position_regex power precedes preceding prepare prepared preserve primary prior privileges procedural procedure program public quote range rank read reads reassign recheck recovery recursive ref references referencing refresh regr_avgx regr_avgy regr_count regr_intercept regr_r2 regr_slope regr_sxx regr_sxy regr_syy reindex relative release rename repeatable replace replica requiring reset respect restart restore restrict result return returned_cardinality returned_length returned_octet_length returned_sqlstate returning returns revoke right role rollback rollup routine routine_catalog routine_name routine_schema row rows row_count row_number rule savepoint scale schema schema_name scope scope_catalog scope_name scope_schema scroll search second section security selective self sensitive sequence sequences serializable server server_name session session_user setof sets share show similar simple size skip snapshot some source space specific specifictype specific_name sql sqlcode sqlerror sqlexception sqlstate sqlwarning sqrt stable standalone start state statement static statistics stddev_pop stddev_samp stdin stdout storage strict strip structure style subclass_origin submultiset substring substring_regex succeeds sum symmetric sysid system system_time system_user t tables tablesample tablespace table_name temp template temporary then ties timezone_hour timezone_minute to token top_level_count trailing transaction transactions_committed transactions_rolled_back transaction_active transform transforms translate translate_regex translation treat trigger trigger_catalog trigger_name trigger_schema trim trim_array true truncate trusted type types uescape unbounded uncommitted under unencrypted unique unknown unlink unlisten unlogged unnamed unnest until untyped upper uri usage user user_defined_type_catalog user_defined_type_code user_defined_type_name user_defined_type_schema using vacuum valid validate validator value value_of varbinary variadic var_pop var_samp verbose version versioning view views volatile when whenever whitespace width_bucket window within work wrapper write xmlagg xmlattributes xmlbinary xmlcast xmlcomment xmlconcat xmldeclaration xmldocument xmlelement xmlexists xmlforest xmliterate xmlnamespaces xmlparse xmlpi xmlquery xmlroot xmlschema xmlserialize xmltable xmltext xmlvalidate year yes loop repeat\"),\n    // http://www.postgresql.org/docs/9.5/static/datatype.html\n    builtin: set(\"bigint int8 bigserial serial8 bit varying varbit boolean bool box bytea character char varchar cidr circle date double precision float8 inet integer int int4 interval json jsonb line lseg macaddr money numeric decimal path pg_lsn point polygon real float4 smallint int2 smallserial serial2 serial serial4 text time without zone with timetz timestamp timestamptz tsquery tsvector txid_snapshot uuid xml\"),\n    atoms: set(\"false true null unknown\"),\n    operatorChars: /^[*+\\-%<>!=&|^\\/#@?~]/,\n    dateSQL: set(\"date time timestamp\"),\n    support: set(\"ODBCdotTable decimallessFloat zerolessFloat binaryNumber hexNumber nCharCast charsetCast\")\n  });\n\n  // Google's SQL-like query language, GQL\n  CodeMirror.defineMIME(\"text/x-gql\", {\n    name: \"sql\",\n    keywords: set(\"ancestor and asc by contains desc descendant distinct from group has in is limit offset on order select superset where\"),\n    atoms: set(\"false true\"),\n    builtin: set(\"blob datetime first key __key__ string integer double boolean null\"),\n    operatorChars: /^[*+\\-%<>!=]/\n  });\n}());\n\n});\n\n/*\n  How Properties of Mime Types are used by SQL Mode\n  =================================================\n\n  keywords:\n    A list of keywords you want to be highlighted.\n  builtin:\n    A list of builtin types you want to be highlighted (if you want types to be of class \"builtin\" instead of \"keyword\").\n  operatorChars:\n    All characters that must be handled as operators.\n  client:\n    Commands parsed and executed by the client (not the server).\n  support:\n    A list of supported syntaxes which are not common, but are supported by more than 1 DBMS.\n    * ODBCdotTable: .tableName\n    * zerolessFloat: .1\n    * doubleQuote\n    * nCharCast: N'string'\n    * charsetCast: _utf8'string'\n    * commentHash: use # char for comments\n    * commentSlashSlash: use // for comments\n    * commentSpaceRequired: require a space after -- for comments\n  atoms:\n    Keywords that must be highlighted as atoms,. Some DBMS's support more atoms than others:\n    UNKNOWN, INFINITY, UNDERFLOW, NaN...\n  dateSQL:\n    Used for date/time SQL standard syntax, because not all DBMS's support same temporal types.\n*/\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n/***\n    |''Name''|tiddlywiki.js|\n    |''Description''|Enables TiddlyWikiy syntax highlighting using CodeMirror|\n    |''Author''|PMario|\n    |''Version''|0.1.7|\n    |''Status''|''stable''|\n    |''Source''|[[GitHub|https://github.com/pmario/CodeMirror2/blob/tw-syntax/mode/tiddlywiki]]|\n    |''Documentation''|http://codemirror.tiddlyspace.com/|\n    |''License''|[[MIT License|http://www.opensource.org/licenses/mit-license.php]]|\n    |''CoreVersion''|2.5.0|\n    |''Requires''|codemirror.js|\n    |''Keywords''|syntax highlighting color code mirror codemirror|\n    ! Info\n    CoreVersion parameter is needed for TiddlyWiki only!\n***/\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"tiddlywiki\", function () {\n  // Tokenizer\n  var textwords = {};\n\n  var keywords = {\n    \"allTags\": true, \"closeAll\": true, \"list\": true,\n    \"newJournal\": true, \"newTiddler\": true,\n    \"permaview\": true, \"saveChanges\": true,\n    \"search\": true, \"slider\": true, \"tabs\": true,\n    \"tag\": true, \"tagging\": true, \"tags\": true,\n    \"tiddler\": true, \"timeline\": true,\n    \"today\": true, \"version\": true, \"option\": true,\n    \"with\": true, \"filter\": true\n  };\n\n  var isSpaceName = /[\\w_\\-]/i,\n      reHR = /^\\-\\-\\-\\-+$/,                                 // <hr>\n      reWikiCommentStart = /^\\/\\*\\*\\*$/,            // /***\n      reWikiCommentStop = /^\\*\\*\\*\\/$/,             // ***/\n      reBlockQuote = /^<<<$/,\n\n      reJsCodeStart = /^\\/\\/\\{\\{\\{$/,                       // //{{{ js block start\n      reJsCodeStop = /^\\/\\/\\}\\}\\}$/,                        // //}}} js stop\n      reXmlCodeStart = /^<!--\\{\\{\\{-->$/,           // xml block start\n      reXmlCodeStop = /^<!--\\}\\}\\}-->$/,            // xml stop\n\n      reCodeBlockStart = /^\\{\\{\\{$/,                        // {{{ TW text div block start\n      reCodeBlockStop = /^\\}\\}\\}$/,                 // }}} TW text stop\n\n      reUntilCodeStop = /.*?\\}\\}\\}/;\n\n  function chain(stream, state, f) {\n    state.tokenize = f;\n    return f(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    var sol = stream.sol(), ch = stream.peek();\n\n    state.block = false;        // indicates the start of a code block.\n\n    // check start of  blocks\n    if (sol && /[<\\/\\*{}\\-]/.test(ch)) {\n      if (stream.match(reCodeBlockStart)) {\n        state.block = true;\n        return chain(stream, state, twTokenCode);\n      }\n      if (stream.match(reBlockQuote))\n        return 'quote';\n      if (stream.match(reWikiCommentStart) || stream.match(reWikiCommentStop))\n        return 'comment';\n      if (stream.match(reJsCodeStart) || stream.match(reJsCodeStop) || stream.match(reXmlCodeStart) || stream.match(reXmlCodeStop))\n        return 'comment';\n      if (stream.match(reHR))\n        return 'hr';\n    }\n\n    stream.next();\n    if (sol && /[\\/\\*!#;:>|]/.test(ch)) {\n      if (ch == \"!\") { // tw header\n        stream.skipToEnd();\n        return \"header\";\n      }\n      if (ch == \"*\") { // tw list\n        stream.eatWhile('*');\n        return \"comment\";\n      }\n      if (ch == \"#\") { // tw numbered list\n        stream.eatWhile('#');\n        return \"comment\";\n      }\n      if (ch == \";\") { // definition list, term\n        stream.eatWhile(';');\n        return \"comment\";\n      }\n      if (ch == \":\") { // definition list, description\n        stream.eatWhile(':');\n        return \"comment\";\n      }\n      if (ch == \">\") { // single line quote\n        stream.eatWhile(\">\");\n        return \"quote\";\n      }\n      if (ch == '|')\n        return 'header';\n    }\n\n    if (ch == '{' && stream.match(/\\{\\{/))\n      return chain(stream, state, twTokenCode);\n\n    // rudimentary html:// file:// link matching. TW knows much more ...\n    if (/[hf]/i.test(ch) &&\n        /[ti]/i.test(stream.peek()) &&\n        stream.match(/\\b(ttps?|tp|ile):\\/\\/[\\-A-Z0-9+&@#\\/%?=~_|$!:,.;]*[A-Z0-9+&@#\\/%=~_|$]/i))\n      return \"link\";\n\n    // just a little string indicator, don't want to have the whole string covered\n    if (ch == '\"')\n      return 'string';\n\n    if (ch == '~')    // _no_ CamelCase indicator should be bold\n      return 'brace';\n\n    if (/[\\[\\]]/.test(ch) && stream.match(ch)) // check for [[..]]\n      return 'brace';\n\n    if (ch == \"@\") {    // check for space link. TODO fix @@...@@ highlighting\n      stream.eatWhile(isSpaceName);\n      return \"link\";\n    }\n\n    if (/\\d/.test(ch)) {        // numbers\n      stream.eatWhile(/\\d/);\n      return \"number\";\n    }\n\n    if (ch == \"/\") { // tw invisible comment\n      if (stream.eat(\"%\")) {\n        return chain(stream, state, twTokenComment);\n      } else if (stream.eat(\"/\")) { //\n        return chain(stream, state, twTokenEm);\n      }\n    }\n\n    if (ch == \"_\" && stream.eat(\"_\")) // tw underline\n        return chain(stream, state, twTokenUnderline);\n\n    // strikethrough and mdash handling\n    if (ch == \"-\" && stream.eat(\"-\")) {\n      // if strikethrough looks ugly, change CSS.\n      if (stream.peek() != ' ')\n        return chain(stream, state, twTokenStrike);\n      // mdash\n      if (stream.peek() == ' ')\n        return 'brace';\n    }\n\n    if (ch == \"'\" && stream.eat(\"'\")) // tw bold\n      return chain(stream, state, twTokenStrong);\n\n    if (ch == \"<\" && stream.eat(\"<\")) // tw macro\n      return chain(stream, state, twTokenMacro);\n\n    // core macro handling\n    stream.eatWhile(/[\\w\\$_]/);\n    return textwords.propertyIsEnumerable(stream.current()) ? \"keyword\" : null\n  }\n\n  // tw invisible comment\n  function twTokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"%\");\n    }\n    return \"comment\";\n  }\n\n  // tw strong / bold\n  function twTokenStrong(stream, state) {\n    var maybeEnd = false,\n    ch;\n    while (ch = stream.next()) {\n      if (ch == \"'\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"'\");\n    }\n    return \"strong\";\n  }\n\n  // tw code\n  function twTokenCode(stream, state) {\n    var sb = state.block;\n\n    if (sb && stream.current()) {\n      return \"comment\";\n    }\n\n    if (!sb && stream.match(reUntilCodeStop)) {\n      state.tokenize = tokenBase;\n      return \"comment\";\n    }\n\n    if (sb && stream.sol() && stream.match(reCodeBlockStop)) {\n      state.tokenize = tokenBase;\n      return \"comment\";\n    }\n\n    stream.next();\n    return \"comment\";\n  }\n\n  // tw em / italic\n  function twTokenEm(stream, state) {\n    var maybeEnd = false,\n    ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"/\");\n    }\n    return \"em\";\n  }\n\n  // tw underlined text\n  function twTokenUnderline(stream, state) {\n    var maybeEnd = false,\n    ch;\n    while (ch = stream.next()) {\n      if (ch == \"_\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"_\");\n    }\n    return \"underlined\";\n  }\n\n  // tw strike through text looks ugly\n  // change CSS if needed\n  function twTokenStrike(stream, state) {\n    var maybeEnd = false, ch;\n\n    while (ch = stream.next()) {\n      if (ch == \"-\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"-\");\n    }\n    return \"strikethrough\";\n  }\n\n  // macro\n  function twTokenMacro(stream, state) {\n    if (stream.current() == '<<') {\n      return 'macro';\n    }\n\n    var ch = stream.next();\n    if (!ch) {\n      state.tokenize = tokenBase;\n      return null;\n    }\n    if (ch == \">\") {\n      if (stream.peek() == '>') {\n        stream.next();\n        state.tokenize = tokenBase;\n        return \"macro\";\n      }\n    }\n\n    stream.eatWhile(/[\\w\\$_]/);\n    return keywords.propertyIsEnumerable(stream.current()) ? \"keyword\" : null\n  }\n\n  // Interface\n  return {\n    startState: function () {\n      return {tokenize: tokenBase};\n    },\n\n    token: function (stream, state) {\n      if (stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      return style;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-tiddlywiki\", \"tiddlywiki\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"vb\", function(conf, parserConf) {\n    var ERRORCLASS = 'error';\n\n    function wordRegexp(words) {\n        return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\", \"i\");\n    }\n\n    var singleOperators = new RegExp(\"^[\\\\+\\\\-\\\\*/%&\\\\\\\\|\\\\^~<>!]\");\n    var singleDelimiters = new RegExp('^[\\\\(\\\\)\\\\[\\\\]\\\\{\\\\}@,:`=;\\\\.]');\n    var doubleOperators = new RegExp(\"^((==)|(<>)|(<=)|(>=)|(<>)|(<<)|(>>)|(//)|(\\\\*\\\\*))\");\n    var doubleDelimiters = new RegExp(\"^((\\\\+=)|(\\\\-=)|(\\\\*=)|(%=)|(/=)|(&=)|(\\\\|=)|(\\\\^=))\");\n    var tripleDelimiters = new RegExp(\"^((//=)|(>>=)|(<<=)|(\\\\*\\\\*=))\");\n    var identifiers = new RegExp(\"^[_A-Za-z][_A-Za-z0-9]*\");\n\n    var openingKeywords = ['class','module', 'sub','enum','select','while','if','function',  'get','set','property', 'try'];\n    var middleKeywords = ['else','elseif','case', 'catch'];\n    var endKeywords = ['next','loop'];\n\n    var operatorKeywords = ['and', 'or', 'not', 'xor', 'in'];\n    var wordOperators = wordRegexp(operatorKeywords);\n    var commonKeywords = ['as', 'dim', 'break',  'continue','optional', 'then',  'until',\n                          'goto', 'byval','byref','new','handles','property', 'return',\n                          'const','private', 'protected', 'friend', 'public', 'shared', 'static', 'true','false'];\n    var commontypes = ['integer','string','double','decimal','boolean','short','char', 'float','single'];\n\n    var keywords = wordRegexp(commonKeywords);\n    var types = wordRegexp(commontypes);\n    var stringPrefixes = '\"';\n\n    var opening = wordRegexp(openingKeywords);\n    var middle = wordRegexp(middleKeywords);\n    var closing = wordRegexp(endKeywords);\n    var doubleClosing = wordRegexp(['end']);\n    var doOpening = wordRegexp(['do']);\n\n    var indentInfo = null;\n\n    CodeMirror.registerHelper(\"hintWords\", \"vb\", openingKeywords.concat(middleKeywords).concat(endKeywords)\n                                .concat(operatorKeywords).concat(commonKeywords).concat(commontypes));\n\n    function indent(_stream, state) {\n      state.currentIndent++;\n    }\n\n    function dedent(_stream, state) {\n      state.currentIndent--;\n    }\n    // tokenizers\n    function tokenBase(stream, state) {\n        if (stream.eatSpace()) {\n            return null;\n        }\n\n        var ch = stream.peek();\n\n        // Handle Comments\n        if (ch === \"'\") {\n            stream.skipToEnd();\n            return 'comment';\n        }\n\n\n        // Handle Number Literals\n        if (stream.match(/^((&H)|(&O))?[0-9\\.a-f]/i, false)) {\n            var floatLiteral = false;\n            // Floats\n            if (stream.match(/^\\d*\\.\\d+F?/i)) { floatLiteral = true; }\n            else if (stream.match(/^\\d+\\.\\d*F?/)) { floatLiteral = true; }\n            else if (stream.match(/^\\.\\d+F?/)) { floatLiteral = true; }\n\n            if (floatLiteral) {\n                // Float literals may be \"imaginary\"\n                stream.eat(/J/i);\n                return 'number';\n            }\n            // Integers\n            var intLiteral = false;\n            // Hex\n            if (stream.match(/^&H[0-9a-f]+/i)) { intLiteral = true; }\n            // Octal\n            else if (stream.match(/^&O[0-7]+/i)) { intLiteral = true; }\n            // Decimal\n            else if (stream.match(/^[1-9]\\d*F?/)) {\n                // Decimal literals may be \"imaginary\"\n                stream.eat(/J/i);\n                // TODO - Can you have imaginary longs?\n                intLiteral = true;\n            }\n            // Zero by itself with no other piece of number.\n            else if (stream.match(/^0(?![\\dx])/i)) { intLiteral = true; }\n            if (intLiteral) {\n                // Integer literals may be \"long\"\n                stream.eat(/L/i);\n                return 'number';\n            }\n        }\n\n        // Handle Strings\n        if (stream.match(stringPrefixes)) {\n            state.tokenize = tokenStringFactory(stream.current());\n            return state.tokenize(stream, state);\n        }\n\n        // Handle operators and Delimiters\n        if (stream.match(tripleDelimiters) || stream.match(doubleDelimiters)) {\n            return null;\n        }\n        if (stream.match(doubleOperators)\n            || stream.match(singleOperators)\n            || stream.match(wordOperators)) {\n            return 'operator';\n        }\n        if (stream.match(singleDelimiters)) {\n            return null;\n        }\n        if (stream.match(doOpening)) {\n            indent(stream,state);\n            state.doInCurrentLine = true;\n            return 'keyword';\n        }\n        if (stream.match(opening)) {\n            if (! state.doInCurrentLine)\n              indent(stream,state);\n            else\n              state.doInCurrentLine = false;\n            return 'keyword';\n        }\n        if (stream.match(middle)) {\n            return 'keyword';\n        }\n\n        if (stream.match(doubleClosing)) {\n            dedent(stream,state);\n            dedent(stream,state);\n            return 'keyword';\n        }\n        if (stream.match(closing)) {\n            dedent(stream,state);\n            return 'keyword';\n        }\n\n        if (stream.match(types)) {\n            return 'keyword';\n        }\n\n        if (stream.match(keywords)) {\n            return 'keyword';\n        }\n\n        if (stream.match(identifiers)) {\n            return 'variable';\n        }\n\n        // Handle non-detected items\n        stream.next();\n        return ERRORCLASS;\n    }\n\n    function tokenStringFactory(delimiter) {\n        var singleline = delimiter.length == 1;\n        var OUTCLASS = 'string';\n\n        return function(stream, state) {\n            while (!stream.eol()) {\n                stream.eatWhile(/[^'\"]/);\n                if (stream.match(delimiter)) {\n                    state.tokenize = tokenBase;\n                    return OUTCLASS;\n                } else {\n                    stream.eat(/['\"]/);\n                }\n            }\n            if (singleline) {\n                if (parserConf.singleLineStringErrors) {\n                    return ERRORCLASS;\n                } else {\n                    state.tokenize = tokenBase;\n                }\n            }\n            return OUTCLASS;\n        };\n    }\n\n\n    function tokenLexer(stream, state) {\n        var style = state.tokenize(stream, state);\n        var current = stream.current();\n\n        // Handle '.' connected identifiers\n        if (current === '.') {\n            style = state.tokenize(stream, state);\n            if (style === 'variable') {\n                return 'variable';\n            } else {\n                return ERRORCLASS;\n            }\n        }\n\n\n        var delimiter_index = '[({'.indexOf(current);\n        if (delimiter_index !== -1) {\n            indent(stream, state );\n        }\n        if (indentInfo === 'dedent') {\n            if (dedent(stream, state)) {\n                return ERRORCLASS;\n            }\n        }\n        delimiter_index = '])}'.indexOf(current);\n        if (delimiter_index !== -1) {\n            if (dedent(stream, state)) {\n                return ERRORCLASS;\n            }\n        }\n\n        return style;\n    }\n\n    var external = {\n        electricChars:\"dDpPtTfFeE \",\n        startState: function() {\n            return {\n              tokenize: tokenBase,\n              lastToken: null,\n              currentIndent: 0,\n              nextLineIndent: 0,\n              doInCurrentLine: false\n\n\n          };\n        },\n\n        token: function(stream, state) {\n            if (stream.sol()) {\n              state.currentIndent += state.nextLineIndent;\n              state.nextLineIndent = 0;\n              state.doInCurrentLine = 0;\n            }\n            var style = tokenLexer(stream, state);\n\n            state.lastToken = {style:style, content: stream.current()};\n\n\n\n            return style;\n        },\n\n        indent: function(state, textAfter) {\n            var trueText = textAfter.replace(/^\\s+|\\s+$/g, '') ;\n            if (trueText.match(closing) || trueText.match(doubleClosing) || trueText.match(middle)) return conf.indentUnit*(state.currentIndent-1);\n            if(state.currentIndent < 0) return 0;\n            return state.currentIndent * conf.indentUnit;\n        },\n\n        lineComment: \"'\"\n    };\n    return external;\n});\n\nCodeMirror.defineMIME(\"text/x-vb\", \"vb\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n/*\nFor extra ASP classic objects, initialize CodeMirror instance with this option:\n    isASP: true\n\nE.G.:\n    var editor = CodeMirror.fromTextArea(document.getElementById(\"code\"), {\n        lineNumbers: true,\n        isASP: true\n      });\n*/\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"vbscript\", function(conf, parserConf) {\n    var ERRORCLASS = 'error';\n\n    function wordRegexp(words) {\n        return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\", \"i\");\n    }\n\n    var singleOperators = new RegExp(\"^[\\\\+\\\\-\\\\*/&\\\\\\\\\\\\^<>=]\");\n    var doubleOperators = new RegExp(\"^((<>)|(<=)|(>=))\");\n    var singleDelimiters = new RegExp('^[\\\\.,]');\n    var brakets = new RegExp('^[\\\\(\\\\)]');\n    var identifiers = new RegExp(\"^[A-Za-z][_A-Za-z0-9]*\");\n\n    var openingKeywords = ['class','sub','select','while','if','function', 'property', 'with', 'for'];\n    var middleKeywords = ['else','elseif','case'];\n    var endKeywords = ['next','loop','wend'];\n\n    var wordOperators = wordRegexp(['and', 'or', 'not', 'xor', 'is', 'mod', 'eqv', 'imp']);\n    var commonkeywords = ['dim', 'redim', 'then',  'until', 'randomize',\n                          'byval','byref','new','property', 'exit', 'in',\n                          'const','private', 'public',\n                          'get','set','let', 'stop', 'on error resume next', 'on error goto 0', 'option explicit', 'call', 'me'];\n\n    //This list was from: http://msdn.microsoft.com/en-us/library/f8tbc79x(v=vs.84).aspx\n    var atomWords = ['true', 'false', 'nothing', 'empty', 'null'];\n    //This list was from: http://msdn.microsoft.com/en-us/library/3ca8tfek(v=vs.84).aspx\n    var builtinFuncsWords = ['abs', 'array', 'asc', 'atn', 'cbool', 'cbyte', 'ccur', 'cdate', 'cdbl', 'chr', 'cint', 'clng', 'cos', 'csng', 'cstr', 'date', 'dateadd', 'datediff', 'datepart',\n                        'dateserial', 'datevalue', 'day', 'escape', 'eval', 'execute', 'exp', 'filter', 'formatcurrency', 'formatdatetime', 'formatnumber', 'formatpercent', 'getlocale', 'getobject',\n                        'getref', 'hex', 'hour', 'inputbox', 'instr', 'instrrev', 'int', 'fix', 'isarray', 'isdate', 'isempty', 'isnull', 'isnumeric', 'isobject', 'join', 'lbound', 'lcase', 'left',\n                        'len', 'loadpicture', 'log', 'ltrim', 'rtrim', 'trim', 'maths', 'mid', 'minute', 'month', 'monthname', 'msgbox', 'now', 'oct', 'replace', 'rgb', 'right', 'rnd', 'round',\n                        'scriptengine', 'scriptenginebuildversion', 'scriptenginemajorversion', 'scriptengineminorversion', 'second', 'setlocale', 'sgn', 'sin', 'space', 'split', 'sqr', 'strcomp',\n                        'string', 'strreverse', 'tan', 'time', 'timer', 'timeserial', 'timevalue', 'typename', 'ubound', 'ucase', 'unescape', 'vartype', 'weekday', 'weekdayname', 'year'];\n\n    //This list was from: http://msdn.microsoft.com/en-us/library/ydz4cfk3(v=vs.84).aspx\n    var builtinConsts = ['vbBlack', 'vbRed', 'vbGreen', 'vbYellow', 'vbBlue', 'vbMagenta', 'vbCyan', 'vbWhite', 'vbBinaryCompare', 'vbTextCompare',\n                         'vbSunday', 'vbMonday', 'vbTuesday', 'vbWednesday', 'vbThursday', 'vbFriday', 'vbSaturday', 'vbUseSystemDayOfWeek', 'vbFirstJan1', 'vbFirstFourDays', 'vbFirstFullWeek',\n                         'vbGeneralDate', 'vbLongDate', 'vbShortDate', 'vbLongTime', 'vbShortTime', 'vbObjectError',\n                         'vbOKOnly', 'vbOKCancel', 'vbAbortRetryIgnore', 'vbYesNoCancel', 'vbYesNo', 'vbRetryCancel', 'vbCritical', 'vbQuestion', 'vbExclamation', 'vbInformation', 'vbDefaultButton1', 'vbDefaultButton2',\n                         'vbDefaultButton3', 'vbDefaultButton4', 'vbApplicationModal', 'vbSystemModal', 'vbOK', 'vbCancel', 'vbAbort', 'vbRetry', 'vbIgnore', 'vbYes', 'vbNo',\n                         'vbCr', 'VbCrLf', 'vbFormFeed', 'vbLf', 'vbNewLine', 'vbNullChar', 'vbNullString', 'vbTab', 'vbVerticalTab', 'vbUseDefault', 'vbTrue', 'vbFalse',\n                         'vbEmpty', 'vbNull', 'vbInteger', 'vbLong', 'vbSingle', 'vbDouble', 'vbCurrency', 'vbDate', 'vbString', 'vbObject', 'vbError', 'vbBoolean', 'vbVariant', 'vbDataObject', 'vbDecimal', 'vbByte', 'vbArray'];\n    //This list was from: http://msdn.microsoft.com/en-us/library/hkc375ea(v=vs.84).aspx\n    var builtinObjsWords = ['WScript', 'err', 'debug', 'RegExp'];\n    var knownProperties = ['description', 'firstindex', 'global', 'helpcontext', 'helpfile', 'ignorecase', 'length', 'number', 'pattern', 'source', 'value', 'count'];\n    var knownMethods = ['clear', 'execute', 'raise', 'replace', 'test', 'write', 'writeline', 'close', 'open', 'state', 'eof', 'update', 'addnew', 'end', 'createobject', 'quit'];\n\n    var aspBuiltinObjsWords = ['server', 'response', 'request', 'session', 'application'];\n    var aspKnownProperties = ['buffer', 'cachecontrol', 'charset', 'contenttype', 'expires', 'expiresabsolute', 'isclientconnected', 'pics', 'status', //response\n                              'clientcertificate', 'cookies', 'form', 'querystring', 'servervariables', 'totalbytes', //request\n                              'contents', 'staticobjects', //application\n                              'codepage', 'lcid', 'sessionid', 'timeout', //session\n                              'scripttimeout']; //server\n    var aspKnownMethods = ['addheader', 'appendtolog', 'binarywrite', 'end', 'flush', 'redirect', //response\n                           'binaryread', //request\n                           'remove', 'removeall', 'lock', 'unlock', //application\n                           'abandon', //session\n                           'getlasterror', 'htmlencode', 'mappath', 'transfer', 'urlencode']; //server\n\n    var knownWords = knownMethods.concat(knownProperties);\n\n    builtinObjsWords = builtinObjsWords.concat(builtinConsts);\n\n    if (conf.isASP){\n        builtinObjsWords = builtinObjsWords.concat(aspBuiltinObjsWords);\n        knownWords = knownWords.concat(aspKnownMethods, aspKnownProperties);\n    };\n\n    var keywords = wordRegexp(commonkeywords);\n    var atoms = wordRegexp(atomWords);\n    var builtinFuncs = wordRegexp(builtinFuncsWords);\n    var builtinObjs = wordRegexp(builtinObjsWords);\n    var known = wordRegexp(knownWords);\n    var stringPrefixes = '\"';\n\n    var opening = wordRegexp(openingKeywords);\n    var middle = wordRegexp(middleKeywords);\n    var closing = wordRegexp(endKeywords);\n    var doubleClosing = wordRegexp(['end']);\n    var doOpening = wordRegexp(['do']);\n    var noIndentWords = wordRegexp(['on error resume next', 'exit']);\n    var comment = wordRegexp(['rem']);\n\n\n    function indent(_stream, state) {\n      state.currentIndent++;\n    }\n\n    function dedent(_stream, state) {\n      state.currentIndent--;\n    }\n    // tokenizers\n    function tokenBase(stream, state) {\n        if (stream.eatSpace()) {\n            return 'space';\n            //return null;\n        }\n\n        var ch = stream.peek();\n\n        // Handle Comments\n        if (ch === \"'\") {\n            stream.skipToEnd();\n            return 'comment';\n        }\n        if (stream.match(comment)){\n            stream.skipToEnd();\n            return 'comment';\n        }\n\n\n        // Handle Number Literals\n        if (stream.match(/^((&H)|(&O))?[0-9\\.]/i, false) && !stream.match(/^((&H)|(&O))?[0-9\\.]+[a-z_]/i, false)) {\n            var floatLiteral = false;\n            // Floats\n            if (stream.match(/^\\d*\\.\\d+/i)) { floatLiteral = true; }\n            else if (stream.match(/^\\d+\\.\\d*/)) { floatLiteral = true; }\n            else if (stream.match(/^\\.\\d+/)) { floatLiteral = true; }\n\n            if (floatLiteral) {\n                // Float literals may be \"imaginary\"\n                stream.eat(/J/i);\n                return 'number';\n            }\n            // Integers\n            var intLiteral = false;\n            // Hex\n            if (stream.match(/^&H[0-9a-f]+/i)) { intLiteral = true; }\n            // Octal\n            else if (stream.match(/^&O[0-7]+/i)) { intLiteral = true; }\n            // Decimal\n            else if (stream.match(/^[1-9]\\d*F?/)) {\n                // Decimal literals may be \"imaginary\"\n                stream.eat(/J/i);\n                // TODO - Can you have imaginary longs?\n                intLiteral = true;\n            }\n            // Zero by itself with no other piece of number.\n            else if (stream.match(/^0(?![\\dx])/i)) { intLiteral = true; }\n            if (intLiteral) {\n                // Integer literals may be \"long\"\n                stream.eat(/L/i);\n                return 'number';\n            }\n        }\n\n        // Handle Strings\n        if (stream.match(stringPrefixes)) {\n            state.tokenize = tokenStringFactory(stream.current());\n            return state.tokenize(stream, state);\n        }\n\n        // Handle operators and Delimiters\n        if (stream.match(doubleOperators)\n            || stream.match(singleOperators)\n            || stream.match(wordOperators)) {\n            return 'operator';\n        }\n        if (stream.match(singleDelimiters)) {\n            return null;\n        }\n\n        if (stream.match(brakets)) {\n            return \"bracket\";\n        }\n\n        if (stream.match(noIndentWords)) {\n            state.doInCurrentLine = true;\n\n            return 'keyword';\n        }\n\n        if (stream.match(doOpening)) {\n            indent(stream,state);\n            state.doInCurrentLine = true;\n\n            return 'keyword';\n        }\n        if (stream.match(opening)) {\n            if (! state.doInCurrentLine)\n              indent(stream,state);\n            else\n              state.doInCurrentLine = false;\n\n            return 'keyword';\n        }\n        if (stream.match(middle)) {\n            return 'keyword';\n        }\n\n\n        if (stream.match(doubleClosing)) {\n            dedent(stream,state);\n            dedent(stream,state);\n\n            return 'keyword';\n        }\n        if (stream.match(closing)) {\n            if (! state.doInCurrentLine)\n              dedent(stream,state);\n            else\n              state.doInCurrentLine = false;\n\n            return 'keyword';\n        }\n\n        if (stream.match(keywords)) {\n            return 'keyword';\n        }\n\n        if (stream.match(atoms)) {\n            return 'atom';\n        }\n\n        if (stream.match(known)) {\n            return 'variable-2';\n        }\n\n        if (stream.match(builtinFuncs)) {\n            return 'builtin';\n        }\n\n        if (stream.match(builtinObjs)){\n            return 'variable-2';\n        }\n\n        if (stream.match(identifiers)) {\n            return 'variable';\n        }\n\n        // Handle non-detected items\n        stream.next();\n        return ERRORCLASS;\n    }\n\n    function tokenStringFactory(delimiter) {\n        var singleline = delimiter.length == 1;\n        var OUTCLASS = 'string';\n\n        return function(stream, state) {\n            while (!stream.eol()) {\n                stream.eatWhile(/[^'\"]/);\n                if (stream.match(delimiter)) {\n                    state.tokenize = tokenBase;\n                    return OUTCLASS;\n                } else {\n                    stream.eat(/['\"]/);\n                }\n            }\n            if (singleline) {\n                if (parserConf.singleLineStringErrors) {\n                    return ERRORCLASS;\n                } else {\n                    state.tokenize = tokenBase;\n                }\n            }\n            return OUTCLASS;\n        };\n    }\n\n\n    function tokenLexer(stream, state) {\n        var style = state.tokenize(stream, state);\n        var current = stream.current();\n\n        // Handle '.' connected identifiers\n        if (current === '.') {\n            style = state.tokenize(stream, state);\n\n            current = stream.current();\n            if (style && (style.substr(0, 8) === 'variable' || style==='builtin' || style==='keyword')){//|| knownWords.indexOf(current.substring(1)) > -1) {\n                if (style === 'builtin' || style === 'keyword') style='variable';\n                if (knownWords.indexOf(current.substr(1)) > -1) style='variable-2';\n\n                return style;\n            } else {\n                return ERRORCLASS;\n            }\n        }\n\n        return style;\n    }\n\n    var external = {\n        electricChars:\"dDpPtTfFeE \",\n        startState: function() {\n            return {\n              tokenize: tokenBase,\n              lastToken: null,\n              currentIndent: 0,\n              nextLineIndent: 0,\n              doInCurrentLine: false,\n              ignoreKeyword: false\n\n\n          };\n        },\n\n        token: function(stream, state) {\n            if (stream.sol()) {\n              state.currentIndent += state.nextLineIndent;\n              state.nextLineIndent = 0;\n              state.doInCurrentLine = 0;\n            }\n            var style = tokenLexer(stream, state);\n\n            state.lastToken = {style:style, content: stream.current()};\n\n            if (style==='space') style=null;\n\n            return style;\n        },\n\n        indent: function(state, textAfter) {\n            var trueText = textAfter.replace(/^\\s+|\\s+$/g, '') ;\n            if (trueText.match(closing) || trueText.match(doubleClosing) || trueText.match(middle)) return conf.indentUnit*(state.currentIndent-1);\n            if(state.currentIndent < 0) return 0;\n            return state.currentIndent * conf.indentUnit;\n        }\n\n    };\n    return external;\n});\n\nCodeMirror.defineMIME(\"text/vbscript\", \"vbscript\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"velocity\", function() {\n    function parseWords(str) {\n        var obj = {}, words = str.split(\" \");\n        for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n        return obj;\n    }\n\n    var keywords = parseWords(\"#end #else #break #stop #[[ #]] \" +\n                              \"#{end} #{else} #{break} #{stop}\");\n    var functions = parseWords(\"#if #elseif #foreach #set #include #parse #macro #define #evaluate \" +\n                               \"#{if} #{elseif} #{foreach} #{set} #{include} #{parse} #{macro} #{define} #{evaluate}\");\n    var specials = parseWords(\"$foreach.count $foreach.hasNext $foreach.first $foreach.last $foreach.topmost $foreach.parent.count $foreach.parent.hasNext $foreach.parent.first $foreach.parent.last $foreach.parent $velocityCount $!bodyContent $bodyContent\");\n    var isOperatorChar = /[+\\-*&%=<>!?:\\/|]/;\n\n    function chain(stream, state, f) {\n        state.tokenize = f;\n        return f(stream, state);\n    }\n    function tokenBase(stream, state) {\n        var beforeParams = state.beforeParams;\n        state.beforeParams = false;\n        var ch = stream.next();\n        // start of unparsed string?\n        if ((ch == \"'\") && !state.inString && state.inParams) {\n            state.lastTokenWasBuiltin = false;\n            return chain(stream, state, tokenString(ch));\n        }\n        // start of parsed string?\n        else if ((ch == '\"')) {\n            state.lastTokenWasBuiltin = false;\n            if (state.inString) {\n                state.inString = false;\n                return \"string\";\n            }\n            else if (state.inParams)\n                return chain(stream, state, tokenString(ch));\n        }\n        // is it one of the special signs []{}().,;? Seperator?\n        else if (/[\\[\\]{}\\(\\),;\\.]/.test(ch)) {\n            if (ch == \"(\" && beforeParams)\n                state.inParams = true;\n            else if (ch == \")\") {\n                state.inParams = false;\n                state.lastTokenWasBuiltin = true;\n            }\n            return null;\n        }\n        // start of a number value?\n        else if (/\\d/.test(ch)) {\n            state.lastTokenWasBuiltin = false;\n            stream.eatWhile(/[\\w\\.]/);\n            return \"number\";\n        }\n        // multi line comment?\n        else if (ch == \"#\" && stream.eat(\"*\")) {\n            state.lastTokenWasBuiltin = false;\n            return chain(stream, state, tokenComment);\n        }\n        // unparsed content?\n        else if (ch == \"#\" && stream.match(/ *\\[ *\\[/)) {\n            state.lastTokenWasBuiltin = false;\n            return chain(stream, state, tokenUnparsed);\n        }\n        // single line comment?\n        else if (ch == \"#\" && stream.eat(\"#\")) {\n            state.lastTokenWasBuiltin = false;\n            stream.skipToEnd();\n            return \"comment\";\n        }\n        // variable?\n        else if (ch == \"$\") {\n            stream.eatWhile(/[\\w\\d\\$_\\.{}]/);\n            // is it one of the specials?\n            if (specials && specials.propertyIsEnumerable(stream.current())) {\n                return \"keyword\";\n            }\n            else {\n                state.lastTokenWasBuiltin = true;\n                state.beforeParams = true;\n                return \"builtin\";\n            }\n        }\n        // is it a operator?\n        else if (isOperatorChar.test(ch)) {\n            state.lastTokenWasBuiltin = false;\n            stream.eatWhile(isOperatorChar);\n            return \"operator\";\n        }\n        else {\n            // get the whole word\n            stream.eatWhile(/[\\w\\$_{}@]/);\n            var word = stream.current();\n            // is it one of the listed keywords?\n            if (keywords && keywords.propertyIsEnumerable(word))\n                return \"keyword\";\n            // is it one of the listed functions?\n            if (functions && functions.propertyIsEnumerable(word) ||\n                    (stream.current().match(/^#@?[a-z0-9_]+ *$/i) && stream.peek()==\"(\") &&\n                     !(functions && functions.propertyIsEnumerable(word.toLowerCase()))) {\n                state.beforeParams = true;\n                state.lastTokenWasBuiltin = false;\n                return \"keyword\";\n            }\n            if (state.inString) {\n                state.lastTokenWasBuiltin = false;\n                return \"string\";\n            }\n            if (stream.pos > word.length && stream.string.charAt(stream.pos-word.length-1)==\".\" && state.lastTokenWasBuiltin)\n                return \"builtin\";\n            // default: just a \"word\"\n            state.lastTokenWasBuiltin = false;\n            return null;\n        }\n    }\n\n    function tokenString(quote) {\n        return function(stream, state) {\n            var escaped = false, next, end = false;\n            while ((next = stream.next()) != null) {\n                if ((next == quote) && !escaped) {\n                    end = true;\n                    break;\n                }\n                if (quote=='\"' && stream.peek() == '$' && !escaped) {\n                    state.inString = true;\n                    end = true;\n                    break;\n                }\n                escaped = !escaped && next == \"\\\\\";\n            }\n            if (end) state.tokenize = tokenBase;\n            return \"string\";\n        };\n    }\n\n    function tokenComment(stream, state) {\n        var maybeEnd = false, ch;\n        while (ch = stream.next()) {\n            if (ch == \"#\" && maybeEnd) {\n                state.tokenize = tokenBase;\n                break;\n            }\n            maybeEnd = (ch == \"*\");\n        }\n        return \"comment\";\n    }\n\n    function tokenUnparsed(stream, state) {\n        var maybeEnd = 0, ch;\n        while (ch = stream.next()) {\n            if (ch == \"#\" && maybeEnd == 2) {\n                state.tokenize = tokenBase;\n                break;\n            }\n            if (ch == \"]\")\n                maybeEnd++;\n            else if (ch != \" \")\n                maybeEnd = 0;\n        }\n        return \"meta\";\n    }\n    // Interface\n\n    return {\n        startState: function() {\n            return {\n                tokenize: tokenBase,\n                beforeParams: false,\n                inParams: false,\n                inString: false,\n                lastTokenWasBuiltin: false\n            };\n        },\n\n        token: function(stream, state) {\n            if (stream.eatSpace()) return null;\n            return state.tokenize(stream, state);\n        },\n        blockCommentStart: \"#*\",\n        blockCommentEnd: \"*#\",\n        lineComment: \"##\",\n        fold: \"velocity\"\n    };\n});\n\nCodeMirror.defineMIME(\"text/velocity\", \"velocity\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\nCodeMirror.defineMode(\"verilog\", function(config, parserConfig) {\n  \"use strict\";\n\n  var indentUnit = config.indentUnit,\n      statementIndentUnit = parserConfig.statementIndentUnit || indentUnit,\n      dontAlignCalls = parserConfig.dontAlignCalls,\n      noIndentKeywords = parserConfig.noIndentKeywords || [],\n      multiLineStrings = parserConfig.multiLineStrings,\n      hooks = parserConfig.hooks || {};\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  /**\n   * Keywords from IEEE 1800-2012\n   */\n  var keywords = words(\n    \"accept_on alias always always_comb always_ff always_latch and assert assign assume automatic before begin bind \" +\n    \"bins binsof bit break buf bufif0 bufif1 byte case casex casez cell chandle checker class clocking cmos config \" +\n    \"const constraint context continue cover covergroup coverpoint cross deassign default defparam design disable \" +\n    \"dist do edge else end endcase endchecker endclass endclocking endconfig endfunction endgenerate endgroup \" +\n    \"endinterface endmodule endpackage endprimitive endprogram endproperty endspecify endsequence endtable endtask \" +\n    \"enum event eventually expect export extends extern final first_match for force foreach forever fork forkjoin \" +\n    \"function generate genvar global highz0 highz1 if iff ifnone ignore_bins illegal_bins implements implies import \" +\n    \"incdir include initial inout input inside instance int integer interconnect interface intersect join join_any \" +\n    \"join_none large let liblist library local localparam logic longint macromodule matches medium modport module \" +\n    \"nand negedge nettype new nexttime nmos nor noshowcancelled not notif0 notif1 null or output package packed \" +\n    \"parameter pmos posedge primitive priority program property protected pull0 pull1 pulldown pullup \" +\n    \"pulsestyle_ondetect pulsestyle_onevent pure rand randc randcase randsequence rcmos real realtime ref reg \" +\n    \"reject_on release repeat restrict return rnmos rpmos rtran rtranif0 rtranif1 s_always s_eventually s_nexttime \" +\n    \"s_until s_until_with scalared sequence shortint shortreal showcancelled signed small soft solve specify \" +\n    \"specparam static string strong strong0 strong1 struct super supply0 supply1 sync_accept_on sync_reject_on \" +\n    \"table tagged task this throughout time timeprecision timeunit tran tranif0 tranif1 tri tri0 tri1 triand trior \" +\n    \"trireg type typedef union unique unique0 unsigned until until_with untyped use uwire var vectored virtual void \" +\n    \"wait wait_order wand weak weak0 weak1 while wildcard wire with within wor xnor xor\");\n\n  /** Operators from IEEE 1800-2012\n     unary_operator ::=\n       + | - | ! | ~ | & | ~& | | | ~| | ^ | ~^ | ^~\n     binary_operator ::=\n       + | - | * | / | % | == | != | === | !== | ==? | !=? | && | || | **\n       | < | <= | > | >= | & | | | ^ | ^~ | ~^ | >> | << | >>> | <<<\n       | -> | <->\n     inc_or_dec_operator ::= ++ | --\n     unary_module_path_operator ::=\n       ! | ~ | & | ~& | | | ~| | ^ | ~^ | ^~\n     binary_module_path_operator ::=\n       == | != | && | || | & | | | ^ | ^~ | ~^\n  */\n  var isOperatorChar = /[\\+\\-\\*\\/!~&|^%=?:]/;\n  var isBracketChar = /[\\[\\]{}()]/;\n\n  var unsignedNumber = /\\d[0-9_]*/;\n  var decimalLiteral = /\\d*\\s*'s?d\\s*\\d[0-9_]*/i;\n  var binaryLiteral = /\\d*\\s*'s?b\\s*[xz01][xz01_]*/i;\n  var octLiteral = /\\d*\\s*'s?o\\s*[xz0-7][xz0-7_]*/i;\n  var hexLiteral = /\\d*\\s*'s?h\\s*[0-9a-fxz?][0-9a-fxz?_]*/i;\n  var realLiteral = /(\\d[\\d_]*(\\.\\d[\\d_]*)?E-?[\\d_]+)|(\\d[\\d_]*\\.\\d[\\d_]*)/i;\n\n  var closingBracketOrWord = /^((\\w+)|[)}\\]])/;\n  var closingBracket = /[)}\\]]/;\n\n  var curPunc;\n  var curKeyword;\n\n  // Block openings which are closed by a matching keyword in the form of (\"end\" + keyword)\n  // E.g. \"task\" => \"endtask\"\n  var blockKeywords = words(\n    \"case checker class clocking config function generate interface module package \" +\n    \"primitive program property specify sequence table task\"\n  );\n\n  // Opening/closing pairs\n  var openClose = {};\n  for (var keyword in blockKeywords) {\n    openClose[keyword] = \"end\" + keyword;\n  }\n  openClose[\"begin\"] = \"end\";\n  openClose[\"casex\"] = \"endcase\";\n  openClose[\"casez\"] = \"endcase\";\n  openClose[\"do\"   ] = \"while\";\n  openClose[\"fork\" ] = \"join;join_any;join_none\";\n  openClose[\"covergroup\"] = \"endgroup\";\n\n  for (var i in noIndentKeywords) {\n    var keyword = noIndentKeywords[i];\n    if (openClose[keyword]) {\n      openClose[keyword] = undefined;\n    }\n  }\n\n  // Keywords which open statements that are ended with a semi-colon\n  var statementKeywords = words(\"always always_comb always_ff always_latch assert assign assume else export for foreach forever if import initial repeat while\");\n\n  function tokenBase(stream, state) {\n    var ch = stream.peek(), style;\n    if (hooks[ch] && (style = hooks[ch](stream, state)) != false) return style;\n    if (hooks.tokenBase && (style = hooks.tokenBase(stream, state)) != false)\n      return style;\n\n    if (/[,;:\\.]/.test(ch)) {\n      curPunc = stream.next();\n      return null;\n    }\n    if (isBracketChar.test(ch)) {\n      curPunc = stream.next();\n      return \"bracket\";\n    }\n    // Macros (tick-defines)\n    if (ch == '`') {\n      stream.next();\n      if (stream.eatWhile(/[\\w\\$_]/)) {\n        return \"def\";\n      } else {\n        return null;\n      }\n    }\n    // System calls\n    if (ch == '$') {\n      stream.next();\n      if (stream.eatWhile(/[\\w\\$_]/)) {\n        return \"meta\";\n      } else {\n        return null;\n      }\n    }\n    // Time literals\n    if (ch == '#') {\n      stream.next();\n      stream.eatWhile(/[\\d_.]/);\n      return \"def\";\n    }\n    // Strings\n    if (ch == '\"') {\n      stream.next();\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    // Comments\n    if (ch == \"/\") {\n      stream.next();\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      stream.backUp(1);\n    }\n\n    // Numeric literals\n    if (stream.match(realLiteral) ||\n        stream.match(decimalLiteral) ||\n        stream.match(binaryLiteral) ||\n        stream.match(octLiteral) ||\n        stream.match(hexLiteral) ||\n        stream.match(unsignedNumber) ||\n        stream.match(realLiteral)) {\n      return \"number\";\n    }\n\n    // Operators\n    if (stream.eatWhile(isOperatorChar)) {\n      return \"meta\";\n    }\n\n    // Keywords / plain variables\n    if (stream.eatWhile(/[\\w\\$_]/)) {\n      var cur = stream.current();\n      if (keywords[cur]) {\n        if (openClose[cur]) {\n          curPunc = \"newblock\";\n        }\n        if (statementKeywords[cur]) {\n          curPunc = \"newstatement\";\n        }\n        curKeyword = cur;\n        return \"keyword\";\n      }\n      return \"variable\";\n    }\n\n    stream.next();\n    return null;\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = tokenBase;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    var indent = state.indented;\n    var c = new Context(indent, col, type, null, state.context);\n    return state.context = c;\n  }\n  function popContext(state) {\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\") {\n      state.indented = state.context.indented;\n    }\n    return state.context = state.context.prev;\n  }\n\n  function isClosing(text, contextClosing) {\n    if (text == contextClosing) {\n      return true;\n    } else {\n      // contextClosing may be multiple keywords separated by ;\n      var closingKeywords = contextClosing.split(\";\");\n      for (var i in closingKeywords) {\n        if (text == closingKeywords[i]) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  function buildElectricInputRegEx() {\n    // Reindentation should occur on any bracket char: {}()[]\n    // or on a match of any of the block closing keywords, at\n    // the end of a line\n    var allClosings = [];\n    for (var i in openClose) {\n      if (openClose[i]) {\n        var closings = openClose[i].split(\";\");\n        closings.forEach(function(j){\n          allClosings.push(j);\n        });\n      }\n    }\n    var re = new RegExp(\"[{}()\\\\[\\\\]]|(\" + allClosings.join(\"|\") + \")$\");\n    return re;\n  }\n\n  // Interface\n  return {\n\n    // Regex to force current line to reindent\n    electricInput: buildElectricInputRegEx(),\n\n    startState: function(basecolumn) {\n      var state = {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n      if (hooks.startState) hooks.startState(state);\n      return state;\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (hooks.token) {\n        // Call hook, with an optional return value of a style to override verilog styling.\n        var style = hooks.token(stream, state);\n        if (style !== undefined) {\n          return style;\n        }\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      curKeyword = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\" || style == \"variable\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if (curPunc == ctx.type) {\n        popContext(state);\n      } else if ((curPunc == \";\" && ctx.type == \"statement\") ||\n               (ctx.type && isClosing(curKeyword, ctx.type))) {\n        ctx = popContext(state);\n        while (ctx && ctx.type == \"statement\") ctx = popContext(state);\n      } else if (curPunc == \"{\") {\n        pushContext(state, stream.column(), \"}\");\n      } else if (curPunc == \"[\") {\n        pushContext(state, stream.column(), \"]\");\n      } else if (curPunc == \"(\") {\n        pushContext(state, stream.column(), \")\");\n      } else if (ctx && ctx.type == \"endcase\" && curPunc == \":\") {\n        pushContext(state, stream.column(), \"statement\");\n      } else if (curPunc == \"newstatement\") {\n        pushContext(state, stream.column(), \"statement\");\n      } else if (curPunc == \"newblock\") {\n        if (curKeyword == \"function\" && ctx && (ctx.type == \"statement\" || ctx.type == \"endgroup\")) {\n          // The 'function' keyword can appear in some other contexts where it actually does not\n          // indicate a function (import/export DPI and covergroup definitions).\n          // Do nothing in this case\n        } else if (curKeyword == \"task\" && ctx && ctx.type == \"statement\") {\n          // Same thing for task\n        } else {\n          var close = openClose[curKeyword];\n          pushContext(state, stream.column(), close);\n        }\n      }\n\n      state.startOfLine = false;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null) return CodeMirror.Pass;\n      if (hooks.indent) {\n        var fromHook = hooks.indent(state);\n        if (fromHook >= 0) return fromHook;\n      }\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n      var closing = false;\n      var possibleClosing = textAfter.match(closingBracketOrWord);\n      if (possibleClosing)\n        closing = isClosing(possibleClosing[0], ctx.type);\n      if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit);\n      else if (closingBracket.test(ctx.type) && ctx.align && !dontAlignCalls) return ctx.column + (closing ? 0 : 1);\n      else if (ctx.type == \")\" && !closing) return ctx.indented + statementIndentUnit;\n      else return ctx.indented + (closing ? 0 : indentUnit);\n    },\n\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\"\n  };\n});\n\n  CodeMirror.defineMIME(\"text/x-verilog\", {\n    name: \"verilog\"\n  });\n\n  CodeMirror.defineMIME(\"text/x-systemverilog\", {\n    name: \"verilog\"\n  });\n\n\n\n  // TL-Verilog mode.\n  // See tl-x.org for language spec.\n  // See the mode in action at makerchip.com.\n  // Contact: steve.hoover@redwoodeda.com\n\n  // TLV Identifier prefixes.\n  // Note that sign is not treated separately, so \"+/-\" versions of numeric identifiers\n  // are included.\n  var tlvIdentifierStyle = {\n    \"|\": \"link\",\n    \">\": \"property\",  // Should condition this off for > TLV 1c.\n    \"$\": \"variable\",\n    \"$$\": \"variable\",\n    \"?$\": \"qualifier\",\n    \"?*\": \"qualifier\",\n    \"-\": \"hr\",\n    \"/\": \"property\",\n    \"/-\": \"property\",\n    \"@\": \"variable-3\",\n    \"@-\": \"variable-3\",\n    \"@++\": \"variable-3\",\n    \"@+=\": \"variable-3\",\n    \"@+=-\": \"variable-3\",\n    \"@--\": \"variable-3\",\n    \"@-=\": \"variable-3\",\n    \"%+\": \"tag\",\n    \"%-\": \"tag\",\n    \"%\": \"tag\",\n    \">>\": \"tag\",\n    \"<<\": \"tag\",\n    \"<>\": \"tag\",\n    \"#\": \"tag\",  // Need to choose a style for this.\n    \"^\": \"attribute\",\n    \"^^\": \"attribute\",\n    \"^!\": \"attribute\",\n    \"*\": \"variable-2\",\n    \"**\": \"variable-2\",\n    \"\\\\\": \"keyword\",\n    \"\\\"\": \"comment\"\n  };\n\n  // Lines starting with these characters define scope (result in indentation).\n  var tlvScopePrefixChars = {\n    \"/\": \"beh-hier\",\n    \">\": \"beh-hier\",\n    \"-\": \"phys-hier\",\n    \"|\": \"pipe\",\n    \"?\": \"when\",\n    \"@\": \"stage\",\n    \"\\\\\": \"keyword\"\n  };\n  var tlvIndentUnit = 3;\n  var tlvTrackStatements = false;\n  var tlvIdentMatch = /^([~!@#\\$%\\^&\\*-\\+=\\?\\/\\\\\\|'\"<>]+)([\\d\\w_]*)/;  // Matches an identifiere.\n  // Note that ':' is excluded, because of it's use in [:].\n  var tlvFirstLevelIndentMatch = /^[! ]  /;\n  var tlvLineIndentationMatch = /^[! ] */;\n  var tlvCommentMatch = /^\\/[\\/\\*]/;\n\n\n  // Returns a style specific to the scope at the given indentation column.\n  // Type is one of: \"indent\", \"scope-ident\", \"before-scope-ident\".\n  function tlvScopeStyle(state, indentation, type) {\n    // Begin scope.\n    var depth = indentation / tlvIndentUnit;  // TODO: Pass this in instead.\n    return \"tlv-\" + state.tlvIndentationStyle[depth] + \"-\" + type;\n  }\n\n  // Return true if the next thing in the stream is an identifier with a mnemonic.\n  function tlvIdentNext(stream) {\n    var match;\n    return (match = stream.match(tlvIdentMatch, false)) && match[2].length > 0;\n  }\n\n  CodeMirror.defineMIME(\"text/x-tlv\", {\n    name: \"verilog\",\n\n    hooks: {\n\n      electricInput: false,\n\n\n      // Return undefined for verilog tokenizing, or style for TLV token (null not used).\n      // Standard CM styles are used for most formatting, but some TL-Verilog-specific highlighting\n      // can be enabled with the definition of cm-tlv-* styles, including highlighting for:\n      //   - M4 tokens\n      //   - TLV scope indentation\n      //   - Statement delimitation (enabled by tlvTrackStatements)\n      token: function(stream, state) {\n        var style = undefined;\n        var match;  // Return value of pattern matches.\n\n        // Set highlighting mode based on code region (TLV or SV).\n        if (stream.sol() && ! state.tlvInBlockComment) {\n          // Process region.\n          if (stream.peek() == '\\\\') {\n            style = \"def\";\n            stream.skipToEnd();\n            if (stream.string.match(/\\\\SV/)) {\n              state.tlvCodeActive = false;\n            } else if (stream.string.match(/\\\\TLV/)){\n              state.tlvCodeActive = true;\n            }\n          }\n          // Correct indentation in the face of a line prefix char.\n          if (state.tlvCodeActive && stream.pos == 0 &&\n              (state.indented == 0) && (match = stream.match(tlvLineIndentationMatch, false))) {\n            state.indented = match[0].length;\n          }\n\n          // Compute indentation state:\n          //   o Auto indentation on next line\n          //   o Indentation scope styles\n          var indented = state.indented;\n          var depth = indented / tlvIndentUnit;\n          if (depth <= state.tlvIndentationStyle.length) {\n            // not deeper than current scope\n\n            var blankline = stream.string.length == indented;\n            var chPos = depth * tlvIndentUnit;\n            if (chPos < stream.string.length) {\n              var bodyString = stream.string.slice(chPos);\n              var ch = bodyString[0];\n              if (tlvScopePrefixChars[ch] && ((match = bodyString.match(tlvIdentMatch)) &&\n                  tlvIdentifierStyle[match[1]])) {\n                // This line begins scope.\n                // Next line gets indented one level.\n                indented += tlvIndentUnit;\n                // Style the next level of indentation (except non-region keyword identifiers,\n                //   which are statements themselves)\n                if (!(ch == \"\\\\\" && chPos > 0)) {\n                  state.tlvIndentationStyle[depth] = tlvScopePrefixChars[ch];\n                  if (tlvTrackStatements) {state.statementComment = false;}\n                  depth++;\n                }\n              }\n            }\n            // Clear out deeper indentation levels unless line is blank.\n            if (!blankline) {\n              while (state.tlvIndentationStyle.length > depth) {\n                state.tlvIndentationStyle.pop();\n              }\n            }\n          }\n          // Set next level of indentation.\n          state.tlvNextIndent = indented;\n        }\n\n        if (state.tlvCodeActive) {\n          // Highlight as TLV.\n\n          var beginStatement = false;\n          if (tlvTrackStatements) {\n            // This starts a statement if the position is at the scope level\n            // and we're not within a statement leading comment.\n            beginStatement =\n                   (stream.peek() != \" \") &&   // not a space\n                   (style === undefined) &&    // not a region identifier\n                   !state.tlvInBlockComment && // not in block comment\n                   //!stream.match(tlvCommentMatch, false) && // not comment start\n                   (stream.column() == state.tlvIndentationStyle.length * tlvIndentUnit);  // at scope level\n            if (beginStatement) {\n              if (state.statementComment) {\n                // statement already started by comment\n                beginStatement = false;\n              }\n              state.statementComment =\n                   stream.match(tlvCommentMatch, false); // comment start\n            }\n          }\n\n          var match;\n          if (style !== undefined) {\n            // Region line.\n            style += \" \" + tlvScopeStyle(state, 0, \"scope-ident\")\n          } else if (((stream.pos / tlvIndentUnit) < state.tlvIndentationStyle.length) &&\n                     (match = stream.match(stream.sol() ? tlvFirstLevelIndentMatch : /^   /))) {\n            // Indentation\n            style = // make this style distinct from the previous one to prevent\n                    // codemirror from combining spans\n                    \"tlv-indent-\" + (((stream.pos % 2) == 0) ? \"even\" : \"odd\") +\n                    // and style it\n                    \" \" + tlvScopeStyle(state, stream.pos - tlvIndentUnit, \"indent\");\n            // Style the line prefix character.\n            if (match[0].charAt(0) == \"!\") {\n              style += \" tlv-alert-line-prefix\";\n            }\n            // Place a class before a scope identifier.\n            if (tlvIdentNext(stream)) {\n              style += \" \" + tlvScopeStyle(state, stream.pos, \"before-scope-ident\");\n            }\n          } else if (state.tlvInBlockComment) {\n            // In a block comment.\n            if (stream.match(/^.*?\\*\\//)) {\n              // Exit block comment.\n              state.tlvInBlockComment = false;\n              if (tlvTrackStatements && !stream.eol()) {\n                // Anything after comment is assumed to be real statement content.\n                state.statementComment = false;\n              }\n            } else {\n              stream.skipToEnd();\n            }\n            style = \"comment\";\n          } else if ((match = stream.match(tlvCommentMatch)) && !state.tlvInBlockComment) {\n            // Start comment.\n            if (match[0] == \"//\") {\n              // Line comment.\n              stream.skipToEnd();\n            } else {\n              // Block comment.\n              state.tlvInBlockComment = true;\n            }\n            style = \"comment\";\n          } else if (match = stream.match(tlvIdentMatch)) {\n            // looks like an identifier (or identifier prefix)\n            var prefix = match[1];\n            var mnemonic = match[2];\n            if (// is identifier prefix\n                tlvIdentifierStyle.hasOwnProperty(prefix) &&\n                // has mnemonic or we're at the end of the line (maybe it hasn't been typed yet)\n                (mnemonic.length > 0 || stream.eol())) {\n              style = tlvIdentifierStyle[prefix];\n              if (stream.column() == state.indented) {\n                // Begin scope.\n                style += \" \" + tlvScopeStyle(state, stream.column(), \"scope-ident\")\n              }\n            } else {\n              // Just swallow one character and try again.\n              // This enables subsequent identifier match with preceding symbol character, which\n              //   is legal within a statement.  (Eg, !$reset).  It also enables detection of\n              //   comment start with preceding symbols.\n              stream.backUp(stream.current().length - 1);\n              style = \"tlv-default\";\n            }\n          } else if (stream.match(/^\\t+/)) {\n            // Highlight tabs, which are illegal.\n            style = \"tlv-tab\";\n          } else if (stream.match(/^[\\[\\]{}\\(\\);\\:]+/)) {\n            // [:], (), {}, ;.\n            style = \"meta\";\n          } else if (match = stream.match(/^[mM]4([\\+_])?[\\w\\d_]*/)) {\n            // m4 pre proc\n            style = (match[1] == \"+\") ? \"tlv-m4-plus\" : \"tlv-m4\";\n          } else if (stream.match(/^ +/)){\n            // Skip over spaces.\n            if (stream.eol()) {\n              // Trailing spaces.\n              style = \"error\";\n            } else {\n              // Non-trailing spaces.\n              style = \"tlv-default\";\n            }\n          } else if (stream.match(/^[\\w\\d_]+/)) {\n            // alpha-numeric token.\n            style = \"number\";\n          } else {\n            // Eat the next char w/ no formatting.\n            stream.next();\n            style = \"tlv-default\";\n          }\n          if (beginStatement) {\n            style += \" tlv-statement\";\n          }\n        } else {\n          if (stream.match(/^[mM]4([\\w\\d_]*)/)) {\n            // m4 pre proc\n            style = \"tlv-m4\";\n          }\n        }\n        return style;\n      },\n\n      indent: function(state) {\n        return (state.tlvCodeActive == true) ? state.tlvNextIndent : -1;\n      },\n\n      startState: function(state) {\n        state.tlvIndentationStyle = [];  // Styles to use for each level of indentation.\n        state.tlvCodeActive = true;  // True when we're in a TLV region (and at beginning of file).\n        state.tlvNextIndent = -1;    // The number of spaces to autoindent the next line if tlvCodeActive.\n        state.tlvInBlockComment = false;  // True inside /**/ comment.\n        if (tlvTrackStatements) {\n          state.statementComment = false;  // True inside a statement's header comment.\n        }\n      }\n\n    }\n  });\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"xquery\", function() {\n\n  // The keywords object is set to the result of this self executing\n  // function. Each keyword is a property of the keywords object whose\n  // value is {type: atype, style: astyle}\n  var keywords = function(){\n    // convenience functions used to build keywords object\n    function kw(type) {return {type: type, style: \"keyword\"};}\n    var A = kw(\"keyword a\")\n      , B = kw(\"keyword b\")\n      , C = kw(\"keyword c\")\n      , operator = kw(\"operator\")\n      , atom = {type: \"atom\", style: \"atom\"}\n      , punctuation = {type: \"punctuation\", style: null}\n      , qualifier = {type: \"axis_specifier\", style: \"qualifier\"};\n\n    // kwObj is what is return from this function at the end\n    var kwObj = {\n      'if': A, 'switch': A, 'while': A, 'for': A,\n      'else': B, 'then': B, 'try': B, 'finally': B, 'catch': B,\n      'element': C, 'attribute': C, 'let': C, 'implements': C, 'import': C, 'module': C, 'namespace': C,\n      'return': C, 'super': C, 'this': C, 'throws': C, 'where': C, 'private': C,\n      ',': punctuation,\n      'null': atom, 'fn:false()': atom, 'fn:true()': atom\n    };\n\n    // a list of 'basic' keywords. For each add a property to kwObj with the value of\n    // {type: basic[i], style: \"keyword\"} e.g. 'after' --> {type: \"after\", style: \"keyword\"}\n    var basic = ['after','ancestor','ancestor-or-self','and','as','ascending','assert','attribute','before',\n    'by','case','cast','child','comment','declare','default','define','descendant','descendant-or-self',\n    'descending','document','document-node','element','else','eq','every','except','external','following',\n    'following-sibling','follows','for','function','if','import','in','instance','intersect','item',\n    'let','module','namespace','node','node','of','only','or','order','parent','precedes','preceding',\n    'preceding-sibling','processing-instruction','ref','return','returns','satisfies','schema','schema-element',\n    'self','some','sortby','stable','text','then','to','treat','typeswitch','union','variable','version','where',\n    'xquery', 'empty-sequence'];\n    for(var i=0, l=basic.length; i < l; i++) { kwObj[basic[i]] = kw(basic[i]);};\n\n    // a list of types. For each add a property to kwObj with the value of\n    // {type: \"atom\", style: \"atom\"}\n    var types = ['xs:string', 'xs:float', 'xs:decimal', 'xs:double', 'xs:integer', 'xs:boolean', 'xs:date', 'xs:dateTime',\n    'xs:time', 'xs:duration', 'xs:dayTimeDuration', 'xs:time', 'xs:yearMonthDuration', 'numeric', 'xs:hexBinary',\n    'xs:base64Binary', 'xs:anyURI', 'xs:QName', 'xs:byte','xs:boolean','xs:anyURI','xf:yearMonthDuration'];\n    for(var i=0, l=types.length; i < l; i++) { kwObj[types[i]] = atom;};\n\n    // each operator will add a property to kwObj with value of {type: \"operator\", style: \"keyword\"}\n    var operators = ['eq', 'ne', 'lt', 'le', 'gt', 'ge', ':=', '=', '>', '>=', '<', '<=', '.', '|', '?', 'and', 'or', 'div', 'idiv', 'mod', '*', '/', '+', '-'];\n    for(var i=0, l=operators.length; i < l; i++) { kwObj[operators[i]] = operator;};\n\n    // each axis_specifiers will add a property to kwObj with value of {type: \"axis_specifier\", style: \"qualifier\"}\n    var axis_specifiers = [\"self::\", \"attribute::\", \"child::\", \"descendant::\", \"descendant-or-self::\", \"parent::\",\n    \"ancestor::\", \"ancestor-or-self::\", \"following::\", \"preceding::\", \"following-sibling::\", \"preceding-sibling::\"];\n    for(var i=0, l=axis_specifiers.length; i < l; i++) { kwObj[axis_specifiers[i]] = qualifier; };\n\n    return kwObj;\n  }();\n\n  function chain(stream, state, f) {\n    state.tokenize = f;\n    return f(stream, state);\n  }\n\n  // the primary mode tokenizer\n  function tokenBase(stream, state) {\n    var ch = stream.next(),\n        mightBeFunction = false,\n        isEQName = isEQNameAhead(stream);\n\n    // an XML tag (if not in some sub, chained tokenizer)\n    if (ch == \"<\") {\n      if(stream.match(\"!--\", true))\n        return chain(stream, state, tokenXMLComment);\n\n      if(stream.match(\"![CDATA\", false)) {\n        state.tokenize = tokenCDATA;\n        return \"tag\";\n      }\n\n      if(stream.match(\"?\", false)) {\n        return chain(stream, state, tokenPreProcessing);\n      }\n\n      var isclose = stream.eat(\"/\");\n      stream.eatSpace();\n      var tagName = \"\", c;\n      while ((c = stream.eat(/[^\\s\\u00a0=<>\\\"\\'\\/?]/))) tagName += c;\n\n      return chain(stream, state, tokenTag(tagName, isclose));\n    }\n    // start code block\n    else if(ch == \"{\") {\n      pushStateStack(state,{ type: \"codeblock\"});\n      return null;\n    }\n    // end code block\n    else if(ch == \"}\") {\n      popStateStack(state);\n      return null;\n    }\n    // if we're in an XML block\n    else if(isInXmlBlock(state)) {\n      if(ch == \">\")\n        return \"tag\";\n      else if(ch == \"/\" && stream.eat(\">\")) {\n        popStateStack(state);\n        return \"tag\";\n      }\n      else\n        return \"variable\";\n    }\n    // if a number\n    else if (/\\d/.test(ch)) {\n      stream.match(/^\\d*(?:\\.\\d*)?(?:E[+\\-]?\\d+)?/);\n      return \"atom\";\n    }\n    // comment start\n    else if (ch === \"(\" && stream.eat(\":\")) {\n      pushStateStack(state, { type: \"comment\"});\n      return chain(stream, state, tokenComment);\n    }\n    // quoted string\n    else if (  !isEQName && (ch === '\"' || ch === \"'\"))\n      return chain(stream, state, tokenString(ch));\n    // variable\n    else if(ch === \"$\") {\n      return chain(stream, state, tokenVariable);\n    }\n    // assignment\n    else if(ch ===\":\" && stream.eat(\"=\")) {\n      return \"keyword\";\n    }\n    // open paren\n    else if(ch === \"(\") {\n      pushStateStack(state, { type: \"paren\"});\n      return null;\n    }\n    // close paren\n    else if(ch === \")\") {\n      popStateStack(state);\n      return null;\n    }\n    // open paren\n    else if(ch === \"[\") {\n      pushStateStack(state, { type: \"bracket\"});\n      return null;\n    }\n    // close paren\n    else if(ch === \"]\") {\n      popStateStack(state);\n      return null;\n    }\n    else {\n      var known = keywords.propertyIsEnumerable(ch) && keywords[ch];\n\n      // if there's a EQName ahead, consume the rest of the string portion, it's likely a function\n      if(isEQName && ch === '\\\"') while(stream.next() !== '\"'){}\n      if(isEQName && ch === '\\'') while(stream.next() !== '\\''){}\n\n      // gobble up a word if the character is not known\n      if(!known) stream.eatWhile(/[\\w\\$_-]/);\n\n      // gobble a colon in the case that is a lib func type call fn:doc\n      var foundColon = stream.eat(\":\");\n\n      // if there's not a second colon, gobble another word. Otherwise, it's probably an axis specifier\n      // which should get matched as a keyword\n      if(!stream.eat(\":\") && foundColon) {\n        stream.eatWhile(/[\\w\\$_-]/);\n      }\n      // if the next non whitespace character is an open paren, this is probably a function (if not a keyword of other sort)\n      if(stream.match(/^[ \\t]*\\(/, false)) {\n        mightBeFunction = true;\n      }\n      // is the word a keyword?\n      var word = stream.current();\n      known = keywords.propertyIsEnumerable(word) && keywords[word];\n\n      // if we think it's a function call but not yet known,\n      // set style to variable for now for lack of something better\n      if(mightBeFunction && !known) known = {type: \"function_call\", style: \"variable def\"};\n\n      // if the previous word was element, attribute, axis specifier, this word should be the name of that\n      if(isInXmlConstructor(state)) {\n        popStateStack(state);\n        return \"variable\";\n      }\n      // as previously checked, if the word is element,attribute, axis specifier, call it an \"xmlconstructor\" and\n      // push the stack so we know to look for it on the next word\n      if(word == \"element\" || word == \"attribute\" || known.type == \"axis_specifier\") pushStateStack(state, {type: \"xmlconstructor\"});\n\n      // if the word is known, return the details of that else just call this a generic 'word'\n      return known ? known.style : \"variable\";\n    }\n  }\n\n  // handle comments, including nested\n  function tokenComment(stream, state) {\n    var maybeEnd = false, maybeNested = false, nestedCount = 0, ch;\n    while (ch = stream.next()) {\n      if (ch == \")\" && maybeEnd) {\n        if(nestedCount > 0)\n          nestedCount--;\n        else {\n          popStateStack(state);\n          break;\n        }\n      }\n      else if(ch == \":\" && maybeNested) {\n        nestedCount++;\n      }\n      maybeEnd = (ch == \":\");\n      maybeNested = (ch == \"(\");\n    }\n\n    return \"comment\";\n  }\n\n  // tokenizer for string literals\n  // optionally pass a tokenizer function to set state.tokenize back to when finished\n  function tokenString(quote, f) {\n    return function(stream, state) {\n      var ch;\n\n      if(isInString(state) && stream.current() == quote) {\n        popStateStack(state);\n        if(f) state.tokenize = f;\n        return \"string\";\n      }\n\n      pushStateStack(state, { type: \"string\", name: quote, tokenize: tokenString(quote, f) });\n\n      // if we're in a string and in an XML block, allow an embedded code block\n      if(stream.match(\"{\", false) && isInXmlAttributeBlock(state)) {\n        state.tokenize = tokenBase;\n        return \"string\";\n      }\n\n\n      while (ch = stream.next()) {\n        if (ch ==  quote) {\n          popStateStack(state);\n          if(f) state.tokenize = f;\n          break;\n        }\n        else {\n          // if we're in a string and in an XML block, allow an embedded code block in an attribute\n          if(stream.match(\"{\", false) && isInXmlAttributeBlock(state)) {\n            state.tokenize = tokenBase;\n            return \"string\";\n          }\n\n        }\n      }\n\n      return \"string\";\n    };\n  }\n\n  // tokenizer for variables\n  function tokenVariable(stream, state) {\n    var isVariableChar = /[\\w\\$_-]/;\n\n    // a variable may start with a quoted EQName so if the next character is quote, consume to the next quote\n    if(stream.eat(\"\\\"\")) {\n      while(stream.next() !== '\\\"'){};\n      stream.eat(\":\");\n    } else {\n      stream.eatWhile(isVariableChar);\n      if(!stream.match(\":=\", false)) stream.eat(\":\");\n    }\n    stream.eatWhile(isVariableChar);\n    state.tokenize = tokenBase;\n    return \"variable\";\n  }\n\n  // tokenizer for XML tags\n  function tokenTag(name, isclose) {\n    return function(stream, state) {\n      stream.eatSpace();\n      if(isclose && stream.eat(\">\")) {\n        popStateStack(state);\n        state.tokenize = tokenBase;\n        return \"tag\";\n      }\n      // self closing tag without attributes?\n      if(!stream.eat(\"/\"))\n        pushStateStack(state, { type: \"tag\", name: name, tokenize: tokenBase});\n      if(!stream.eat(\">\")) {\n        state.tokenize = tokenAttribute;\n        return \"tag\";\n      }\n      else {\n        state.tokenize = tokenBase;\n      }\n      return \"tag\";\n    };\n  }\n\n  // tokenizer for XML attributes\n  function tokenAttribute(stream, state) {\n    var ch = stream.next();\n\n    if(ch == \"/\" && stream.eat(\">\")) {\n      if(isInXmlAttributeBlock(state)) popStateStack(state);\n      if(isInXmlBlock(state)) popStateStack(state);\n      return \"tag\";\n    }\n    if(ch == \">\") {\n      if(isInXmlAttributeBlock(state)) popStateStack(state);\n      return \"tag\";\n    }\n    if(ch == \"=\")\n      return null;\n    // quoted string\n    if (ch == '\"' || ch == \"'\")\n      return chain(stream, state, tokenString(ch, tokenAttribute));\n\n    if(!isInXmlAttributeBlock(state))\n      pushStateStack(state, { type: \"attribute\", tokenize: tokenAttribute});\n\n    stream.eat(/[a-zA-Z_:]/);\n    stream.eatWhile(/[-a-zA-Z0-9_:.]/);\n    stream.eatSpace();\n\n    // the case where the attribute has not value and the tag was closed\n    if(stream.match(\">\", false) || stream.match(\"/\", false)) {\n      popStateStack(state);\n      state.tokenize = tokenBase;\n    }\n\n    return \"attribute\";\n  }\n\n  // handle comments, including nested\n  function tokenXMLComment(stream, state) {\n    var ch;\n    while (ch = stream.next()) {\n      if (ch == \"-\" && stream.match(\"->\", true)) {\n        state.tokenize = tokenBase;\n        return \"comment\";\n      }\n    }\n  }\n\n\n  // handle CDATA\n  function tokenCDATA(stream, state) {\n    var ch;\n    while (ch = stream.next()) {\n      if (ch == \"]\" && stream.match(\"]\", true)) {\n        state.tokenize = tokenBase;\n        return \"comment\";\n      }\n    }\n  }\n\n  // handle preprocessing instructions\n  function tokenPreProcessing(stream, state) {\n    var ch;\n    while (ch = stream.next()) {\n      if (ch == \"?\" && stream.match(\">\", true)) {\n        state.tokenize = tokenBase;\n        return \"comment meta\";\n      }\n    }\n  }\n\n\n  // functions to test the current context of the state\n  function isInXmlBlock(state) { return isIn(state, \"tag\"); }\n  function isInXmlAttributeBlock(state) { return isIn(state, \"attribute\"); }\n  function isInXmlConstructor(state) { return isIn(state, \"xmlconstructor\"); }\n  function isInString(state) { return isIn(state, \"string\"); }\n\n  function isEQNameAhead(stream) {\n    // assume we've already eaten a quote (\")\n    if(stream.current() === '\"')\n      return stream.match(/^[^\\\"]+\\\"\\:/, false);\n    else if(stream.current() === '\\'')\n      return stream.match(/^[^\\\"]+\\'\\:/, false);\n    else\n      return false;\n  }\n\n  function isIn(state, type) {\n    return (state.stack.length && state.stack[state.stack.length - 1].type == type);\n  }\n\n  function pushStateStack(state, newState) {\n    state.stack.push(newState);\n  }\n\n  function popStateStack(state) {\n    state.stack.pop();\n    var reinstateTokenize = state.stack.length && state.stack[state.stack.length-1].tokenize;\n    state.tokenize = reinstateTokenize || tokenBase;\n  }\n\n  // the interface for the mode API\n  return {\n    startState: function() {\n      return {\n        tokenize: tokenBase,\n        cc: [],\n        stack: []\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      return style;\n    },\n\n    blockCommentStart: \"(:\",\n    blockCommentEnd: \":)\"\n\n  };\n\n});\n\nCodeMirror.defineMIME(\"application/xquery\", \"xquery\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"yaml\", function() {\n\n  var cons = ['true', 'false', 'on', 'off', 'yes', 'no'];\n  var keywordRegex = new RegExp(\"\\\\b((\"+cons.join(\")|(\")+\"))$\", 'i');\n\n  return {\n    token: function(stream, state) {\n      var ch = stream.peek();\n      var esc = state.escaped;\n      state.escaped = false;\n      /* comments */\n      if (ch == \"#\" && (stream.pos == 0 || /\\s/.test(stream.string.charAt(stream.pos - 1)))) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      if (stream.match(/^('([^']|\\\\.)*'?|\"([^\"]|\\\\.)*\"?)/))\n        return \"string\";\n\n      if (state.literal && stream.indentation() > state.keyCol) {\n        stream.skipToEnd(); return \"string\";\n      } else if (state.literal) { state.literal = false; }\n      if (stream.sol()) {\n        state.keyCol = 0;\n        state.pair = false;\n        state.pairStart = false;\n        /* document start */\n        if(stream.match(/---/)) { return \"def\"; }\n        /* document end */\n        if (stream.match(/\\.\\.\\./)) { return \"def\"; }\n        /* array list item */\n        if (stream.match(/\\s*-\\s+/)) { return 'meta'; }\n      }\n      /* inline pairs/lists */\n      if (stream.match(/^(\\{|\\}|\\[|\\])/)) {\n        if (ch == '{')\n          state.inlinePairs++;\n        else if (ch == '}')\n          state.inlinePairs--;\n        else if (ch == '[')\n          state.inlineList++;\n        else\n          state.inlineList--;\n        return 'meta';\n      }\n\n      /* list seperator */\n      if (state.inlineList > 0 && !esc && ch == ',') {\n        stream.next();\n        return 'meta';\n      }\n      /* pairs seperator */\n      if (state.inlinePairs > 0 && !esc && ch == ',') {\n        state.keyCol = 0;\n        state.pair = false;\n        state.pairStart = false;\n        stream.next();\n        return 'meta';\n      }\n\n      /* start of value of a pair */\n      if (state.pairStart) {\n        /* block literals */\n        if (stream.match(/^\\s*(\\||\\>)\\s*/)) { state.literal = true; return 'meta'; };\n        /* references */\n        if (stream.match(/^\\s*(\\&|\\*)[a-z0-9\\._-]+\\b/i)) { return 'variable-2'; }\n        /* numbers */\n        if (state.inlinePairs == 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?$/)) { return 'number'; }\n        if (state.inlinePairs > 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?(?=(,|}))/)) { return 'number'; }\n        /* keywords */\n        if (stream.match(keywordRegex)) { return 'keyword'; }\n      }\n\n      /* pairs (associative arrays) -> key */\n      if (!state.pair && stream.match(/^\\s*(?:[,\\[\\]{}&*!|>'\"%@`][^\\s'\":]|[^,\\[\\]{}#&*!|>'\"%@`])[^#]*?(?=\\s*:($|\\s))/)) {\n        state.pair = true;\n        state.keyCol = stream.indentation();\n        return \"atom\";\n      }\n      if (state.pair && stream.match(/^:\\s*/)) { state.pairStart = true; return 'meta'; }\n\n      /* nothing found, continue */\n      state.pairStart = false;\n      state.escaped = (ch == '\\\\');\n      stream.next();\n      return null;\n    },\n    startState: function() {\n      return {\n        pair: false,\n        pairStart: false,\n        keyCol: 0,\n        inlinePairs: 0,\n        inlineList: 0,\n        literal: false,\n        escaped: false\n      };\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-yaml\", \"yaml\");\nCodeMirror.defineMIME(\"text/yaml\", \"yaml\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"go\", function(config) {\n  var indentUnit = config.indentUnit;\n\n  var keywords = {\n    \"break\":true, \"case\":true, \"chan\":true, \"const\":true, \"continue\":true,\n    \"default\":true, \"defer\":true, \"else\":true, \"fallthrough\":true, \"for\":true,\n    \"func\":true, \"go\":true, \"goto\":true, \"if\":true, \"import\":true,\n    \"interface\":true, \"map\":true, \"package\":true, \"range\":true, \"return\":true,\n    \"select\":true, \"struct\":true, \"switch\":true, \"type\":true, \"var\":true,\n    \"bool\":true, \"byte\":true, \"complex64\":true, \"complex128\":true,\n    \"float32\":true, \"float64\":true, \"int8\":true, \"int16\":true, \"int32\":true,\n    \"int64\":true, \"string\":true, \"uint8\":true, \"uint16\":true, \"uint32\":true,\n    \"uint64\":true, \"int\":true, \"uint\":true, \"uintptr\":true, \"error\": true,\n    \"rune\":true\n  };\n\n  var atoms = {\n    \"true\":true, \"false\":true, \"iota\":true, \"nil\":true, \"append\":true,\n    \"cap\":true, \"close\":true, \"complex\":true, \"copy\":true, \"delete\":true, \"imag\":true,\n    \"len\":true, \"make\":true, \"new\":true, \"panic\":true, \"print\":true,\n    \"println\":true, \"real\":true, \"recover\":true\n  };\n\n  var isOperatorChar = /[+\\-*&^%:=<>!|\\/]/;\n\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\" || ch == \"`\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (/[\\d\\.]/.test(ch)) {\n      if (ch == \".\") {\n        stream.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/);\n      } else if (ch == \"0\") {\n        stream.match(/^[xX][0-9a-fA-F]+/) || stream.match(/^0[0-7]+/);\n      } else {\n        stream.match(/^[0-9]*\\.?[0-9]*([eE][\\-+]?[0-9]+)?/);\n      }\n      return \"number\";\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n    var cur = stream.current();\n    if (keywords.propertyIsEnumerable(cur)) {\n      if (cur == \"case\" || cur == \"default\") curPunc = \"case\";\n      return \"keyword\";\n    }\n    if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && quote != \"`\" && next == \"\\\\\";\n      }\n      if (end || !(escaped || quote == \"`\"))\n        state.tokenize = tokenBase;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    return state.context = new Context(state.indented, col, type, null, state.context);\n  }\n  function popContext(state) {\n    if (!state.context.prev) return;\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n        if (ctx.type == \"case\") ctx.type = \"}\";\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"case\") ctx.type = \"case\";\n      else if (curPunc == \"}\" && ctx.type == \"}\") popContext(state);\n      else if (curPunc == ctx.type) popContext(state);\n      state.startOfLine = false;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null) return CodeMirror.Pass;\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      if (ctx.type == \"case\" && /^(?:case|default)\\b/.test(textAfter)) {\n        state.context.type = \"}\";\n        return ctx.indented;\n      }\n      var closing = firstChar == ctx.type;\n      if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"{}):\",\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n    fold: \"brace\",\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-go\", \"go\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"groovy\", function(config) {\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n  var keywords = words(\n    \"abstract as assert boolean break byte case catch char class const continue def default \" +\n    \"do double else enum extends final finally float for goto if implements import in \" +\n    \"instanceof int interface long native new package private protected public return \" +\n    \"short static strictfp super switch synchronized threadsafe throw throws trait transient \" +\n    \"try void volatile while\");\n  var blockKeywords = words(\"catch class def do else enum finally for if interface switch trait try while\");\n  var standaloneKeywords = words(\"return break continue\");\n  var atoms = words(\"null true false this\");\n\n  var curPunc;\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\") {\n      return startString(ch, stream, state);\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\w\\.]/);\n      if (stream.eat(/eE/)) { stream.eat(/\\+\\-/); stream.eatWhile(/\\d/); }\n      return \"number\";\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize.push(tokenComment);\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      if (expectExpression(state.lastToken, false)) {\n        return startString(ch, stream, state);\n      }\n    }\n    if (ch == \"-\" && stream.eat(\">\")) {\n      curPunc = \"->\";\n      return null;\n    }\n    if (/[+\\-*&%=<>!?|\\/~]/.test(ch)) {\n      stream.eatWhile(/[+\\-*&%=<>|~]/);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_]/);\n    if (ch == \"@\") { stream.eatWhile(/[\\w\\$_\\.]/); return \"meta\"; }\n    if (state.lastToken == \".\") return \"property\";\n    if (stream.eat(\":\")) { curPunc = \"proplabel\"; return \"property\"; }\n    var cur = stream.current();\n    if (atoms.propertyIsEnumerable(cur)) { return \"atom\"; }\n    if (keywords.propertyIsEnumerable(cur)) {\n      if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n      else if (standaloneKeywords.propertyIsEnumerable(cur)) curPunc = \"standalone\";\n      return \"keyword\";\n    }\n    return \"variable\";\n  }\n  tokenBase.isBase = true;\n\n  function startString(quote, stream, state) {\n    var tripleQuoted = false;\n    if (quote != \"/\" && stream.eat(quote)) {\n      if (stream.eat(quote)) tripleQuoted = true;\n      else return \"string\";\n    }\n    function t(stream, state) {\n      var escaped = false, next, end = !tripleQuoted;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {\n          if (!tripleQuoted) { break; }\n          if (stream.match(quote + quote)) { end = true; break; }\n        }\n        if (quote == '\"' && next == \"$\" && !escaped && stream.eat(\"{\")) {\n          state.tokenize.push(tokenBaseUntilBrace());\n          return \"string\";\n        }\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end) state.tokenize.pop();\n      return \"string\";\n    }\n    state.tokenize.push(t);\n    return t(stream, state);\n  }\n\n  function tokenBaseUntilBrace() {\n    var depth = 1;\n    function t(stream, state) {\n      if (stream.peek() == \"}\") {\n        depth--;\n        if (depth == 0) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        }\n      } else if (stream.peek() == \"{\") {\n        depth++;\n      }\n      return tokenBase(stream, state);\n    }\n    t.isBase = true;\n    return t;\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize.pop();\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function expectExpression(last, newline) {\n    return !last || last == \"operator\" || last == \"->\" || /[\\.\\[\\{\\(,;:]/.test(last) ||\n      last == \"newstatement\" || last == \"keyword\" || last == \"proplabel\" ||\n      (last == \"standalone\" && !newline);\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    return state.context = new Context(state.indented, col, type, null, state.context);\n  }\n  function popContext(state) {\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: [tokenBase],\n        context: new Context((basecolumn || 0) - config.indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true,\n        lastToken: null\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n        // Automatic semicolon insertion\n        if (ctx.type == \"statement\" && !expectExpression(state.lastToken, true)) {\n          popContext(state); ctx = state.context;\n        }\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      var style = state.tokenize[state.tokenize.length-1](stream, state);\n      if (style == \"comment\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state);\n      // Handle indentation for {x -> \\n ... }\n      else if (curPunc == \"->\" && ctx.type == \"statement\" && ctx.prev.type == \"}\") {\n        popContext(state);\n        state.context.align = false;\n      }\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (ctx.type == \"}\" || ctx.type == \"top\" || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n        pushContext(state, stream.column(), \"statement\");\n      state.startOfLine = false;\n      state.lastToken = curPunc || style;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (!state.tokenize[state.tokenize.length-1].isBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0), ctx = state.context;\n      if (ctx.type == \"statement\" && !expectExpression(state.lastToken, true)) ctx = ctx.prev;\n      var closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : config.indentUnit);\n      else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indented + (closing ? 0 : config.indentUnit);\n    },\n\n    electricChars: \"{}\",\n    closeBrackets: {triples: \"'\\\"\"},\n    fold: \"brace\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-groovy\", \"groovy\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"nginx\", function(config) {\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  var keywords = words(\n    /* ngxDirectiveControl */ \"break return rewrite set\" +\n    /* ngxDirective */ \" accept_mutex accept_mutex_delay access_log add_after_body add_before_body add_header addition_types aio alias allow ancient_browser ancient_browser_value auth_basic auth_basic_user_file auth_http auth_http_header auth_http_timeout autoindex autoindex_exact_size autoindex_localtime charset charset_types client_body_buffer_size client_body_in_file_only client_body_in_single_buffer client_body_temp_path client_body_timeout client_header_buffer_size client_header_timeout client_max_body_size connection_pool_size create_full_put_path daemon dav_access dav_methods debug_connection debug_points default_type degradation degrade deny devpoll_changes devpoll_events directio directio_alignment empty_gif env epoll_events error_log eventport_events expires fastcgi_bind fastcgi_buffer_size fastcgi_buffers fastcgi_busy_buffers_size fastcgi_cache fastcgi_cache_key fastcgi_cache_methods fastcgi_cache_min_uses fastcgi_cache_path fastcgi_cache_use_stale fastcgi_cache_valid fastcgi_catch_stderr fastcgi_connect_timeout fastcgi_hide_header fastcgi_ignore_client_abort fastcgi_ignore_headers fastcgi_index fastcgi_intercept_errors fastcgi_max_temp_file_size fastcgi_next_upstream fastcgi_param fastcgi_pass_header fastcgi_pass_request_body fastcgi_pass_request_headers fastcgi_read_timeout fastcgi_send_lowat fastcgi_send_timeout fastcgi_split_path_info fastcgi_store fastcgi_store_access fastcgi_temp_file_write_size fastcgi_temp_path fastcgi_upstream_fail_timeout fastcgi_upstream_max_fails flv geoip_city geoip_country google_perftools_profiles gzip gzip_buffers gzip_comp_level gzip_disable gzip_hash gzip_http_version gzip_min_length gzip_no_buffer gzip_proxied gzip_static gzip_types gzip_vary gzip_window if_modified_since ignore_invalid_headers image_filter image_filter_buffer image_filter_jpeg_quality image_filter_transparency imap_auth imap_capabilities imap_client_buffer index ip_hash keepalive_requests keepalive_timeout kqueue_changes kqueue_events large_client_header_buffers limit_conn limit_conn_log_level limit_rate limit_rate_after limit_req limit_req_log_level limit_req_zone limit_zone lingering_time lingering_timeout lock_file log_format log_not_found log_subrequest map_hash_bucket_size map_hash_max_size master_process memcached_bind memcached_buffer_size memcached_connect_timeout memcached_next_upstream memcached_read_timeout memcached_send_timeout memcached_upstream_fail_timeout memcached_upstream_max_fails merge_slashes min_delete_depth modern_browser modern_browser_value msie_padding msie_refresh multi_accept open_file_cache open_file_cache_errors open_file_cache_events open_file_cache_min_uses open_file_cache_valid open_log_file_cache output_buffers override_charset perl perl_modules perl_require perl_set pid pop3_auth pop3_capabilities port_in_redirect postpone_gzipping postpone_output protocol proxy proxy_bind proxy_buffer proxy_buffer_size proxy_buffering proxy_buffers proxy_busy_buffers_size proxy_cache proxy_cache_key proxy_cache_methods proxy_cache_min_uses proxy_cache_path proxy_cache_use_stale proxy_cache_valid proxy_connect_timeout proxy_headers_hash_bucket_size proxy_headers_hash_max_size proxy_hide_header proxy_ignore_client_abort proxy_ignore_headers proxy_intercept_errors proxy_max_temp_file_size proxy_method proxy_next_upstream proxy_pass_error_message proxy_pass_header proxy_pass_request_body proxy_pass_request_headers proxy_read_timeout proxy_redirect proxy_send_lowat proxy_send_timeout proxy_set_body proxy_set_header proxy_ssl_session_reuse proxy_store proxy_store_access proxy_temp_file_write_size proxy_temp_path proxy_timeout proxy_upstream_fail_timeout proxy_upstream_max_fails random_index read_ahead real_ip_header recursive_error_pages request_pool_size reset_timedout_connection resolver resolver_timeout rewrite_log rtsig_overflow_events rtsig_overflow_test rtsig_overflow_threshold rtsig_signo satisfy secure_link_secret send_lowat send_timeout sendfile sendfile_max_chunk server_name_in_redirect server_names_hash_bucket_size server_names_hash_max_size server_tokens set_real_ip_from smtp_auth smtp_capabilities smtp_client_buffer smtp_greeting_delay so_keepalive source_charset ssi ssi_ignore_recycled_buffers ssi_min_file_chunk ssi_silent_errors ssi_types ssi_value_length ssl ssl_certificate ssl_certificate_key ssl_ciphers ssl_client_certificate ssl_crl ssl_dhparam ssl_engine ssl_prefer_server_ciphers ssl_protocols ssl_session_cache ssl_session_timeout ssl_verify_client ssl_verify_depth starttls stub_status sub_filter sub_filter_once sub_filter_types tcp_nodelay tcp_nopush thread_stack_size timeout timer_resolution types_hash_bucket_size types_hash_max_size underscores_in_headers uninitialized_variable_warn use user userid userid_domain userid_expires userid_mark userid_name userid_p3p userid_path userid_service valid_referers variables_hash_bucket_size variables_hash_max_size worker_connections worker_cpu_affinity worker_priority worker_processes worker_rlimit_core worker_rlimit_nofile worker_rlimit_sigpending worker_threads working_directory xclient xml_entities xslt_stylesheet xslt_typesdrew@li229-23\"\n    );\n\n  var keywords_block = words(\n    /* ngxDirectiveBlock */ \"http mail events server types location upstream charset_map limit_except if geo map\"\n    );\n\n  var keywords_important = words(\n    /* ngxDirectiveImportant */ \"include root server server_name listen internal proxy_pass memcached_pass fastcgi_pass try_files\"\n    );\n\n  var indentUnit = config.indentUnit, type;\n  function ret(style, tp) {type = tp; return style;}\n\n  function tokenBase(stream, state) {\n\n\n    stream.eatWhile(/[\\w\\$_]/);\n\n    var cur = stream.current();\n\n\n    if (keywords.propertyIsEnumerable(cur)) {\n      return \"keyword\";\n    }\n    else if (keywords_block.propertyIsEnumerable(cur)) {\n      return \"variable-2\";\n    }\n    else if (keywords_important.propertyIsEnumerable(cur)) {\n      return \"string-2\";\n    }\n    /**/\n\n    var ch = stream.next();\n    if (ch == \"@\") {stream.eatWhile(/[\\w\\\\\\-]/); return ret(\"meta\", stream.current());}\n    else if (ch == \"/\" && stream.eat(\"*\")) {\n      state.tokenize = tokenCComment;\n      return tokenCComment(stream, state);\n    }\n    else if (ch == \"<\" && stream.eat(\"!\")) {\n      state.tokenize = tokenSGMLComment;\n      return tokenSGMLComment(stream, state);\n    }\n    else if (ch == \"=\") ret(null, \"compare\");\n    else if ((ch == \"~\" || ch == \"|\") && stream.eat(\"=\")) return ret(null, \"compare\");\n    else if (ch == \"\\\"\" || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    else if (ch == \"#\") {\n      stream.skipToEnd();\n      return ret(\"comment\", \"comment\");\n    }\n    else if (ch == \"!\") {\n      stream.match(/^\\s*\\w*/);\n      return ret(\"keyword\", \"important\");\n    }\n    else if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\w.%]/);\n      return ret(\"number\", \"unit\");\n    }\n    else if (/[,.+>*\\/]/.test(ch)) {\n      return ret(null, \"select-op\");\n    }\n    else if (/[;{}:\\[\\]]/.test(ch)) {\n      return ret(null, ch);\n    }\n    else {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"variable\", \"variable\");\n    }\n  }\n\n  function tokenCComment(stream, state) {\n    var maybeEnd = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (maybeEnd && ch == \"/\") {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenSGMLComment(stream, state) {\n    var dashes = 0, ch;\n    while ((ch = stream.next()) != null) {\n      if (dashes >= 2 && ch == \">\") {\n        state.tokenize = tokenBase;\n        break;\n      }\n      dashes = (ch == \"-\") ? dashes + 1 : 0;\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped)\n          break;\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      if (!escaped) state.tokenize = tokenBase;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  return {\n    startState: function(base) {\n      return {tokenize: tokenBase,\n              baseIndent: base || 0,\n              stack: []};\n    },\n\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n\n      var context = state.stack[state.stack.length-1];\n      if (type == \"hash\" && context == \"rule\") style = \"atom\";\n      else if (style == \"variable\") {\n        if (context == \"rule\") style = \"number\";\n        else if (!context || context == \"@media{\") style = \"tag\";\n      }\n\n      if (context == \"rule\" && /^[\\{\\};]$/.test(type))\n        state.stack.pop();\n      if (type == \"{\") {\n        if (context == \"@media\") state.stack[state.stack.length-1] = \"@media{\";\n        else state.stack.push(\"{\");\n      }\n      else if (type == \"}\") state.stack.pop();\n      else if (type == \"@media\") state.stack.push(\"@media\");\n      else if (context == \"{\" && type != \"comment\") state.stack.push(\"rule\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      var n = state.stack.length;\n      if (/^\\}/.test(textAfter))\n        n -= state.stack[state.stack.length-1] == \"rule\" ? 2 : 1;\n      return state.baseIndent + n * indentUnit;\n    },\n\n    electricChars: \"}\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-nginx-conf\", \"nginx\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"octave\", function() {\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var singleOperators = new RegExp(\"^[\\\\+\\\\-\\\\*/&|\\\\^~<>!@'\\\\\\\\]\");\n  var singleDelimiters = new RegExp('^[\\\\(\\\\[\\\\{\\\\},:=;]');\n  var doubleOperators = new RegExp(\"^((==)|(~=)|(<=)|(>=)|(<<)|(>>)|(\\\\.[\\\\+\\\\-\\\\*/\\\\^\\\\\\\\]))\");\n  var doubleDelimiters = new RegExp(\"^((!=)|(\\\\+=)|(\\\\-=)|(\\\\*=)|(/=)|(&=)|(\\\\|=)|(\\\\^=))\");\n  var tripleDelimiters = new RegExp(\"^((>>=)|(<<=))\");\n  var expressionEnd = new RegExp(\"^[\\\\]\\\\)]\");\n  var identifiers = new RegExp(\"^[_A-Za-z\\xa1-\\uffff][_A-Za-z0-9\\xa1-\\uffff]*\");\n\n  var builtins = wordRegexp([\n    'error', 'eval', 'function', 'abs', 'acos', 'atan', 'asin', 'cos',\n    'cosh', 'exp', 'log', 'prod', 'sum', 'log10', 'max', 'min', 'sign', 'sin', 'sinh',\n    'sqrt', 'tan', 'reshape', 'break', 'zeros', 'default', 'margin', 'round', 'ones',\n    'rand', 'syn', 'ceil', 'floor', 'size', 'clear', 'zeros', 'eye', 'mean', 'std', 'cov',\n    'det', 'eig', 'inv', 'norm', 'rank', 'trace', 'expm', 'logm', 'sqrtm', 'linspace', 'plot',\n    'title', 'xlabel', 'ylabel', 'legend', 'text', 'grid', 'meshgrid', 'mesh', 'num2str',\n    'fft', 'ifft', 'arrayfun', 'cellfun', 'input', 'fliplr', 'flipud', 'ismember'\n  ]);\n\n  var keywords = wordRegexp([\n    'return', 'case', 'switch', 'else', 'elseif', 'end', 'endif', 'endfunction',\n    'if', 'otherwise', 'do', 'for', 'while', 'try', 'catch', 'classdef', 'properties', 'events',\n    'methods', 'global', 'persistent', 'endfor', 'endwhile', 'printf', 'sprintf', 'disp', 'until',\n    'continue', 'pkg'\n  ]);\n\n\n  // tokenizers\n  function tokenTranspose(stream, state) {\n    if (!stream.sol() && stream.peek() === '\\'') {\n      stream.next();\n      state.tokenize = tokenBase;\n      return 'operator';\n    }\n    state.tokenize = tokenBase;\n    return tokenBase(stream, state);\n  }\n\n\n  function tokenComment(stream, state) {\n    if (stream.match(/^.*%}/)) {\n      state.tokenize = tokenBase;\n      return 'comment';\n    };\n    stream.skipToEnd();\n    return 'comment';\n  }\n\n  function tokenBase(stream, state) {\n    // whitespaces\n    if (stream.eatSpace()) return null;\n\n    // Handle one line Comments\n    if (stream.match('%{')){\n      state.tokenize = tokenComment;\n      stream.skipToEnd();\n      return 'comment';\n    }\n\n    if (stream.match(/^[%#]/)){\n      stream.skipToEnd();\n      return 'comment';\n    }\n\n    // Handle Number Literals\n    if (stream.match(/^[0-9\\.+-]/, false)) {\n      if (stream.match(/^[+-]?0x[0-9a-fA-F]+[ij]?/)) {\n        stream.tokenize = tokenBase;\n        return 'number'; };\n      if (stream.match(/^[+-]?\\d*\\.\\d+([EeDd][+-]?\\d+)?[ij]?/)) { return 'number'; };\n      if (stream.match(/^[+-]?\\d+([EeDd][+-]?\\d+)?[ij]?/)) { return 'number'; };\n    }\n    if (stream.match(wordRegexp(['nan','NaN','inf','Inf']))) { return 'number'; };\n\n    // Handle Strings\n    var m = stream.match(/^\"(?:[^\"]|\"\")*(\"|$)/) || stream.match(/^'(?:[^']|'')*('|$)/)\n    if (m) { return m[1] ? 'string' : \"string error\"; }\n\n    // Handle words\n    if (stream.match(keywords)) { return 'keyword'; } ;\n    if (stream.match(builtins)) { return 'builtin'; } ;\n    if (stream.match(identifiers)) { return 'variable'; } ;\n\n    if (stream.match(singleOperators) || stream.match(doubleOperators)) { return 'operator'; };\n    if (stream.match(singleDelimiters) || stream.match(doubleDelimiters) || stream.match(tripleDelimiters)) { return null; };\n\n    if (stream.match(expressionEnd)) {\n      state.tokenize = tokenTranspose;\n      return null;\n    };\n\n\n    // Handle non-detected items\n    stream.next();\n    return 'error';\n  };\n\n\n  return {\n    startState: function() {\n      return {\n        tokenize: tokenBase\n      };\n    },\n\n    token: function(stream, state) {\n      var style = state.tokenize(stream, state);\n      if (style === 'number' || style === 'variable'){\n        state.tokenize = tokenTranspose;\n      }\n      return style;\n    },\n\n    lineComment: '%',\n\n    fold: 'indent'\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-octave\", \"octave\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction Context(indented, column, type, info, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.info = info;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type, info) {\n  var indent = state.indented;\n  if (state.context && state.context.type == \"statement\" && type != \"statement\")\n    indent = state.context.indented;\n  return state.context = new Context(indent, col, type, info, null, state.context);\n}\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\nfunction typeBefore(stream, state, pos) {\n  if (state.prevToken == \"variable\" || state.prevToken == \"variable-3\") return true;\n  if (/\\S(?:[^- ]>|[*\\]])\\s*$|\\*$/.test(stream.string.slice(0, pos))) return true;\n  if (state.typeAtEndOfLine && stream.column() == stream.indentation()) return true;\n}\n\nfunction isTopScope(context) {\n  for (;;) {\n    if (!context || context.type == \"top\") return true;\n    if (context.type == \"}\" && context.prev.info != \"namespace\") return false;\n    context = context.prev;\n  }\n}\n\nCodeMirror.defineMode(\"clike\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit,\n      statementIndentUnit = parserConfig.statementIndentUnit || indentUnit,\n      dontAlignCalls = parserConfig.dontAlignCalls,\n      keywords = parserConfig.keywords || {},\n      types = parserConfig.types || {},\n      builtin = parserConfig.builtin || {},\n      blockKeywords = parserConfig.blockKeywords || {},\n      defKeywords = parserConfig.defKeywords || {},\n      atoms = parserConfig.atoms || {},\n      hooks = parserConfig.hooks || {},\n      multiLineStrings = parserConfig.multiLineStrings,\n      indentStatements = parserConfig.indentStatements !== false,\n      indentSwitch = parserConfig.indentSwitch !== false,\n      namespaceSeparator = parserConfig.namespaceSeparator,\n      isPunctuationChar = parserConfig.isPunctuationChar || /[\\[\\]{}\\(\\),;\\:\\.]/,\n      numberStart = parserConfig.numberStart || /[\\d\\.]/,\n      number = parserConfig.number || /^(?:0x[a-f\\d]+|0b[01]+|(?:\\d+\\.?\\d*|\\.\\d+)(?:e[-+]?\\d+)?)(u|ll?|l|f)?/i,\n      isOperatorChar = parserConfig.isOperatorChar || /[+\\-*&%=<>!?|\\/]/,\n      isIdentifierChar = parserConfig.isIdentifierChar || /[\\w\\$_\\xa1-\\uffff]/;\n\n  var curPunc, isDefKeyword;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (isPunctuationChar.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (numberStart.test(ch)) {\n      stream.backUp(1)\n      if (stream.match(number)) return \"number\"\n      stream.next()\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      while (!stream.match(/^\\/[\\/*]/, false) && stream.eat(isOperatorChar)) {}\n      return \"operator\";\n    }\n    stream.eatWhile(isIdentifierChar);\n    if (namespaceSeparator) while (stream.match(namespaceSeparator))\n      stream.eatWhile(isIdentifierChar);\n\n    var cur = stream.current();\n    if (contains(keywords, cur)) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      if (contains(defKeywords, cur)) isDefKeyword = true;\n      return \"keyword\";\n    }\n    if (contains(types, cur)) return \"variable-3\";\n    if (contains(builtin, cur)) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      return \"builtin\";\n    }\n    if (contains(atoms, cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = null;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function maybeEOL(stream, state) {\n    if (parserConfig.typeFirstDefinitions && stream.eol() && isTopScope(state.context))\n      state.typeAtEndOfLine = typeBefore(stream, state, stream.pos)\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", null, false),\n        indented: 0,\n        startOfLine: true,\n        prevToken: null\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) { maybeEOL(stream, state); return null; }\n      curPunc = isDefKeyword = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if (curPunc == \";\" || curPunc == \":\" || (curPunc == \",\" && stream.match(/^\\s*(?:\\/\\/.*)?$/, false)))\n        while (state.context.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (indentStatements &&\n               (((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != \";\") ||\n                (ctx.type == \"statement\" && curPunc == \"newstatement\"))) {\n        pushContext(state, stream.column(), \"statement\", stream.current());\n      }\n\n      if (style == \"variable\" &&\n          ((state.prevToken == \"def\" ||\n            (parserConfig.typeFirstDefinitions && typeBefore(stream, state, stream.start) &&\n             isTopScope(state.context) && stream.match(/^\\s*\\(/, false)))))\n        style = \"def\";\n\n      if (hooks.token) {\n        var result = hooks.token(stream, state, style);\n        if (result !== undefined) style = result;\n      }\n\n      if (style == \"def\" && parserConfig.styleDefs === false) style = \"variable\";\n\n      state.startOfLine = false;\n      state.prevToken = isDefKeyword ? \"def\" : style || curPunc;\n      maybeEOL(stream, state);\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null || state.typeAtEndOfLine) return CodeMirror.Pass;\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n      if (parserConfig.dontIndentStatements)\n        while (ctx.type == \"statement\" && parserConfig.dontIndentStatements.test(ctx.info))\n          ctx = ctx.prev\n      if (hooks.indent) {\n        var hook = hooks.indent(state, ctx, textAfter);\n        if (typeof hook == \"number\") return hook\n      }\n      var closing = firstChar == ctx.type;\n      var switchBlock = ctx.prev && ctx.prev.info == \"switch\";\n      if (parserConfig.allmanIndentation && /[{(]/.test(firstChar)) {\n        while (ctx.type != \"top\" && ctx.type != \"}\") ctx = ctx.prev\n        return ctx.indented\n      }\n      if (ctx.type == \"statement\")\n        return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit);\n      if (ctx.align && (!dontAlignCalls || ctx.type != \")\"))\n        return ctx.column + (closing ? 0 : 1);\n      if (ctx.type == \")\" && !closing)\n        return ctx.indented + statementIndentUnit;\n\n      return ctx.indented + (closing ? 0 : indentUnit) +\n        (!closing && switchBlock && !/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 0);\n    },\n\n    electricInput: indentSwitch ? /^\\s*(?:case .*?:|default:|\\{\\}?|\\})$/ : /^\\s*[{}]$/,\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\",\n    fold: \"brace\"\n  };\n});\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n  function contains(words, word) {\n    if (typeof words === \"function\") {\n      return words(word);\n    } else {\n      return words.propertyIsEnumerable(word);\n    }\n  }\n  var cKeywords = \"auto if break case register continue return default do sizeof \" +\n    \"static else struct switch extern typedef union for goto while enum const volatile\";\n  var cTypes = \"int long char short double float unsigned signed void size_t ptrdiff_t\";\n\n  function cppHook(stream, state) {\n    if (!state.startOfLine) return false\n    for (var ch, next = null; ch = stream.peek();) {\n      if (ch == \"\\\\\" && stream.match(/^.$/)) {\n        next = cppHook\n        break\n      } else if (ch == \"/\" && stream.match(/^\\/[\\/\\*]/, false)) {\n        break\n      }\n      stream.next()\n    }\n    state.tokenize = next\n    return \"meta\"\n  }\n\n  function pointerHook(_stream, state) {\n    if (state.prevToken == \"variable-3\") return \"variable-3\";\n    return false;\n  }\n\n  function cpp14Literal(stream) {\n    stream.eatWhile(/[\\w\\.']/);\n    return \"number\";\n  }\n\n  function cpp11StringHook(stream, state) {\n    stream.backUp(1);\n    // Raw strings.\n    if (stream.match(/(R|u8R|uR|UR|LR)/)) {\n      var match = stream.match(/\"([^\\s\\\\()]{0,16})\\(/);\n      if (!match) {\n        return false;\n      }\n      state.cpp11RawStringDelim = match[1];\n      state.tokenize = tokenRawString;\n      return tokenRawString(stream, state);\n    }\n    // Unicode strings/chars.\n    if (stream.match(/(u8|u|U|L)/)) {\n      if (stream.match(/[\"']/, /* eat */ false)) {\n        return \"string\";\n      }\n      return false;\n    }\n    // Ignore this hook.\n    stream.next();\n    return false;\n  }\n\n  function cppLooksLikeConstructor(word) {\n    var lastTwo = /(\\w+)::~?(\\w+)$/.exec(word);\n    return lastTwo && lastTwo[1] == lastTwo[2];\n  }\n\n  // C#-style strings where \"\" escapes a quote.\n  function tokenAtString(stream, state) {\n    var next;\n    while ((next = stream.next()) != null) {\n      if (next == '\"' && !stream.eat('\"')) {\n        state.tokenize = null;\n        break;\n      }\n    }\n    return \"string\";\n  }\n\n  // C++11 raw string literal is <prefix>\"<delim>( anything )<delim>\", where\n  // <delim> can be a string up to 16 characters long.\n  function tokenRawString(stream, state) {\n    // Escape characters that have special regex meanings.\n    var delim = state.cpp11RawStringDelim.replace(/[^\\w\\s]/g, '\\\\$&');\n    var match = stream.match(new RegExp(\".*?\\\\)\" + delim + '\"'));\n    if (match)\n      state.tokenize = null;\n    else\n      stream.skipToEnd();\n    return \"string\";\n  }\n\n  function def(mimes, mode) {\n    if (typeof mimes == \"string\") mimes = [mimes];\n    var words = [];\n    function add(obj) {\n      if (obj) for (var prop in obj) if (obj.hasOwnProperty(prop))\n        words.push(prop);\n    }\n    add(mode.keywords);\n    add(mode.types);\n    add(mode.builtin);\n    add(mode.atoms);\n    if (words.length) {\n      mode.helperType = mimes[0];\n      CodeMirror.registerHelper(\"hintWords\", mimes[0], words);\n    }\n\n    for (var i = 0; i < mimes.length; ++i)\n      CodeMirror.defineMIME(mimes[i], mode);\n  }\n\n  def([\"text/x-csrc\", \"text/x-c\", \"text/x-chdr\"], {\n    name: \"clike\",\n    keywords: words(cKeywords),\n    types: words(cTypes + \" bool _Complex _Bool float_t double_t intptr_t intmax_t \" +\n                 \"int8_t int16_t int32_t int64_t uintptr_t uintmax_t uint8_t uint16_t \" +\n                 \"uint32_t uint64_t\"),\n    blockKeywords: words(\"case do else for if switch while struct\"),\n    defKeywords: words(\"struct\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"null true false\"),\n    hooks: {\"#\": cppHook, \"*\": pointerHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def([\"text/x-c++src\", \"text/x-c++hdr\"], {\n    name: \"clike\",\n    keywords: words(cKeywords + \" asm dynamic_cast namespace reinterpret_cast try explicit new \" +\n                    \"static_cast typeid catch operator template typename class friend private \" +\n                    \"this using const_cast inline public throw virtual delete mutable protected \" +\n                    \"alignas alignof constexpr decltype nullptr noexcept thread_local final \" +\n                    \"static_assert override\"),\n    types: words(cTypes + \" bool wchar_t\"),\n    blockKeywords: words(\"catch class do else finally for if struct switch try while\"),\n    defKeywords: words(\"class namespace struct enum union\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    dontIndentStatements: /^template$/,\n    isIdentifierChar: /[\\w\\$_~\\xa1-\\uffff]/,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n      \"u\": cpp11StringHook,\n      \"U\": cpp11StringHook,\n      \"L\": cpp11StringHook,\n      \"R\": cpp11StringHook,\n      \"0\": cpp14Literal,\n      \"1\": cpp14Literal,\n      \"2\": cpp14Literal,\n      \"3\": cpp14Literal,\n      \"4\": cpp14Literal,\n      \"5\": cpp14Literal,\n      \"6\": cpp14Literal,\n      \"7\": cpp14Literal,\n      \"8\": cpp14Literal,\n      \"9\": cpp14Literal,\n      token: function(stream, state, style) {\n        if (style == \"variable\" && stream.peek() == \"(\" &&\n            (state.prevToken == \";\" || state.prevToken == null ||\n             state.prevToken == \"}\") &&\n            cppLooksLikeConstructor(stream.current()))\n          return \"def\";\n      }\n    },\n    namespaceSeparator: \"::\",\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-java\", {\n    name: \"clike\",\n    keywords: words(\"abstract assert break case catch class const continue default \" +\n                    \"do else enum extends final finally float for goto if implements import \" +\n                    \"instanceof interface native new package private protected public \" +\n                    \"return static strictfp super switch synchronized this throw throws transient \" +\n                    \"try volatile while @interface\"),\n    types: words(\"byte short int long float double boolean char void Boolean Byte Character Double Float \" +\n                 \"Integer Long Number Object Short String StringBuffer StringBuilder Void\"),\n    blockKeywords: words(\"catch class do else finally for if switch try while\"),\n    defKeywords: words(\"class interface package enum @interface\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+\\.?\\d*|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n    hooks: {\n      \"@\": function(stream) {\n        // Don't match the @interface keyword.\n        if (stream.match('interface', false)) return false;\n\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    },\n    modeProps: {fold: [\"brace\", \"import\"]}\n  });\n\n  def(\"text/x-csharp\", {\n    name: \"clike\",\n    keywords: words(\"abstract as async await base break case catch checked class const continue\" +\n                    \" default delegate do else enum event explicit extern finally fixed for\" +\n                    \" foreach goto if implicit in interface internal is lock namespace new\" +\n                    \" operator out override params private protected public readonly ref return sealed\" +\n                    \" sizeof stackalloc static struct switch this throw try typeof unchecked\" +\n                    \" unsafe using virtual void volatile while add alias ascending descending dynamic from get\" +\n                    \" global group into join let orderby partial remove select set value var yield\"),\n    types: words(\"Action Boolean Byte Char DateTime DateTimeOffset Decimal Double Func\" +\n                 \" Guid Int16 Int32 Int64 Object SByte Single String Task TimeSpan UInt16 UInt32\" +\n                 \" UInt64 bool byte char decimal double short int long object\"  +\n                 \" sbyte float string ushort uint ulong\"),\n    blockKeywords: words(\"catch class do else finally for foreach if struct switch try while\"),\n    defKeywords: words(\"class interface namespace struct var\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    hooks: {\n      \"@\": function(stream, state) {\n        if (stream.eat('\"')) {\n          state.tokenize = tokenAtString;\n          return tokenAtString(stream, state);\n        }\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    }\n  });\n\n  function tokenTripleString(stream, state) {\n    var escaped = false;\n    while (!stream.eol()) {\n      if (!escaped && stream.match('\"\"\"')) {\n        state.tokenize = null;\n        break;\n      }\n      escaped = stream.next() == \"\\\\\" && !escaped;\n    }\n    return \"string\";\n  }\n\n  def(\"text/x-scala\", {\n    name: \"clike\",\n    keywords: words(\n\n      /* scala */\n      \"abstract case catch class def do else extends final finally for forSome if \" +\n      \"implicit import lazy match new null object override package private protected return \" +\n      \"sealed super this throw trait try type val var while with yield _ \" +\n\n      /* package scala */\n      \"assert assume require print println printf readLine readBoolean readByte readShort \" +\n      \"readChar readInt readLong readFloat readDouble\"\n    ),\n    types: words(\n      \"AnyVal App Application Array BufferedIterator BigDecimal BigInt Char Console Either \" +\n      \"Enumeration Equiv Error Exception Fractional Function IndexedSeq Int Integral Iterable \" +\n      \"Iterator List Map Numeric Nil NotNull Option Ordered Ordering PartialFunction PartialOrdering \" +\n      \"Product Proxy Range Responder Seq Serializable Set Specializable Stream StringBuilder \" +\n      \"StringContext Symbol Throwable Traversable TraversableOnce Tuple Unit Vector \" +\n\n      /* package java.lang */\n      \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void\"\n    ),\n    multiLineStrings: true,\n    blockKeywords: words(\"catch class do else finally for forSome if match switch try while\"),\n    defKeywords: words(\"class def object package trait type val var\"),\n    atoms: words(\"true false null\"),\n    indentStatements: false,\n    indentSwitch: false,\n    isOperatorChar: /[+\\-*&%=<>!?|\\/#:@]/,\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '\"': function(stream, state) {\n        if (!stream.match('\"\"')) return false;\n        state.tokenize = tokenTripleString;\n        return state.tokenize(stream, state);\n      },\n      \"'\": function(stream) {\n        stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n        return \"atom\";\n      },\n      \"=\": function(stream, state) {\n        var cx = state.context\n        if (cx.type == \"}\" && cx.align && stream.eat(\">\")) {\n          state.context = new Context(cx.indented, cx.column, cx.type, cx.info, null, cx.prev)\n          return \"operator\"\n        } else {\n          return false\n        }\n      }\n    },\n    modeProps: {closeBrackets: {triples: '\"'}}\n  });\n\n  function tokenKotlinString(tripleString){\n    return function (stream, state) {\n      var escaped = false, next, end = false;\n      while (!stream.eol()) {\n        if (!tripleString && !escaped && stream.match('\"') ) {end = true; break;}\n        if (tripleString && stream.match('\"\"\"')) {end = true; break;}\n        next = stream.next();\n        if(!escaped && next == \"$\" && stream.match('{'))\n          stream.skipTo(\"}\");\n        escaped = !escaped && next == \"\\\\\" && !tripleString;\n      }\n      if (end || !tripleString)\n        state.tokenize = null;\n      return \"string\";\n    }\n  }\n\n  def(\"text/x-kotlin\", {\n    name: \"clike\",\n    keywords: words(\n      /*keywords*/\n      \"package as typealias class interface this super val \" +\n      \"var fun for is in This throw return \" +\n      \"break continue object if else while do try when !in !is as? \" +\n\n      /*soft keywords*/\n      \"file import where by get set abstract enum open inner override private public internal \" +\n      \"protected catch finally out final vararg reified dynamic companion constructor init \" +\n      \"sealed field property receiver param sparam lateinit data inline noinline tailrec \" +\n      \"external annotation crossinline const operator infix suspend\"\n    ),\n    types: words(\n      /* package java.lang */\n      \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void\"\n    ),\n    intendSwitch: false,\n    indentStatements: false,\n    multiLineStrings: true,\n    number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+\\.?\\d*|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n    blockKeywords: words(\"catch class do else finally for if where try while enum\"),\n    defKeywords: words(\"class val var object package interface fun\"),\n    atoms: words(\"true false null this\"),\n    hooks: {\n      '\"': function(stream, state) {\n        state.tokenize = tokenKotlinString(stream.match('\"\"'));\n        return state.tokenize(stream, state);\n      }\n    },\n    modeProps: {closeBrackets: {triples: '\"'}}\n  });\n\n  def([\"x-shader/x-vertex\", \"x-shader/x-fragment\"], {\n    name: \"clike\",\n    keywords: words(\"sampler1D sampler2D sampler3D samplerCube \" +\n                    \"sampler1DShadow sampler2DShadow \" +\n                    \"const attribute uniform varying \" +\n                    \"break continue discard return \" +\n                    \"for while do if else struct \" +\n                    \"in out inout\"),\n    types: words(\"float int bool void \" +\n                 \"vec2 vec3 vec4 ivec2 ivec3 ivec4 bvec2 bvec3 bvec4 \" +\n                 \"mat2 mat3 mat4\"),\n    blockKeywords: words(\"for while do if else struct\"),\n    builtin: words(\"radians degrees sin cos tan asin acos atan \" +\n                    \"pow exp log exp2 sqrt inversesqrt \" +\n                    \"abs sign floor ceil fract mod min max clamp mix step smoothstep \" +\n                    \"length distance dot cross normalize ftransform faceforward \" +\n                    \"reflect refract matrixCompMult \" +\n                    \"lessThan lessThanEqual greaterThan greaterThanEqual \" +\n                    \"equal notEqual any all not \" +\n                    \"texture1D texture1DProj texture1DLod texture1DProjLod \" +\n                    \"texture2D texture2DProj texture2DLod texture2DProjLod \" +\n                    \"texture3D texture3DProj texture3DLod texture3DProjLod \" +\n                    \"textureCube textureCubeLod \" +\n                    \"shadow1D shadow2D shadow1DProj shadow2DProj \" +\n                    \"shadow1DLod shadow2DLod shadow1DProjLod shadow2DProjLod \" +\n                    \"dFdx dFdy fwidth \" +\n                    \"noise1 noise2 noise3 noise4\"),\n    atoms: words(\"true false \" +\n                \"gl_FragColor gl_SecondaryColor gl_Normal gl_Vertex \" +\n                \"gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 \" +\n                \"gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 \" +\n                \"gl_FogCoord gl_PointCoord \" +\n                \"gl_Position gl_PointSize gl_ClipVertex \" +\n                \"gl_FrontColor gl_BackColor gl_FrontSecondaryColor gl_BackSecondaryColor \" +\n                \"gl_TexCoord gl_FogFragCoord \" +\n                \"gl_FragCoord gl_FrontFacing \" +\n                \"gl_FragData gl_FragDepth \" +\n                \"gl_ModelViewMatrix gl_ProjectionMatrix gl_ModelViewProjectionMatrix \" +\n                \"gl_TextureMatrix gl_NormalMatrix gl_ModelViewMatrixInverse \" +\n                \"gl_ProjectionMatrixInverse gl_ModelViewProjectionMatrixInverse \" +\n                \"gl_TexureMatrixTranspose gl_ModelViewMatrixInverseTranspose \" +\n                \"gl_ProjectionMatrixInverseTranspose \" +\n                \"gl_ModelViewProjectionMatrixInverseTranspose \" +\n                \"gl_TextureMatrixInverseTranspose \" +\n                \"gl_NormalScale gl_DepthRange gl_ClipPlane \" +\n                \"gl_Point gl_FrontMaterial gl_BackMaterial gl_LightSource gl_LightModel \" +\n                \"gl_FrontLightModelProduct gl_BackLightModelProduct \" +\n                \"gl_TextureColor gl_EyePlaneS gl_EyePlaneT gl_EyePlaneR gl_EyePlaneQ \" +\n                \"gl_FogParameters \" +\n                \"gl_MaxLights gl_MaxClipPlanes gl_MaxTextureUnits gl_MaxTextureCoords \" +\n                \"gl_MaxVertexAttribs gl_MaxVertexUniformComponents gl_MaxVaryingFloats \" +\n                \"gl_MaxVertexTextureImageUnits gl_MaxTextureImageUnits \" +\n                \"gl_MaxFragmentUniformComponents gl_MaxCombineTextureImageUnits \" +\n                \"gl_MaxDrawBuffers\"),\n    indentSwitch: false,\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-nesc\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \"as atomic async call command component components configuration event generic \" +\n                    \"implementation includes interface module new norace nx_struct nx_union post provides \" +\n                    \"signal task uses abstract extends\"),\n    types: words(cTypes),\n    blockKeywords: words(\"case do else for if switch while struct\"),\n    atoms: words(\"null true false\"),\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-objectivec\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \"inline restrict _Bool _Complex _Imaginary BOOL Class bycopy byref id IMP in \" +\n                    \"inout nil oneway out Protocol SEL self super atomic nonatomic retain copy readwrite readonly\"),\n    types: words(cTypes),\n    atoms: words(\"YES NO NULL NILL ON OFF true false\"),\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$]/);\n        return \"keyword\";\n      },\n      \"#\": cppHook,\n      indent: function(_state, ctx, textAfter) {\n        if (ctx.type == \"statement\" && /^@\\w/.test(textAfter)) return ctx.indented\n      }\n    },\n    modeProps: {fold: \"brace\"}\n  });\n\n  def(\"text/x-squirrel\", {\n    name: \"clike\",\n    keywords: words(\"base break clone continue const default delete enum extends function in class\" +\n                    \" foreach local resume return this throw typeof yield constructor instanceof static\"),\n    types: words(cTypes),\n    blockKeywords: words(\"case catch class else for foreach if switch try while\"),\n    defKeywords: words(\"function local class\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  // Ceylon Strings need to deal with interpolation\n  var stringTokenizer = null;\n  function tokenCeylonString(type) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while (!stream.eol()) {\n        if (!escaped && stream.match('\"') &&\n              (type == \"single\" || stream.match('\"\"'))) {\n          end = true;\n          break;\n        }\n        if (!escaped && stream.match('``')) {\n          stringTokenizer = tokenCeylonString(type);\n          end = true;\n          break;\n        }\n        next = stream.next();\n        escaped = type == \"single\" && !escaped && next == \"\\\\\";\n      }\n      if (end)\n          state.tokenize = null;\n      return \"string\";\n    }\n  }\n\n  def(\"text/x-ceylon\", {\n    name: \"clike\",\n    keywords: words(\"abstracts alias assembly assert assign break case catch class continue dynamic else\" +\n                    \" exists extends finally for function given if import in interface is let module new\" +\n                    \" nonempty object of out outer package return satisfies super switch then this throw\" +\n                    \" try value void while\"),\n    types: function(word) {\n        // In Ceylon all identifiers that start with an uppercase are types\n        var first = word.charAt(0);\n        return (first === first.toUpperCase() && first !== first.toLowerCase());\n    },\n    blockKeywords: words(\"case catch class dynamic else finally for function if interface module new object switch try while\"),\n    defKeywords: words(\"class dynamic function interface module object package value\"),\n    builtin: words(\"abstract actual aliased annotation by default deprecated doc final formal late license\" +\n                   \" native optional sealed see serializable shared suppressWarnings tagged throws variable\"),\n    isPunctuationChar: /[\\[\\]{}\\(\\),;\\:\\.`]/,\n    isOperatorChar: /[+\\-*&%=<>!?|^~:\\/]/,\n    numberStart: /[\\d#$]/,\n    number: /^(?:#[\\da-fA-F_]+|\\$[01_]+|[\\d_]+[kMGTPmunpf]?|[\\d_]+\\.[\\d_]+(?:[eE][-+]?\\d+|[kMGTPmunpf]|)|)/i,\n    multiLineStrings: true,\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null larger smaller equal empty finished\"),\n    indentSwitch: false,\n    styleDefs: false,\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '\"': function(stream, state) {\n          state.tokenize = tokenCeylonString(stream.match('\"\"') ? \"triple\" : \"single\");\n          return state.tokenize(stream, state);\n        },\n      '`': function(stream, state) {\n          if (!stringTokenizer || !stream.match('`')) return false;\n          state.tokenize = stringTokenizer;\n          stringTokenizer = null;\n          return state.tokenize(stream, state);\n        },\n      \"'\": function(stream) {\n        stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n        return \"atom\";\n      },\n      token: function(_stream, state, style) {\n          if ((style == \"variable\" || style == \"variable-3\") &&\n              state.prevToken == \".\") {\n            return \"variable-2\";\n          }\n        }\n    },\n    modeProps: {\n        fold: [\"brace\", \"import\"],\n        closeBrackets: {triples: '\"'}\n    }\n  });\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Swift mode created by Michael Kaminsky https://github.com/mkaminsky11\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd)\n    define([\"../../lib/codemirror\"], mod)\n  else\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n\n  function wordSet(words) {\n    var set = {}\n    for (var i = 0; i < words.length; i++) set[words[i]] = true\n    return set\n  }\n\n  var keywords = wordSet([\"_\",\"var\",\"let\",\"class\",\"enum\",\"extension\",\"import\",\"protocol\",\"struct\",\"func\",\"typealias\",\"associatedtype\",\n                          \"open\",\"public\",\"internal\",\"fileprivate\",\"private\",\"deinit\",\"init\",\"new\",\"override\",\"self\",\"subscript\",\"super\",\n                          \"convenience\",\"dynamic\",\"final\",\"indirect\",\"lazy\",\"required\",\"static\",\"unowned\",\"unowned(safe)\",\"unowned(unsafe)\",\"weak\",\"as\",\"is\",\n                          \"break\",\"case\",\"continue\",\"default\",\"else\",\"fallthrough\",\"for\",\"guard\",\"if\",\"in\",\"repeat\",\"switch\",\"where\",\"while\",\n                          \"defer\",\"return\",\"inout\",\"mutating\",\"nonmutating\",\"catch\",\"do\",\"rethrows\",\"throw\",\"throws\",\"try\",\"didSet\",\"get\",\"set\",\"willSet\",\n                          \"assignment\",\"associativity\",\"infix\",\"left\",\"none\",\"operator\",\"postfix\",\"precedence\",\"precedencegroup\",\"prefix\",\"right\",\n                          \"Any\",\"AnyObject\",\"Type\",\"dynamicType\",\"Self\",\"Protocol\",\"__COLUMN__\",\"__FILE__\",\"__FUNCTION__\",\"__LINE__\"])\n  var definingKeywords = wordSet([\"var\",\"let\",\"class\",\"enum\",\"extension\",\"import\",\"protocol\",\"struct\",\"func\",\"typealias\",\"associatedtype\",\"for\"])\n  var atoms = wordSet([\"true\",\"false\",\"nil\",\"self\",\"super\",\"_\"])\n  var types = wordSet([\"Array\",\"Bool\",\"Character\",\"Dictionary\",\"Double\",\"Float\",\"Int\",\"Int8\",\"Int16\",\"Int32\",\"Int64\",\"Never\",\"Optional\",\"Set\",\"String\",\n                       \"UInt8\",\"UInt16\",\"UInt32\",\"UInt64\",\"Void\"])\n  var operators = \"+-/*%=|&<>~^?!\"\n  var punc = \":;,.(){}[]\"\n  var binary = /^\\-?0b[01][01_]*/\n  var octal = /^\\-?0o[0-7][0-7_]*/\n  var hexadecimal = /^\\-?0x[\\dA-Fa-f][\\dA-Fa-f_]*(?:(?:\\.[\\dA-Fa-f][\\dA-Fa-f_]*)?[Pp]\\-?\\d[\\d_]*)?/\n  var decimal = /^\\-?\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee]\\-?\\d[\\d_]*)?/\n  var identifier = /^\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1/\n  var property = /^\\.(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/\n  var instruction = /^\\#[A-Za-z]+/\n  var attribute = /^@(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/\n  //var regexp = /^\\/(?!\\s)(?:\\/\\/)?(?:\\\\.|[^\\/])+\\//\n\n  function tokenBase(stream, state, prev) {\n    if (stream.sol()) state.indented = stream.indentation()\n    if (stream.eatSpace()) return null\n\n    var ch = stream.peek()\n    if (ch == \"/\") {\n      if (stream.match(\"//\")) {\n        stream.skipToEnd()\n        return \"comment\"\n      }\n      if (stream.match(\"/*\")) {\n        state.tokenize.push(tokenComment)\n        return tokenComment(stream, state)\n      }\n    }\n    if (stream.match(instruction)) return \"builtin\"\n    if (stream.match(attribute)) return \"attribute\"\n    if (stream.match(binary)) return \"number\"\n    if (stream.match(octal)) return \"number\"\n    if (stream.match(hexadecimal)) return \"number\"\n    if (stream.match(decimal)) return \"number\"\n    if (stream.match(property)) return \"property\"\n    if (operators.indexOf(ch) > -1) {\n      stream.next()\n      return \"operator\"\n    }\n    if (punc.indexOf(ch) > -1) {\n      stream.next()\n      stream.match(\"..\")\n      return \"punctuation\"\n    }\n    if (ch == '\"' || ch == \"'\") {\n      stream.next()\n      var tokenize = tokenString(ch)\n      state.tokenize.push(tokenize)\n      return tokenize(stream, state)\n    }\n\n    if (stream.match(identifier)) {\n      var ident = stream.current()\n      if (types.hasOwnProperty(ident)) return \"variable-2\"\n      if (atoms.hasOwnProperty(ident)) return \"atom\"\n      if (keywords.hasOwnProperty(ident)) {\n        if (definingKeywords.hasOwnProperty(ident))\n          state.prev = \"define\"\n        return \"keyword\"\n      }\n      if (prev == \"define\") return \"def\"\n      return \"variable\"\n    }\n\n    stream.next()\n    return null\n  }\n\n  function tokenUntilClosingParen() {\n    var depth = 0\n    return function(stream, state, prev) {\n      var inner = tokenBase(stream, state, prev)\n      if (inner == \"punctuation\") {\n        if (stream.current() == \"(\") ++depth\n        else if (stream.current() == \")\") {\n          if (depth == 0) {\n            stream.backUp(1)\n            state.tokenize.pop()\n            return state.tokenize[state.tokenize.length - 1](stream, state)\n          }\n          else --depth\n        }\n      }\n      return inner\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var ch, escaped = false\n      while (ch = stream.next()) {\n        if (escaped) {\n          if (ch == \"(\") {\n            state.tokenize.push(tokenUntilClosingParen())\n            return \"string\"\n          }\n          escaped = false\n        } else if (ch == quote) {\n          break\n        } else {\n          escaped = ch == \"\\\\\"\n        }\n      }\n      state.tokenize.pop()\n      return \"string\"\n    }\n  }\n\n  function tokenComment(stream, state) {\n    stream.match(/^(?:[^*]|\\*(?!\\/))*/)\n    if (stream.match(\"*/\")) state.tokenize.pop()\n    return \"comment\"\n  }\n\n  function Context(prev, align, indented) {\n    this.prev = prev\n    this.align = align\n    this.indented = indented\n  }\n\n  function pushContext(state, stream) {\n    var align = stream.match(/^\\s*($|\\/[\\/\\*])/, false) ? null : stream.column() + 1\n    state.context = new Context(state.context, align, state.indented)\n  }\n\n  function popContext(state) {\n    if (state.context) {\n      state.indented = state.context.indented\n      state.context = state.context.prev\n    }\n  }\n\n  CodeMirror.defineMode(\"swift\", function(config) {\n    return {\n      startState: function() {\n        return {\n          prev: null,\n          context: null,\n          indented: 0,\n          tokenize: []\n        }\n      },\n\n      token: function(stream, state) {\n        var prev = state.prev\n        state.prev = null\n        var tokenize = state.tokenize[state.tokenize.length - 1] || tokenBase\n        var style = tokenize(stream, state, prev)\n        if (!style || style == \"comment\") state.prev = prev\n        else if (!state.prev) state.prev = style\n\n        if (style == \"punctuation\") {\n          var bracket = /[\\(\\[\\{]|([\\]\\)\\}])/.exec(stream.current())\n          if (bracket) (bracket[1] ? popContext : pushContext)(state, stream)\n        }\n\n        return style\n      },\n\n      indent: function(state, textAfter) {\n        var cx = state.context\n        if (!cx) return 0\n        var closing = /^[\\]\\}\\)]/.test(textAfter)\n        if (cx.align != null) return cx.align - (closing ? 1 : 0)\n        return cx.indented + (closing ? 0 : config.indentUnit)\n      },\n\n      electricInput: /^\\s*[\\)\\}\\]]$/,\n\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      fold: \"brace\",\n      closeBrackets: \"()[]{}''\\\"\\\"``\"\n    }\n  })\n\n  CodeMirror.defineMIME(\"text/x-swift\",\"swift\")\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.registerHelper(\"wordChars\", \"r\", /[\\w.]/);\n\nCodeMirror.defineMode(\"r\", function(config) {\n  function wordObj(str) {\n    var words = str.split(\" \"), res = {};\n    for (var i = 0; i < words.length; ++i) res[words[i]] = true;\n    return res;\n  }\n  var atoms = wordObj(\"NULL NA Inf NaN NA_integer_ NA_real_ NA_complex_ NA_character_\");\n  var builtins = wordObj(\"list quote bquote eval return call parse deparse\");\n  var keywords = wordObj(\"if else repeat while function for in next break\");\n  var blockkeywords = wordObj(\"if else repeat while function for\");\n  var opChars = /[+\\-*\\/^<>=!&|~$:]/;\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    curPunc = null;\n    var ch = stream.next();\n    if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"0\" && stream.eat(\"x\")) {\n      stream.eatWhile(/[\\da-f]/i);\n      return \"number\";\n    } else if (ch == \".\" && stream.eat(/\\d/)) {\n      stream.match(/\\d*(?:e[+\\-]?\\d+)?/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/\\d*(?:\\.\\d+)?(?:e[+\\-]\\d+)?L?/);\n      return \"number\";\n    } else if (ch == \"'\" || ch == '\"') {\n      state.tokenize = tokenString(ch);\n      return \"string\";\n    } else if (ch == \"`\") {\n      stream.match(/[^`]+`/);\n      return \"variable-3\";\n    } else if (ch == \".\" && stream.match(/.[.\\d]+/)) {\n      return \"keyword\";\n    } else if (/[\\w\\.]/.test(ch) && ch != \"_\") {\n      stream.eatWhile(/[\\w\\.]/);\n      var word = stream.current();\n      if (atoms.propertyIsEnumerable(word)) return \"atom\";\n      if (keywords.propertyIsEnumerable(word)) {\n        // Block keywords start new blocks, except 'else if', which only starts\n        // one new block for the 'if', no block for the 'else'.\n        if (blockkeywords.propertyIsEnumerable(word) &&\n            !stream.match(/\\s*if(\\s+|$)/, false))\n          curPunc = \"block\";\n        return \"keyword\";\n      }\n      if (builtins.propertyIsEnumerable(word)) return \"builtin\";\n      return \"variable\";\n    } else if (ch == \"%\") {\n      if (stream.skipTo(\"%\")) stream.next();\n      return \"operator variable-2\";\n    } else if (\n        (ch == \"<\" && stream.eat(\"-\")) ||\n        (ch == \"<\" && stream.match(\"<-\")) ||\n        (ch == \"-\" && stream.match(/>>?/))\n      ) {\n      return \"operator arrow\";\n    } else if (ch == \"=\" && state.ctx.argList) {\n      return \"arg-is\";\n    } else if (opChars.test(ch)) {\n      if (ch == \"$\") return \"operator dollar\";\n      stream.eatWhile(opChars);\n      return \"operator\";\n    } else if (/[\\(\\){}\\[\\];]/.test(ch)) {\n      curPunc = ch;\n      if (ch == \";\") return \"semi\";\n      return null;\n    } else {\n      return null;\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      if (stream.eat(\"\\\\\")) {\n        var ch = stream.next();\n        if (ch == \"x\") stream.match(/^[a-f0-9]{2}/i);\n        else if ((ch == \"u\" || ch == \"U\") && stream.eat(\"{\") && stream.skipTo(\"}\")) stream.next();\n        else if (ch == \"u\") stream.match(/^[a-f0-9]{4}/i);\n        else if (ch == \"U\") stream.match(/^[a-f0-9]{8}/i);\n        else if (/[0-7]/.test(ch)) stream.match(/^[0-7]{1,2}/);\n        return \"string-2\";\n      } else {\n        var next;\n        while ((next = stream.next()) != null) {\n          if (next == quote) { state.tokenize = tokenBase; break; }\n          if (next == \"\\\\\") { stream.backUp(1); break; }\n        }\n        return \"string\";\n      }\n    };\n  }\n\n  var ALIGN_YES = 1, ALIGN_NO = 2, BRACELESS = 4\n\n  function push(state, type, stream) {\n    state.ctx = {type: type,\n                 indent: state.indent,\n                 flags: 0,\n                 column: stream.column(),\n                 prev: state.ctx};\n  }\n  function setFlag(state, flag) {\n    var ctx = state.ctx\n    state.ctx = {type: ctx.type,\n                 indent: ctx.indent,\n                 flags: ctx.flags | flag,\n                 column: ctx.column,\n                 prev: ctx.prev}\n  }\n  function pop(state) {\n    state.indent = state.ctx.indent;\n    state.ctx = state.ctx.prev;\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: tokenBase,\n              ctx: {type: \"top\",\n                    indent: -config.indentUnit,\n                    flags: ALIGN_NO},\n              indent: 0,\n              afterIdent: false};\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if ((state.ctx.flags & 3) == 0) state.ctx.flags |= ALIGN_NO\n        if (state.ctx.flags & BRACELESS) pop(state)\n        state.indent = stream.indentation();\n      }\n      if (stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      if (style != \"comment\" && (state.ctx.flags & ALIGN_NO) == 0) setFlag(state, ALIGN_YES)\n\n      if ((curPunc == \";\" || curPunc == \"{\" || curPunc == \"}\") && state.ctx.type == \"block\") pop(state);\n      if (curPunc == \"{\") push(state, \"}\", stream);\n      else if (curPunc == \"(\") {\n        push(state, \")\", stream);\n        if (state.afterIdent) state.ctx.argList = true;\n      }\n      else if (curPunc == \"[\") push(state, \"]\", stream);\n      else if (curPunc == \"block\") push(state, \"block\", stream);\n      else if (curPunc == state.ctx.type) pop(state);\n      else if (state.ctx.type == \"block\" && style != \"comment\") setFlag(state, BRACELESS)\n      state.afterIdent = style == \"variable\" || style == \"keyword\";\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), ctx = state.ctx,\n          closing = firstChar == ctx.type;\n      if (ctx.flags & BRACELESS) ctx = ctx.prev\n      if (ctx.type == \"block\") return ctx.indent + (firstChar == \"{\" ? 0 : config.indentUnit);\n      else if (ctx.flags & ALIGN_YES) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indent + (closing ? 0 : config.indentUnit);\n    },\n\n    lineComment: \"#\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-rsrc\", \"r\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"d\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit,\n      statementIndentUnit = parserConfig.statementIndentUnit || indentUnit,\n      keywords = parserConfig.keywords || {},\n      builtin = parserConfig.builtin || {},\n      blockKeywords = parserConfig.blockKeywords || {},\n      atoms = parserConfig.atoms || {},\n      hooks = parserConfig.hooks || {},\n      multiLineStrings = parserConfig.multiLineStrings;\n  var isOperatorChar = /[+\\-*&%=<>!?|\\/]/;\n\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"' || ch == \"'\" || ch == \"`\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\w\\.]/);\n      return \"number\";\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"+\")) {\n        state.tokenize = tokenComment;\n        return tokenNestedComment(stream, state);\n      }\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n    var cur = stream.current();\n    if (keywords.propertyIsEnumerable(cur)) {\n      if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n      return \"keyword\";\n    }\n    if (builtin.propertyIsEnumerable(cur)) {\n      if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n      return \"builtin\";\n    }\n    if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = null;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function tokenNestedComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"+\");\n    }\n    return \"comment\";\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    var indent = state.indented;\n    if (state.context && state.context.type == \"statement\")\n      indent = state.context.indented;\n    return state.context = new Context(indent, col, type, null, state.context);\n  }\n  function popContext(state) {\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if ((curPunc == \";\" || curPunc == \":\" || curPunc == \",\") && ctx.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != ';') || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n        pushContext(state, stream.column(), \"statement\");\n      state.startOfLine = false;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null) return CodeMirror.Pass;\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n      var closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit);\n      else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"{}\"\n  };\n});\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  var blockKeywords = \"body catch class do else enum for foreach foreach_reverse if in interface mixin \" +\n                      \"out scope struct switch try union unittest version while with\";\n\n  CodeMirror.defineMIME(\"text/x-d\", {\n    name: \"d\",\n    keywords: words(\"abstract alias align asm assert auto break case cast cdouble cent cfloat const continue \" +\n                    \"debug default delegate delete deprecated export extern final finally function goto immutable \" +\n                    \"import inout invariant is lazy macro module new nothrow override package pragma private \" +\n                    \"protected public pure ref return shared short static super synchronized template this \" +\n                    \"throw typedef typeid typeof volatile __FILE__ __LINE__ __gshared __traits __vector __parameters \" +\n                    blockKeywords),\n    blockKeywords: words(blockKeywords),\n    builtin: words(\"bool byte char creal dchar double float idouble ifloat int ireal long real short ubyte \" +\n                   \"ucent uint ulong ushort wchar wstring void size_t sizediff_t\"),\n    atoms: words(\"exit failure success true false null\"),\n    hooks: {\n      \"@\": function(stream, _state) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    }\n  });\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"diff\", function() {\n\n  var TOKEN_NAMES = {\n    '+': 'positive',\n    '-': 'negative',\n    '@': 'meta'\n  };\n\n  return {\n    token: function(stream) {\n      var tw_pos = stream.string.search(/[\\t ]+?$/);\n\n      if (!stream.sol() || tw_pos === 0) {\n        stream.skipToEnd();\n        return (\"error \" + (\n          TOKEN_NAMES[stream.string.charAt(0)] || '')).replace(/ $/, '');\n      }\n\n      var token_name = TOKEN_NAMES[stream.peek()] || stream.skipToEnd();\n\n      if (tw_pos === -1) {\n        stream.skipToEnd();\n      } else {\n        stream.pos = tw_pos;\n      }\n\n      return token_name;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-diff\", \"diff\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n/*jshint unused:true, eqnull:true, curly:true, bitwise:true */\n/*jshint undef:true, latedef:true, trailing:true */\n/*global CodeMirror:true */\n\n// erlang mode.\n// tokenizer -> token types -> CodeMirror styles\n// tokenizer maintains a parse stack\n// indenter uses the parse stack\n\n// TODO indenter:\n//   bit syntax\n//   old guard/bif/conversion clashes (e.g. \"float/1\")\n//   type/spec/opaque\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMIME(\"text/x-erlang\", \"erlang\");\n\nCodeMirror.defineMode(\"erlang\", function(cmCfg) {\n  \"use strict\";\n\n/////////////////////////////////////////////////////////////////////////////\n// constants\n\n  var typeWords = [\n    \"-type\", \"-spec\", \"-export_type\", \"-opaque\"];\n\n  var keywordWords = [\n    \"after\",\"begin\",\"catch\",\"case\",\"cond\",\"end\",\"fun\",\"if\",\n    \"let\",\"of\",\"query\",\"receive\",\"try\",\"when\"];\n\n  var separatorRE    = /[\\->,;]/;\n  var separatorWords = [\n    \"->\",\";\",\",\"];\n\n  var operatorAtomWords = [\n    \"and\",\"andalso\",\"band\",\"bnot\",\"bor\",\"bsl\",\"bsr\",\"bxor\",\n    \"div\",\"not\",\"or\",\"orelse\",\"rem\",\"xor\"];\n\n  var operatorSymbolRE    = /[\\+\\-\\*\\/<>=\\|:!]/;\n  var operatorSymbolWords = [\n    \"=\",\"+\",\"-\",\"*\",\"/\",\">\",\">=\",\"<\",\"=<\",\"=:=\",\"==\",\"=/=\",\"/=\",\"||\",\"<-\",\"!\"];\n\n  var openParenRE    = /[<\\(\\[\\{]/;\n  var openParenWords = [\n    \"<<\",\"(\",\"[\",\"{\"];\n\n  var closeParenRE    = /[>\\)\\]\\}]/;\n  var closeParenWords = [\n    \"}\",\"]\",\")\",\">>\"];\n\n  var guardWords = [\n    \"is_atom\",\"is_binary\",\"is_bitstring\",\"is_boolean\",\"is_float\",\n    \"is_function\",\"is_integer\",\"is_list\",\"is_number\",\"is_pid\",\n    \"is_port\",\"is_record\",\"is_reference\",\"is_tuple\",\n    \"atom\",\"binary\",\"bitstring\",\"boolean\",\"function\",\"integer\",\"list\",\n    \"number\",\"pid\",\"port\",\"record\",\"reference\",\"tuple\"];\n\n  var bifWords = [\n    \"abs\",\"adler32\",\"adler32_combine\",\"alive\",\"apply\",\"atom_to_binary\",\n    \"atom_to_list\",\"binary_to_atom\",\"binary_to_existing_atom\",\n    \"binary_to_list\",\"binary_to_term\",\"bit_size\",\"bitstring_to_list\",\n    \"byte_size\",\"check_process_code\",\"contact_binary\",\"crc32\",\n    \"crc32_combine\",\"date\",\"decode_packet\",\"delete_module\",\n    \"disconnect_node\",\"element\",\"erase\",\"exit\",\"float\",\"float_to_list\",\n    \"garbage_collect\",\"get\",\"get_keys\",\"group_leader\",\"halt\",\"hd\",\n    \"integer_to_list\",\"internal_bif\",\"iolist_size\",\"iolist_to_binary\",\n    \"is_alive\",\"is_atom\",\"is_binary\",\"is_bitstring\",\"is_boolean\",\n    \"is_float\",\"is_function\",\"is_integer\",\"is_list\",\"is_number\",\"is_pid\",\n    \"is_port\",\"is_process_alive\",\"is_record\",\"is_reference\",\"is_tuple\",\n    \"length\",\"link\",\"list_to_atom\",\"list_to_binary\",\"list_to_bitstring\",\n    \"list_to_existing_atom\",\"list_to_float\",\"list_to_integer\",\n    \"list_to_pid\",\"list_to_tuple\",\"load_module\",\"make_ref\",\"module_loaded\",\n    \"monitor_node\",\"node\",\"node_link\",\"node_unlink\",\"nodes\",\"notalive\",\n    \"now\",\"open_port\",\"pid_to_list\",\"port_close\",\"port_command\",\n    \"port_connect\",\"port_control\",\"pre_loaded\",\"process_flag\",\n    \"process_info\",\"processes\",\"purge_module\",\"put\",\"register\",\n    \"registered\",\"round\",\"self\",\"setelement\",\"size\",\"spawn\",\"spawn_link\",\n    \"spawn_monitor\",\"spawn_opt\",\"split_binary\",\"statistics\",\n    \"term_to_binary\",\"time\",\"throw\",\"tl\",\"trunc\",\"tuple_size\",\n    \"tuple_to_list\",\"unlink\",\"unregister\",\"whereis\"];\n\n// upper case: [A-Z] [Ø-Þ] [À-Ö]\n// lower case: [a-z] [ß-ö] [ø-ÿ]\n  var anumRE       = /[\\w@Ø-ÞÀ-Öß-öø-ÿ]/;\n  var escapesRE    =\n    /[0-7]{1,3}|[bdefnrstv\\\\\"']|\\^[a-zA-Z]|x[0-9a-zA-Z]{2}|x{[0-9a-zA-Z]+}/;\n\n/////////////////////////////////////////////////////////////////////////////\n// tokenizer\n\n  function tokenizer(stream,state) {\n    // in multi-line string\n    if (state.in_string) {\n      state.in_string = (!doubleQuote(stream));\n      return rval(state,stream,\"string\");\n    }\n\n    // in multi-line atom\n    if (state.in_atom) {\n      state.in_atom = (!singleQuote(stream));\n      return rval(state,stream,\"atom\");\n    }\n\n    // whitespace\n    if (stream.eatSpace()) {\n      return rval(state,stream,\"whitespace\");\n    }\n\n    // attributes and type specs\n    if (!peekToken(state) &&\n        stream.match(/-\\s*[a-zß-öø-ÿ][\\wØ-ÞÀ-Öß-öø-ÿ]*/)) {\n      if (is_member(stream.current(),typeWords)) {\n        return rval(state,stream,\"type\");\n      }else{\n        return rval(state,stream,\"attribute\");\n      }\n    }\n\n    var ch = stream.next();\n\n    // comment\n    if (ch == '%') {\n      stream.skipToEnd();\n      return rval(state,stream,\"comment\");\n    }\n\n    // colon\n    if (ch == \":\") {\n      return rval(state,stream,\"colon\");\n    }\n\n    // macro\n    if (ch == '?') {\n      stream.eatSpace();\n      stream.eatWhile(anumRE);\n      return rval(state,stream,\"macro\");\n    }\n\n    // record\n    if (ch == \"#\") {\n      stream.eatSpace();\n      stream.eatWhile(anumRE);\n      return rval(state,stream,\"record\");\n    }\n\n    // dollar escape\n    if (ch == \"$\") {\n      if (stream.next() == \"\\\\\" && !stream.match(escapesRE)) {\n        return rval(state,stream,\"error\");\n      }\n      return rval(state,stream,\"number\");\n    }\n\n    // dot\n    if (ch == \".\") {\n      return rval(state,stream,\"dot\");\n    }\n\n    // quoted atom\n    if (ch == '\\'') {\n      if (!(state.in_atom = (!singleQuote(stream)))) {\n        if (stream.match(/\\s*\\/\\s*[0-9]/,false)) {\n          stream.match(/\\s*\\/\\s*[0-9]/,true);\n          return rval(state,stream,\"fun\");      // 'f'/0 style fun\n        }\n        if (stream.match(/\\s*\\(/,false) || stream.match(/\\s*:/,false)) {\n          return rval(state,stream,\"function\");\n        }\n      }\n      return rval(state,stream,\"atom\");\n    }\n\n    // string\n    if (ch == '\"') {\n      state.in_string = (!doubleQuote(stream));\n      return rval(state,stream,\"string\");\n    }\n\n    // variable\n    if (/[A-Z_Ø-ÞÀ-Ö]/.test(ch)) {\n      stream.eatWhile(anumRE);\n      return rval(state,stream,\"variable\");\n    }\n\n    // atom/keyword/BIF/function\n    if (/[a-z_ß-öø-ÿ]/.test(ch)) {\n      stream.eatWhile(anumRE);\n\n      if (stream.match(/\\s*\\/\\s*[0-9]/,false)) {\n        stream.match(/\\s*\\/\\s*[0-9]/,true);\n        return rval(state,stream,\"fun\");      // f/0 style fun\n      }\n\n      var w = stream.current();\n\n      if (is_member(w,keywordWords)) {\n        return rval(state,stream,\"keyword\");\n      }else if (is_member(w,operatorAtomWords)) {\n        return rval(state,stream,\"operator\");\n      }else if (stream.match(/\\s*\\(/,false)) {\n        // 'put' and 'erlang:put' are bifs, 'foo:put' is not\n        if (is_member(w,bifWords) &&\n            ((peekToken(state).token != \":\") ||\n             (peekToken(state,2).token == \"erlang\"))) {\n          return rval(state,stream,\"builtin\");\n        }else if (is_member(w,guardWords)) {\n          return rval(state,stream,\"guard\");\n        }else{\n          return rval(state,stream,\"function\");\n        }\n      }else if (lookahead(stream) == \":\") {\n        if (w == \"erlang\") {\n          return rval(state,stream,\"builtin\");\n        } else {\n          return rval(state,stream,\"function\");\n        }\n      }else if (is_member(w,[\"true\",\"false\"])) {\n        return rval(state,stream,\"boolean\");\n      }else{\n        return rval(state,stream,\"atom\");\n      }\n    }\n\n    // number\n    var digitRE      = /[0-9]/;\n    var radixRE      = /[0-9a-zA-Z]/;         // 36#zZ style int\n    if (digitRE.test(ch)) {\n      stream.eatWhile(digitRE);\n      if (stream.eat('#')) {                // 36#aZ  style integer\n        if (!stream.eatWhile(radixRE)) {\n          stream.backUp(1);                 //\"36#\" - syntax error\n        }\n      } else if (stream.eat('.')) {       // float\n        if (!stream.eatWhile(digitRE)) {\n          stream.backUp(1);        // \"3.\" - probably end of function\n        } else {\n          if (stream.eat(/[eE]/)) {        // float with exponent\n            if (stream.eat(/[-+]/)) {\n              if (!stream.eatWhile(digitRE)) {\n                stream.backUp(2);            // \"2e-\" - syntax error\n              }\n            } else {\n              if (!stream.eatWhile(digitRE)) {\n                stream.backUp(1);            // \"2e\" - syntax error\n              }\n            }\n          }\n        }\n      }\n      return rval(state,stream,\"number\");   // normal integer\n    }\n\n    // open parens\n    if (nongreedy(stream,openParenRE,openParenWords)) {\n      return rval(state,stream,\"open_paren\");\n    }\n\n    // close parens\n    if (nongreedy(stream,closeParenRE,closeParenWords)) {\n      return rval(state,stream,\"close_paren\");\n    }\n\n    // separators\n    if (greedy(stream,separatorRE,separatorWords)) {\n      return rval(state,stream,\"separator\");\n    }\n\n    // operators\n    if (greedy(stream,operatorSymbolRE,operatorSymbolWords)) {\n      return rval(state,stream,\"operator\");\n    }\n\n    return rval(state,stream,null);\n  }\n\n/////////////////////////////////////////////////////////////////////////////\n// utilities\n  function nongreedy(stream,re,words) {\n    if (stream.current().length == 1 && re.test(stream.current())) {\n      stream.backUp(1);\n      while (re.test(stream.peek())) {\n        stream.next();\n        if (is_member(stream.current(),words)) {\n          return true;\n        }\n      }\n      stream.backUp(stream.current().length-1);\n    }\n    return false;\n  }\n\n  function greedy(stream,re,words) {\n    if (stream.current().length == 1 && re.test(stream.current())) {\n      while (re.test(stream.peek())) {\n        stream.next();\n      }\n      while (0 < stream.current().length) {\n        if (is_member(stream.current(),words)) {\n          return true;\n        }else{\n          stream.backUp(1);\n        }\n      }\n      stream.next();\n    }\n    return false;\n  }\n\n  function doubleQuote(stream) {\n    return quote(stream, '\"', '\\\\');\n  }\n\n  function singleQuote(stream) {\n    return quote(stream,'\\'','\\\\');\n  }\n\n  function quote(stream,quoteChar,escapeChar) {\n    while (!stream.eol()) {\n      var ch = stream.next();\n      if (ch == quoteChar) {\n        return true;\n      }else if (ch == escapeChar) {\n        stream.next();\n      }\n    }\n    return false;\n  }\n\n  function lookahead(stream) {\n    var m = stream.match(/([\\n\\s]+|%[^\\n]*\\n)*(.)/,false);\n    return m ? m.pop() : \"\";\n  }\n\n  function is_member(element,list) {\n    return (-1 < list.indexOf(element));\n  }\n\n  function rval(state,stream,type) {\n\n    // parse stack\n    pushToken(state,realToken(type,stream));\n\n    // map erlang token type to CodeMirror style class\n    //     erlang             -> CodeMirror tag\n    switch (type) {\n      case \"atom\":        return \"atom\";\n      case \"attribute\":   return \"attribute\";\n      case \"boolean\":     return \"atom\";\n      case \"builtin\":     return \"builtin\";\n      case \"close_paren\": return null;\n      case \"colon\":       return null;\n      case \"comment\":     return \"comment\";\n      case \"dot\":         return null;\n      case \"error\":       return \"error\";\n      case \"fun\":         return \"meta\";\n      case \"function\":    return \"tag\";\n      case \"guard\":       return \"property\";\n      case \"keyword\":     return \"keyword\";\n      case \"macro\":       return \"variable-2\";\n      case \"number\":      return \"number\";\n      case \"open_paren\":  return null;\n      case \"operator\":    return \"operator\";\n      case \"record\":      return \"bracket\";\n      case \"separator\":   return null;\n      case \"string\":      return \"string\";\n      case \"type\":        return \"def\";\n      case \"variable\":    return \"variable\";\n      default:            return null;\n    }\n  }\n\n  function aToken(tok,col,ind,typ) {\n    return {token:  tok,\n            column: col,\n            indent: ind,\n            type:   typ};\n  }\n\n  function realToken(type,stream) {\n    return aToken(stream.current(),\n                 stream.column(),\n                 stream.indentation(),\n                 type);\n  }\n\n  function fakeToken(type) {\n    return aToken(type,0,0,type);\n  }\n\n  function peekToken(state,depth) {\n    var len = state.tokenStack.length;\n    var dep = (depth ? depth : 1);\n\n    if (len < dep) {\n      return false;\n    }else{\n      return state.tokenStack[len-dep];\n    }\n  }\n\n  function pushToken(state,token) {\n\n    if (!(token.type == \"comment\" || token.type == \"whitespace\")) {\n      state.tokenStack = maybe_drop_pre(state.tokenStack,token);\n      state.tokenStack = maybe_drop_post(state.tokenStack);\n    }\n  }\n\n  function maybe_drop_pre(s,token) {\n    var last = s.length-1;\n\n    if (0 < last && s[last].type === \"record\" && token.type === \"dot\") {\n      s.pop();\n    }else if (0 < last && s[last].type === \"group\") {\n      s.pop();\n      s.push(token);\n    }else{\n      s.push(token);\n    }\n    return s;\n  }\n\n  function maybe_drop_post(s) {\n    if (!s.length) return s\n    var last = s.length-1;\n\n    if (s[last].type === \"dot\") {\n      return [];\n    }\n    if (last > 1 && s[last].type === \"fun\" && s[last-1].token === \"fun\") {\n      return s.slice(0,last-1);\n    }\n    switch (s[last].token) {\n      case \"}\":    return d(s,{g:[\"{\"]});\n      case \"]\":    return d(s,{i:[\"[\"]});\n      case \")\":    return d(s,{i:[\"(\"]});\n      case \">>\":   return d(s,{i:[\"<<\"]});\n      case \"end\":  return d(s,{i:[\"begin\",\"case\",\"fun\",\"if\",\"receive\",\"try\"]});\n      case \",\":    return d(s,{e:[\"begin\",\"try\",\"when\",\"->\",\n                                  \",\",\"(\",\"[\",\"{\",\"<<\"]});\n      case \"->\":   return d(s,{r:[\"when\"],\n                               m:[\"try\",\"if\",\"case\",\"receive\"]});\n      case \";\":    return d(s,{E:[\"case\",\"fun\",\"if\",\"receive\",\"try\",\"when\"]});\n      case \"catch\":return d(s,{e:[\"try\"]});\n      case \"of\":   return d(s,{e:[\"case\"]});\n      case \"after\":return d(s,{e:[\"receive\",\"try\"]});\n      default:     return s;\n    }\n  }\n\n  function d(stack,tt) {\n    // stack is a stack of Token objects.\n    // tt is an object; {type:tokens}\n    // type is a char, tokens is a list of token strings.\n    // The function returns (possibly truncated) stack.\n    // It will descend the stack, looking for a Token such that Token.token\n    //  is a member of tokens. If it does not find that, it will normally (but\n    //  see \"E\" below) return stack. If it does find a match, it will remove\n    //  all the Tokens between the top and the matched Token.\n    // If type is \"m\", that is all it does.\n    // If type is \"i\", it will also remove the matched Token and the top Token.\n    // If type is \"g\", like \"i\", but add a fake \"group\" token at the top.\n    // If type is \"r\", it will remove the matched Token, but not the top Token.\n    // If type is \"e\", it will keep the matched Token but not the top Token.\n    // If type is \"E\", it behaves as for type \"e\", except if there is no match,\n    //  in which case it will return an empty stack.\n\n    for (var type in tt) {\n      var len = stack.length-1;\n      var tokens = tt[type];\n      for (var i = len-1; -1 < i ; i--) {\n        if (is_member(stack[i].token,tokens)) {\n          var ss = stack.slice(0,i);\n          switch (type) {\n              case \"m\": return ss.concat(stack[i]).concat(stack[len]);\n              case \"r\": return ss.concat(stack[len]);\n              case \"i\": return ss;\n              case \"g\": return ss.concat(fakeToken(\"group\"));\n              case \"E\": return ss.concat(stack[i]);\n              case \"e\": return ss.concat(stack[i]);\n          }\n        }\n      }\n    }\n    return (type == \"E\" ? [] : stack);\n  }\n\n/////////////////////////////////////////////////////////////////////////////\n// indenter\n\n  function indenter(state,textAfter) {\n    var t;\n    var unit = cmCfg.indentUnit;\n    var wordAfter = wordafter(textAfter);\n    var currT = peekToken(state,1);\n    var prevT = peekToken(state,2);\n\n    if (state.in_string || state.in_atom) {\n      return CodeMirror.Pass;\n    }else if (!prevT) {\n      return 0;\n    }else if (currT.token == \"when\") {\n      return currT.column+unit;\n    }else if (wordAfter === \"when\" && prevT.type === \"function\") {\n      return prevT.indent+unit;\n    }else if (wordAfter === \"(\" && currT.token === \"fun\") {\n      return  currT.column+3;\n    }else if (wordAfter === \"catch\" && (t = getToken(state,[\"try\"]))) {\n      return t.column;\n    }else if (is_member(wordAfter,[\"end\",\"after\",\"of\"])) {\n      t = getToken(state,[\"begin\",\"case\",\"fun\",\"if\",\"receive\",\"try\"]);\n      return t ? t.column : CodeMirror.Pass;\n    }else if (is_member(wordAfter,closeParenWords)) {\n      t = getToken(state,openParenWords);\n      return t ? t.column : CodeMirror.Pass;\n    }else if (is_member(currT.token,[\",\",\"|\",\"||\"]) ||\n              is_member(wordAfter,[\",\",\"|\",\"||\"])) {\n      t = postcommaToken(state);\n      return t ? t.column+t.token.length : unit;\n    }else if (currT.token == \"->\") {\n      if (is_member(prevT.token, [\"receive\",\"case\",\"if\",\"try\"])) {\n        return prevT.column+unit+unit;\n      }else{\n        return prevT.column+unit;\n      }\n    }else if (is_member(currT.token,openParenWords)) {\n      return currT.column+currT.token.length;\n    }else{\n      t = defaultToken(state);\n      return truthy(t) ? t.column+unit : 0;\n    }\n  }\n\n  function wordafter(str) {\n    var m = str.match(/,|[a-z]+|\\}|\\]|\\)|>>|\\|+|\\(/);\n\n    return truthy(m) && (m.index === 0) ? m[0] : \"\";\n  }\n\n  function postcommaToken(state) {\n    var objs = state.tokenStack.slice(0,-1);\n    var i = getTokenIndex(objs,\"type\",[\"open_paren\"]);\n\n    return truthy(objs[i]) ? objs[i] : false;\n  }\n\n  function defaultToken(state) {\n    var objs = state.tokenStack;\n    var stop = getTokenIndex(objs,\"type\",[\"open_paren\",\"separator\",\"keyword\"]);\n    var oper = getTokenIndex(objs,\"type\",[\"operator\"]);\n\n    if (truthy(stop) && truthy(oper) && stop < oper) {\n      return objs[stop+1];\n    } else if (truthy(stop)) {\n      return objs[stop];\n    } else {\n      return false;\n    }\n  }\n\n  function getToken(state,tokens) {\n    var objs = state.tokenStack;\n    var i = getTokenIndex(objs,\"token\",tokens);\n\n    return truthy(objs[i]) ? objs[i] : false;\n  }\n\n  function getTokenIndex(objs,propname,propvals) {\n\n    for (var i = objs.length-1; -1 < i ; i--) {\n      if (is_member(objs[i][propname],propvals)) {\n        return i;\n      }\n    }\n    return false;\n  }\n\n  function truthy(x) {\n    return (x !== false) && (x != null);\n  }\n\n/////////////////////////////////////////////////////////////////////////////\n// this object defines the mode\n\n  return {\n    startState:\n      function() {\n        return {tokenStack: [],\n                in_string:  false,\n                in_atom:    false};\n      },\n\n    token:\n      function(stream, state) {\n        return tokenizer(stream, state);\n      },\n\n    indent:\n      function(state, textAfter) {\n        return indenter(state,textAfter);\n      },\n\n    lineComment: \"%\"\n  };\n});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"http\", function() {\n  function failFirstLine(stream, state) {\n    stream.skipToEnd();\n    state.cur = header;\n    return \"error\";\n  }\n\n  function start(stream, state) {\n    if (stream.match(/^HTTP\\/\\d\\.\\d/)) {\n      state.cur = responseStatusCode;\n      return \"keyword\";\n    } else if (stream.match(/^[A-Z]+/) && /[ \\t]/.test(stream.peek())) {\n      state.cur = requestPath;\n      return \"keyword\";\n    } else {\n      return failFirstLine(stream, state);\n    }\n  }\n\n  function responseStatusCode(stream, state) {\n    var code = stream.match(/^\\d+/);\n    if (!code) return failFirstLine(stream, state);\n\n    state.cur = responseStatusText;\n    var status = Number(code[0]);\n    if (status >= 100 && status < 200) {\n      return \"positive informational\";\n    } else if (status >= 200 && status < 300) {\n      return \"positive success\";\n    } else if (status >= 300 && status < 400) {\n      return \"positive redirect\";\n    } else if (status >= 400 && status < 500) {\n      return \"negative client-error\";\n    } else if (status >= 500 && status < 600) {\n      return \"negative server-error\";\n    } else {\n      return \"error\";\n    }\n  }\n\n  function responseStatusText(stream, state) {\n    stream.skipToEnd();\n    state.cur = header;\n    return null;\n  }\n\n  function requestPath(stream, state) {\n    stream.eatWhile(/\\S/);\n    state.cur = requestProtocol;\n    return \"string-2\";\n  }\n\n  function requestProtocol(stream, state) {\n    if (stream.match(/^HTTP\\/\\d\\.\\d$/)) {\n      state.cur = header;\n      return \"keyword\";\n    } else {\n      return failFirstLine(stream, state);\n    }\n  }\n\n  function header(stream) {\n    if (stream.sol() && !stream.eat(/[ \\t]/)) {\n      if (stream.match(/^.*?:/)) {\n        return \"atom\";\n      } else {\n        stream.skipToEnd();\n        return \"error\";\n      }\n    } else {\n      stream.skipToEnd();\n      return \"string\";\n    }\n  }\n\n  function body(stream) {\n    stream.skipToEnd();\n    return null;\n  }\n\n  return {\n    token: function(stream, state) {\n      var cur = state.cur;\n      if (cur != header && cur != body && stream.eatSpace()) return null;\n      return cur(stream, state);\n    },\n\n    blankLine: function(state) {\n      state.cur = body;\n    },\n\n    startState: function() {\n      return {cur: start};\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"message/http\", \"http\");\n\n});\n","CodeMirror.defineMode(\"jade\", function () {\n  var symbol_regex1 = /^(?:~|!|%|\\^|\\*|\\+|=|\\\\|:|;|,|\\/|\\?|&|<|>|\\|)/;\n  var open_paren_regex = /^(\\(|\\[)/;\n  var close_paren_regex = /^(\\)|\\])/;\n  var keyword_regex1 = /^(if|else|return|var|function|include|doctype|each)/;\n  var keyword_regex2 = /^(#|{|}|\\.)/;\n  var keyword_regex3 = /^(in)/;\n  var html_regex1 = /^(html|head|title|meta|link|script|body|br|div|input|span|a|img)/;\n  var html_regex2 = /^(h1|h2|h3|h4|h5|p|strong|em)/;\n  return {\n    startState: function () {\n      return {\n        inString: false,\n        stringType: \"\",\n        beforeTag: true,\n        justMatchedKeyword: false,\n        afterParen: false\n      };\n    },\n    token: function (stream, state) {\n      //check for state changes\n      if (!state.inString && ((stream.peek() == '\"') || (stream.peek() == \"'\"))) {\n        state.stringType = stream.peek();\n        stream.next(); // Skip quote\n        state.inString = true; // Update state\n      }\n\n      //return state\n      if (state.inString) {\n        if (stream.skipTo(state.stringType)) { // Quote found on this line\n          stream.next(); // Skip quote\n          state.inString = false; // Clear flag\n        } else {\n          stream.skipToEnd(); // Rest of line is string\n        }\n        state.justMatchedKeyword = false;\n        return \"string\"; // Token style\n      } else if (stream.sol() && stream.eatSpace()) {\n        if (stream.match(keyword_regex1)) {\n          state.justMatchedKeyword = true;\n          stream.eatSpace();\n          return \"keyword\";\n        }\n        if (stream.match(html_regex1) || stream.match(html_regex2)) {\n          state.justMatchedKeyword = true;\n          return \"variable\";\n        }\n      } else if (stream.sol() && stream.match(keyword_regex1)) {\n        state.justMatchedKeyword = true;\n        stream.eatSpace();\n        return \"keyword\";\n      } else if (stream.sol() && (stream.match(html_regex1) || stream.match(html_regex2))) {\n        state.justMatchedKeyword = true;\n        return \"variable\";\n      } else if (stream.eatSpace()) {\n        state.justMatchedKeyword = false;\n        if (stream.match(keyword_regex3) && stream.eatSpace()) {\n          state.justMatchedKeyword = true;\n          return \"keyword\";\n        }\n      } else if (stream.match(symbol_regex1)) {\n        state.justMatchedKeyword = false;\n        return \"atom\";\n      } else if (stream.match(open_paren_regex)) {\n        state.afterParen = true;\n        state.justMatchedKeyword = true;\n        return \"def\";\n      } else if (stream.match(close_paren_regex)) {\n        state.afterParen = false;\n        state.justMatchedKeyword = true;\n        return \"def\";\n      } else if (stream.match(keyword_regex2)) {\n        state.justMatchedKeyword = true;\n        return \"keyword\";\n      } else if (stream.eatSpace()) {\n        state.justMatchedKeyword = false;\n      } else {\n        stream.next();\n        if (state.justMatchedKeyword) {\n          return \"property\";\n        } else if (state.afterParen) {\n          return \"property\";\n        }\n      }\n      return null;\n    }\n  };\n});\n\nCodeMirror.defineMIME('text/x-jade', 'jade');\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../python/python\"), require(\"../stex/stex\"), require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../python/python\", \"../stex/stex\", \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('rst', function (config, options) {\n\n  var rx_strong = /^\\*\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*\\*/;\n  var rx_emphasis = /^\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*/;\n  var rx_literal = /^``[^`\\s](?:[^`]*[^`\\s])``/;\n\n  var rx_number = /^(?:[\\d]+(?:[\\.,]\\d+)*)/;\n  var rx_positive = /^(?:\\s\\+[\\d]+(?:[\\.,]\\d+)*)/;\n  var rx_negative = /^(?:\\s\\-[\\d]+(?:[\\.,]\\d+)*)/;\n\n  var rx_uri_protocol = \"[Hh][Tt][Tt][Pp][Ss]?://\";\n  var rx_uri_domain = \"(?:[\\\\d\\\\w.-]+)\\\\.(?:\\\\w{2,6})\";\n  var rx_uri_path = \"(?:/[\\\\d\\\\w\\\\#\\\\%\\\\&\\\\-\\\\.\\\\,\\\\/\\\\:\\\\=\\\\?\\\\~]+)*\";\n  var rx_uri = new RegExp(\"^\" + rx_uri_protocol + rx_uri_domain + rx_uri_path);\n\n  var overlay = {\n    token: function (stream) {\n\n      if (stream.match(rx_strong) && stream.match (/\\W+|$/, false))\n        return 'strong';\n      if (stream.match(rx_emphasis) && stream.match (/\\W+|$/, false))\n        return 'em';\n      if (stream.match(rx_literal) && stream.match (/\\W+|$/, false))\n        return 'string-2';\n      if (stream.match(rx_number))\n        return 'number';\n      if (stream.match(rx_positive))\n        return 'positive';\n      if (stream.match(rx_negative))\n        return 'negative';\n      if (stream.match(rx_uri))\n        return 'link';\n\n      while (stream.next() != null) {\n        if (stream.match(rx_strong, false)) break;\n        if (stream.match(rx_emphasis, false)) break;\n        if (stream.match(rx_literal, false)) break;\n        if (stream.match(rx_number, false)) break;\n        if (stream.match(rx_positive, false)) break;\n        if (stream.match(rx_negative, false)) break;\n        if (stream.match(rx_uri, false)) break;\n      }\n\n      return null;\n    }\n  };\n\n  var mode = CodeMirror.getMode(\n    config, options.backdrop || 'rst-base'\n  );\n\n  return CodeMirror.overlayMode(mode, overlay, true); // combine\n}, 'python', 'stex');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nCodeMirror.defineMode('rst-base', function (config) {\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function format(string) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return string.replace(/{(\\d+)}/g, function (match, n) {\n      return typeof args[n] != 'undefined' ? args[n] : match;\n    });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  var mode_python = CodeMirror.getMode(config, 'python');\n  var mode_stex = CodeMirror.getMode(config, 'stex');\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  var SEPA = \"\\\\s+\";\n  var TAIL = \"(?:\\\\s*|\\\\W|$)\",\n  rx_TAIL = new RegExp(format('^{0}', TAIL));\n\n  var NAME =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\",\n  rx_NAME = new RegExp(format('^{0}', NAME));\n  var NAME_WWS =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w\\\\s!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\";\n  var REF_NAME = format('(?:{0}|`{1}`)', NAME, NAME_WWS);\n\n  var TEXT1 = \"(?:[^\\\\s\\\\|](?:[^\\\\|]*[^\\\\s\\\\|])?)\";\n  var TEXT2 = \"(?:[^\\\\`]+)\",\n  rx_TEXT2 = new RegExp(format('^{0}', TEXT2));\n\n  var rx_section = new RegExp(\n    \"^([!'#$%&\\\"()*+,-./:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\1{3,}\\\\s*$\");\n  var rx_explicit = new RegExp(\n    format('^\\\\.\\\\.{0}', SEPA));\n  var rx_link = new RegExp(\n    format('^_{0}:{1}|^__:{1}', REF_NAME, TAIL));\n  var rx_directive = new RegExp(\n    format('^{0}::{1}', REF_NAME, TAIL));\n  var rx_substitution = new RegExp(\n    format('^\\\\|{0}\\\\|{1}{2}::{3}', TEXT1, SEPA, REF_NAME, TAIL));\n  var rx_footnote = new RegExp(\n    format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]{1}', REF_NAME, TAIL));\n  var rx_citation = new RegExp(\n    format('^\\\\[{0}\\\\]{1}', REF_NAME, TAIL));\n\n  var rx_substitution_ref = new RegExp(\n    format('^\\\\|{0}\\\\|', TEXT1));\n  var rx_footnote_ref = new RegExp(\n    format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]_', REF_NAME));\n  var rx_citation_ref = new RegExp(\n    format('^\\\\[{0}\\\\]_', REF_NAME));\n  var rx_link_ref1 = new RegExp(\n    format('^{0}__?', REF_NAME));\n  var rx_link_ref2 = new RegExp(\n    format('^`{0}`_', TEXT2));\n\n  var rx_role_pre = new RegExp(\n    format('^:{0}:`{1}`{2}', NAME, TEXT2, TAIL));\n  var rx_role_suf = new RegExp(\n    format('^`{1}`:{0}:{2}', NAME, TEXT2, TAIL));\n  var rx_role = new RegExp(\n    format('^:{0}:{1}', NAME, TAIL));\n\n  var rx_directive_name = new RegExp(format('^{0}', REF_NAME));\n  var rx_directive_tail = new RegExp(format('^::{0}', TAIL));\n  var rx_substitution_text = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n  var rx_substitution_sepa = new RegExp(format('^{0}', SEPA));\n  var rx_substitution_name = new RegExp(format('^{0}', REF_NAME));\n  var rx_substitution_tail = new RegExp(format('^::{0}', TAIL));\n  var rx_link_head = new RegExp(\"^_\");\n  var rx_link_name = new RegExp(format('^{0}|_', REF_NAME));\n  var rx_link_tail = new RegExp(format('^:{0}', TAIL));\n\n  var rx_verbatim = new RegExp('^::\\\\s*$');\n  var rx_examples = new RegExp('^\\\\s+(?:>>>|In \\\\[\\\\d+\\\\]:)\\\\s');\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_normal(stream, state) {\n    var token = null;\n\n    if (stream.sol() && stream.match(rx_examples, false)) {\n      change(state, to_mode, {\n        mode: mode_python, local: CodeMirror.startState(mode_python)\n      });\n    } else if (stream.sol() && stream.match(rx_explicit)) {\n      change(state, to_explicit);\n      token = 'meta';\n    } else if (stream.sol() && stream.match(rx_section)) {\n      change(state, to_normal);\n      token = 'header';\n    } else if (phase(state) == rx_role_pre ||\n               stream.match(rx_role_pre, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role_pre, 1));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role_pre, 2));\n        stream.match(rx_NAME);\n        token = 'keyword';\n\n        if (stream.current().match(/^(?:math|latex)/)) {\n          state.tmp_stex = true;\n        }\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role_pre, 3));\n        stream.match(/^:`/);\n        token = 'meta';\n        break;\n      case 3:\n        if (state.tmp_stex) {\n          state.tmp_stex = undefined; state.tmp = {\n            mode: mode_stex, local: CodeMirror.startState(mode_stex)\n          };\n        }\n\n        if (state.tmp) {\n          if (stream.peek() == '`') {\n            change(state, to_normal, context(rx_role_pre, 4));\n            state.tmp = undefined;\n            break;\n          }\n\n          token = state.tmp.mode.token(stream, state.tmp.local);\n          break;\n        }\n\n        change(state, to_normal, context(rx_role_pre, 4));\n        stream.match(rx_TEXT2);\n        token = 'string';\n        break;\n      case 4:\n        change(state, to_normal, context(rx_role_pre, 5));\n        stream.match(/^`/);\n        token = 'meta';\n        break;\n      case 5:\n        change(state, to_normal, context(rx_role_pre, 6));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_role_suf ||\n               stream.match(rx_role_suf, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role_suf, 1));\n        stream.match(/^`/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role_suf, 2));\n        stream.match(rx_TEXT2);\n        token = 'string';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role_suf, 3));\n        stream.match(/^`:/);\n        token = 'meta';\n        break;\n      case 3:\n        change(state, to_normal, context(rx_role_suf, 4));\n        stream.match(rx_NAME);\n        token = 'keyword';\n        break;\n      case 4:\n        change(state, to_normal, context(rx_role_suf, 5));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 5:\n        change(state, to_normal, context(rx_role_suf, 6));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_role || stream.match(rx_role, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role, 1));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role, 2));\n        stream.match(rx_NAME);\n        token = 'keyword';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role, 3));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 3:\n        change(state, to_normal, context(rx_role, 4));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_substitution_ref ||\n               stream.match(rx_substitution_ref, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_substitution_ref, 1));\n        stream.match(rx_substitution_text);\n        token = 'variable-2';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_substitution_ref, 2));\n        if (stream.match(/^_?_?/)) token = 'link';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_footnote_ref)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_citation_ref)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_link_ref1)) {\n      change(state, to_normal);\n      if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n        token = 'link';\n      }\n    } else if (phase(state) == rx_link_ref2 ||\n               stream.match(rx_link_ref2, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n          change(state, to_normal, context(rx_link_ref2, 1));\n        } else {\n          stream.match(rx_link_ref2);\n        }\n        break;\n      case 1:\n        change(state, to_normal, context(rx_link_ref2, 2));\n        stream.match(/^`/);\n        token = 'link';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_link_ref2, 3));\n        stream.match(rx_TEXT2);\n        break;\n      case 3:\n        change(state, to_normal, context(rx_link_ref2, 4));\n        stream.match(/^`_/);\n        token = 'link';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_verbatim)) {\n      change(state, to_verbatim);\n    }\n\n    else {\n      if (stream.next()) change(state, to_normal);\n    }\n\n    return token;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_explicit(stream, state) {\n    var token = null;\n\n    if (phase(state) == rx_substitution ||\n        stream.match(rx_substitution, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_substitution, 1));\n        stream.match(rx_substitution_text);\n        token = 'variable-2';\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_substitution, 2));\n        stream.match(rx_substitution_sepa);\n        break;\n      case 2:\n        change(state, to_explicit, context(rx_substitution, 3));\n        stream.match(rx_substitution_name);\n        token = 'keyword';\n        break;\n      case 3:\n        change(state, to_explicit, context(rx_substitution, 4));\n        stream.match(rx_substitution_tail);\n        token = 'meta';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_directive ||\n               stream.match(rx_directive, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_directive, 1));\n        stream.match(rx_directive_name);\n        token = 'keyword';\n\n        if (stream.current().match(/^(?:math|latex)/))\n          state.tmp_stex = true;\n        else if (stream.current().match(/^python/))\n          state.tmp_py = true;\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_directive, 2));\n        stream.match(rx_directive_tail);\n        token = 'meta';\n\n        if (stream.match(/^latex\\s*$/) || state.tmp_stex) {\n          state.tmp_stex = undefined; change(state, to_mode, {\n            mode: mode_stex, local: CodeMirror.startState(mode_stex)\n          });\n        }\n        break;\n      case 2:\n        change(state, to_explicit, context(rx_directive, 3));\n        if (stream.match(/^python\\s*$/) || state.tmp_py) {\n          state.tmp_py = undefined; change(state, to_mode, {\n            mode: mode_python, local: CodeMirror.startState(mode_python)\n          });\n        }\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_link || stream.match(rx_link, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_link, 1));\n        stream.match(rx_link_head);\n        stream.match(rx_link_name);\n        token = 'link';\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_link, 2));\n        stream.match(rx_link_tail);\n        token = 'meta';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_footnote)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_citation)) {\n      change(state, to_normal);\n      token = 'quote';\n    }\n\n    else {\n      stream.eatSpace();\n      if (stream.eol()) {\n        change(state, to_normal);\n      } else {\n        stream.skipToEnd();\n        change(state, to_comment);\n        token = 'comment';\n      }\n    }\n\n    return token;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_comment(stream, state) {\n    return as_block(stream, state, 'comment');\n  }\n\n  function to_verbatim(stream, state) {\n    return as_block(stream, state, 'meta');\n  }\n\n  function as_block(stream, state, token) {\n    if (stream.eol() || stream.eatSpace()) {\n      stream.skipToEnd();\n      return token;\n    } else {\n      change(state, to_normal);\n      return null;\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_mode(stream, state) {\n\n    if (state.ctx.mode && state.ctx.local) {\n\n      if (stream.sol()) {\n        if (!stream.eatSpace()) change(state, to_normal);\n        return null;\n      }\n\n      return state.ctx.mode.token(stream, state.ctx.local);\n    }\n\n    change(state, to_normal);\n    return null;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function context(phase, stage, mode, local) {\n    return {phase: phase, stage: stage, mode: mode, local: local};\n  }\n\n  function change(state, tok, ctx) {\n    state.tok = tok;\n    state.ctx = ctx || {};\n  }\n\n  function stage(state) {\n    return state.ctx.stage || 0;\n  }\n\n  function phase(state) {\n    return state.ctx.phase;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  return {\n    startState: function () {\n      return {tok: to_normal, ctx: context(undefined, 0)};\n    },\n\n    copyState: function (state) {\n      var ctx = state.ctx, tmp = state.tmp;\n      if (ctx.local)\n        ctx = {mode: ctx.mode, local: CodeMirror.copyState(ctx.mode, ctx.local)};\n      if (tmp)\n        tmp = {mode: tmp.mode, local: CodeMirror.copyState(tmp.mode, tmp.local)};\n      return {tok: state.tok, ctx: ctx, tmp: tmp};\n    },\n\n    innerMode: function (state) {\n      return state.tmp      ? {state: state.tmp.local, mode: state.tmp.mode}\n      : state.ctx.mode ? {state: state.ctx.local, mode: state.ctx.mode}\n      : null;\n    },\n\n    token: function (stream, state) {\n      return state.tok(stream, state);\n    }\n  };\n}, 'python', 'stex');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nCodeMirror.defineMIME('text/x-rst', 'rst');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineSimpleMode(\"rust\",{\n  start: [\n    // string and byte string\n    {regex: /b?\"/, token: \"string\", next: \"string\"},\n    // raw string and raw byte string\n    {regex: /b?r\"/, token: \"string\", next: \"string_raw\"},\n    {regex: /b?r#+\"/, token: \"string\", next: \"string_raw_hash\"},\n    // character\n    {regex: /'(?:[^'\\\\]|\\\\(?:[nrt0'\"]|x[\\da-fA-F]{2}|u\\{[\\da-fA-F]{6}\\}))'/, token: \"string-2\"},\n    // byte\n    {regex: /b'(?:[^']|\\\\(?:['\\\\nrt0]|x[\\da-fA-F]{2}))'/, token: \"string-2\"},\n\n    {regex: /(?:(?:[0-9][0-9_]*)(?:(?:[Ee][+-]?[0-9_]+)|\\.[0-9_]+(?:[Ee][+-]?[0-9_]+)?)(?:f32|f64)?)|(?:0(?:b[01_]+|(?:o[0-7_]+)|(?:x[0-9a-fA-F_]+))|(?:[0-9][0-9_]*))(?:u8|u16|u32|u64|i8|i16|i32|i64|isize|usize)?/,\n     token: \"number\"},\n    {regex: /(let(?:\\s+mut)?|fn|enum|mod|struct|type)(\\s+)([a-zA-Z_][a-zA-Z0-9_]*)/, token: [\"keyword\", null, \"def\"]},\n    {regex: /(?:abstract|alignof|as|box|break|continue|const|crate|do|else|enum|extern|fn|for|final|if|impl|in|loop|macro|match|mod|move|offsetof|override|priv|proc|pub|pure|ref|return|self|sizeof|static|struct|super|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\b/, token: \"keyword\"},\n    {regex: /\\b(?:Self|isize|usize|char|bool|u8|u16|u32|u64|f16|f32|f64|i8|i16|i32|i64|str|Option)\\b/, token: \"atom\"},\n    {regex: /\\b(?:true|false|Some|None|Ok|Err)\\b/, token: \"builtin\"},\n    {regex: /\\b(fn)(\\s+)([a-zA-Z_][a-zA-Z0-9_]*)/,\n     token: [\"keyword\", null ,\"def\"]},\n    {regex: /#!?\\[.*\\]/, token: \"meta\"},\n    {regex: /\\/\\/.*/, token: \"comment\"},\n    {regex: /\\/\\*/, token: \"comment\", next: \"comment\"},\n    {regex: /[-+\\/*=<>!]+/, token: \"operator\"},\n    {regex: /[a-zA-Z_]\\w*!/,token: \"variable-3\"},\n    {regex: /[a-zA-Z_]\\w*/, token: \"variable\"},\n    {regex: /[\\{\\[\\(]/, indent: true},\n    {regex: /[\\}\\]\\)]/, dedent: true}\n  ],\n  string: [\n    {regex: /\"/, token: \"string\", next: \"start\"},\n    {regex: /(?:[^\\\\\"]|\\\\(?:.|$))*/, token: \"string\"}\n  ],\n  string_raw: [\n    {regex: /\"/, token: \"string\", next: \"start\"},\n    {regex: /[^\"]*/, token: \"string\"}\n  ],\n  string_raw_hash: [\n    {regex: /\"#+/, token: \"string\", next: \"start\"},\n    {regex: /(?:[^\"]|\"(?!#))*/, token: \"string\"}\n  ],\n  comment: [\n    {regex: /.*?\\*\\//, token: \"comment\", next: \"start\"},\n    {regex: /.*/, token: \"comment\"}\n  ],\n  meta: {\n    dontIndentStates: [\"comment\"],\n    electricInput: /^\\s*\\}$/,\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\",\n    fold: \"brace\"\n  }\n});\n\n\nCodeMirror.defineMIME(\"text/x-rustsrc\", \"rust\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"jinja2\", function() {\n    var keywords = [\"and\", \"as\", \"block\", \"endblock\", \"by\", \"cycle\", \"debug\", \"else\", \"elif\",\n      \"extends\", \"filter\", \"endfilter\", \"firstof\", \"for\",\n      \"endfor\", \"if\", \"endif\", \"ifchanged\", \"endifchanged\",\n      \"ifequal\", \"endifequal\", \"ifnotequal\",\n      \"endifnotequal\", \"in\", \"include\", \"load\", \"not\", \"now\", \"or\",\n      \"parsed\", \"regroup\", \"reversed\", \"spaceless\",\n      \"endspaceless\", \"ssi\", \"templatetag\", \"openblock\",\n      \"closeblock\", \"openvariable\", \"closevariable\",\n      \"openbrace\", \"closebrace\", \"opencomment\",\n      \"closecomment\", \"widthratio\", \"url\", \"with\", \"endwith\",\n      \"get_current_language\", \"trans\", \"endtrans\", \"noop\", \"blocktrans\",\n      \"endblocktrans\", \"get_available_languages\",\n      \"get_current_language_bidi\", \"plural\"],\n    operator = /^[+\\-*&%=<>!?|~^]/,\n    sign = /^[:\\[\\(\\{]/,\n    atom = [\"true\", \"false\"],\n    number = /^(\\d[+\\-\\*\\/])?\\d+(\\.\\d+)?/;\n\n    keywords = new RegExp(\"((\" + keywords.join(\")|(\") + \"))\\\\b\");\n    atom = new RegExp(\"((\" + atom.join(\")|(\") + \"))\\\\b\");\n\n    function tokenBase (stream, state) {\n      var ch = stream.peek();\n\n      //Comment\n      if (state.incomment) {\n        if(!stream.skipTo(\"#}\")) {\n          stream.skipToEnd();\n        } else {\n          stream.eatWhile(/\\#|}/);\n          state.incomment = false;\n        }\n        return \"comment\";\n      //Tag\n      } else if (state.intag) {\n        //After operator\n        if(state.operator) {\n          state.operator = false;\n          if(stream.match(atom)) {\n            return \"atom\";\n          }\n          if(stream.match(number)) {\n            return \"number\";\n          }\n        }\n        //After sign\n        if(state.sign) {\n          state.sign = false;\n          if(stream.match(atom)) {\n            return \"atom\";\n          }\n          if(stream.match(number)) {\n            return \"number\";\n          }\n        }\n\n        if(state.instring) {\n          if(ch == state.instring) {\n            state.instring = false;\n          }\n          stream.next();\n          return \"string\";\n        } else if(ch == \"'\" || ch == '\"') {\n          state.instring = ch;\n          stream.next();\n          return \"string\";\n        } else if(stream.match(state.intag + \"}\") || stream.eat(\"-\") && stream.match(state.intag + \"}\")) {\n          state.intag = false;\n          return \"tag\";\n        } else if(stream.match(operator)) {\n          state.operator = true;\n          return \"operator\";\n        } else if(stream.match(sign)) {\n          state.sign = true;\n        } else {\n          if(stream.eat(\" \") || stream.sol()) {\n            if(stream.match(keywords)) {\n              return \"keyword\";\n            }\n            if(stream.match(atom)) {\n              return \"atom\";\n            }\n            if(stream.match(number)) {\n              return \"number\";\n            }\n            if(stream.sol()) {\n              stream.next();\n            }\n          } else {\n            stream.next();\n          }\n\n        }\n        return \"variable\";\n      } else if (stream.eat(\"{\")) {\n        if (stream.eat(\"#\")) {\n          state.incomment = true;\n          if(!stream.skipTo(\"#}\")) {\n            stream.skipToEnd();\n          } else {\n            stream.eatWhile(/\\#|}/);\n            state.incomment = false;\n          }\n          return \"comment\";\n        //Open tag\n        } else if (ch = stream.eat(/\\{|%/)) {\n          //Cache close tag\n          state.intag = ch;\n          if(ch == \"{\") {\n            state.intag = \"}\";\n          }\n          stream.eat(\"-\");\n          return \"tag\";\n        }\n      }\n      stream.next();\n    };\n\n    return {\n      startState: function () {\n        return {tokenize: tokenBase};\n      },\n      token: function (stream, state) {\n        return state.tokenize(stream, state);\n      }\n    };\n  });\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"),\n        require(\"../../addon/mode/multiplex\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\",\n            \"../../addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"htmlembedded\", function(config, parserConfig) {\n    return CodeMirror.multiplexingMode(CodeMirror.getMode(config, \"htmlmixed\"), {\n      open: parserConfig.open || parserConfig.scriptStartRegex || \"<%\",\n      close: parserConfig.close || parserConfig.scriptEndRegex || \"%>\",\n      mode: CodeMirror.getMode(config, parserConfig.scriptingModeSpec)\n    });\n  }, \"htmlmixed\");\n\n  CodeMirror.defineMIME(\"application/x-ejs\", {name: \"htmlembedded\", scriptingModeSpec:\"javascript\"});\n  CodeMirror.defineMIME(\"application/x-aspx\", {name: \"htmlembedded\", scriptingModeSpec:\"text/x-csharp\"});\n  CodeMirror.defineMIME(\"application/x-jsp\", {name: \"htmlembedded\", scriptingModeSpec:\"text/x-java\"});\n  CodeMirror.defineMIME(\"application/x-erb\", {name: \"htmlembedded\", scriptingModeSpec:\"ruby\"});\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  'use strict';\n  if (typeof exports == 'object' && typeof module == 'object') // CommonJS\n    mod(require('codemirror'));\n  else if (typeof define == 'function' && define.amd) // AMD\n    define(['codemirror'], mod);\n  else // Plain browser env\n    mod(window.CodeMirror);\n})(function(CodeMirror) {\n'use strict';\n\nCodeMirror.defineMode('powershell', function() {\n  function buildRegexp(patterns, options) {\n    options = options || {};\n    var prefix = options.prefix !== undefined ? options.prefix : '^';\n    var suffix = options.suffix !== undefined ? options.suffix : '\\\\b';\n\n    for (var i = 0; i < patterns.length; i++) {\n      if (patterns[i] instanceof RegExp) {\n        patterns[i] = patterns[i].source;\n      }\n      else {\n        patterns[i] = patterns[i].replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n      }\n    }\n\n    return new RegExp(prefix + '(' + patterns.join('|') + ')' + suffix, 'i');\n  }\n\n  var notCharacterOrDash = '(?=[^A-Za-z\\\\d\\\\-_]|$)';\n  var varNames = /[\\w\\-:]/\n  var keywords = buildRegexp([\n    /begin|break|catch|continue|data|default|do|dynamicparam/,\n    /else|elseif|end|exit|filter|finally|for|foreach|from|function|if|in/,\n    /param|process|return|switch|throw|trap|try|until|where|while/\n  ], { suffix: notCharacterOrDash });\n\n  var punctuation = /[\\[\\]{},;`\\.]|@[({]/;\n  var wordOperators = buildRegexp([\n    'f',\n    /b?not/,\n    /[ic]?split/, 'join',\n    /is(not)?/, 'as',\n    /[ic]?(eq|ne|[gl][te])/,\n    /[ic]?(not)?(like|match|contains)/,\n    /[ic]?replace/,\n    /b?(and|or|xor)/\n  ], { prefix: '-' });\n  var symbolOperators = /[+\\-*\\/%]=|\\+\\+|--|\\.\\.|[+\\-*&^%:=!|\\/]|<(?!#)|(?!#)>/;\n  var operators = buildRegexp([wordOperators, symbolOperators], { suffix: '' });\n\n  var numbers = /^((0x[\\da-f]+)|((\\d+\\.\\d+|\\d\\.|\\.\\d+|\\d+)(e[\\+\\-]?\\d+)?))[ld]?([kmgtp]b)?/i;\n\n  var identifiers = /^[A-Za-z\\_][A-Za-z\\-\\_\\d]*\\b/;\n\n  var symbolBuiltins = /[A-Z]:|%|\\?/i;\n  var namedBuiltins = buildRegexp([\n    /Add-(Computer|Content|History|Member|PSSnapin|Type)/,\n    /Checkpoint-Computer/,\n    /Clear-(Content|EventLog|History|Host|Item(Property)?|Variable)/,\n    /Compare-Object/,\n    /Complete-Transaction/,\n    /Connect-PSSession/,\n    /ConvertFrom-(Csv|Json|SecureString|StringData)/,\n    /Convert-Path/,\n    /ConvertTo-(Csv|Html|Json|SecureString|Xml)/,\n    /Copy-Item(Property)?/,\n    /Debug-Process/,\n    /Disable-(ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)/,\n    /Disconnect-PSSession/,\n    /Enable-(ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)/,\n    /(Enter|Exit)-PSSession/,\n    /Export-(Alias|Clixml|Console|Counter|Csv|FormatData|ModuleMember|PSSession)/,\n    /ForEach-Object/,\n    /Format-(Custom|List|Table|Wide)/,\n    new RegExp('Get-(Acl|Alias|AuthenticodeSignature|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Counter|Credential'\n      + '|Culture|Date|Event|EventLog|EventSubscriber|ExecutionPolicy|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job'\n      + '|Location|Member|Module|PfxCertificate|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration'\n      + '|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|Verb|WinEvent|WmiObject)'),\n    /Group-Object/,\n    /Import-(Alias|Clixml|Counter|Csv|LocalizedData|Module|PSSession)/,\n    /ImportSystemModules/,\n    /Invoke-(Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)/,\n    /Join-Path/,\n    /Limit-EventLog/,\n    /Measure-(Command|Object)/,\n    /Move-Item(Property)?/,\n    new RegExp('New-(Alias|Event|EventLog|Item(Property)?|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile'\n      + '|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy|WinEvent)'),\n    /Out-(Default|File|GridView|Host|Null|Printer|String)/,\n    /Pause/,\n    /(Pop|Push)-Location/,\n    /Read-Host/,\n    /Receive-(Job|PSSession)/,\n    /Register-(EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)/,\n    /Remove-(Computer|Event|EventLog|Item(Property)?|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)/,\n    /Rename-(Computer|Item(Property)?)/,\n    /Reset-ComputerMachinePassword/,\n    /Resolve-Path/,\n    /Restart-(Computer|Service)/,\n    /Restore-Computer/,\n    /Resume-(Job|Service)/,\n    /Save-Help/,\n    /Select-(Object|String|Xml)/,\n    /Send-MailMessage/,\n    new RegExp('Set-(Acl|Alias|AuthenticodeSignature|Content|Date|ExecutionPolicy|Item(Property)?|Location|PSBreakpoint|PSDebug' +\n               '|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)'),\n    /Show-(Command|ControlPanelItem|EventLog)/,\n    /Sort-Object/,\n    /Split-Path/,\n    /Start-(Job|Process|Service|Sleep|Transaction|Transcript)/,\n    /Stop-(Computer|Job|Process|Service|Transcript)/,\n    /Suspend-(Job|Service)/,\n    /TabExpansion2/,\n    /Tee-Object/,\n    /Test-(ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)/,\n    /Trace-Command/,\n    /Unblock-File/,\n    /Undo-Transaction/,\n    /Unregister-(Event|PSSessionConfiguration)/,\n    /Update-(FormatData|Help|List|TypeData)/,\n    /Use-Transaction/,\n    /Wait-(Event|Job|Process)/,\n    /Where-Object/,\n    /Write-(Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning)/,\n    /cd|help|mkdir|more|oss|prompt/,\n    /ac|asnp|cat|cd|chdir|clc|clear|clhy|cli|clp|cls|clv|cnsn|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|dnsn|ebp/,\n    /echo|epal|epcsv|epsn|erase|etsn|exsn|fc|fl|foreach|ft|fw|gal|gbp|gc|gci|gcm|gcs|gdr|ghy|gi|gjb|gl|gm|gmo|gp|gps/,\n    /group|gsn|gsnp|gsv|gu|gv|gwmi|h|history|icm|iex|ihy|ii|ipal|ipcsv|ipmo|ipsn|irm|ise|iwmi|iwr|kill|lp|ls|man|md/,\n    /measure|mi|mount|move|mp|mv|nal|ndr|ni|nmo|npssc|nsn|nv|ogv|oh|popd|ps|pushd|pwd|r|rbp|rcjb|rcsn|rd|rdr|ren|ri/,\n    /rjb|rm|rmdir|rmo|rni|rnp|rp|rsn|rsnp|rujb|rv|rvpa|rwmi|sajb|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls/,\n    /sort|sp|spjb|spps|spsv|start|sujb|sv|swmi|tee|trcm|type|where|wjb|write/\n  ], { prefix: '', suffix: '' });\n  var variableBuiltins = buildRegexp([\n    /[$?^_]|Args|ConfirmPreference|ConsoleFileName|DebugPreference|Error|ErrorActionPreference|ErrorView|ExecutionContext/,\n    /FormatEnumerationLimit|Home|Host|Input|MaximumAliasCount|MaximumDriveCount|MaximumErrorCount|MaximumFunctionCount/,\n    /MaximumHistoryCount|MaximumVariableCount|MyInvocation|NestedPromptLevel|OutputEncoding|Pid|Profile|ProgressPreference/,\n    /PSBoundParameters|PSCommandPath|PSCulture|PSDefaultParameterValues|PSEmailServer|PSHome|PSScriptRoot|PSSessionApplicationName/,\n    /PSSessionConfigurationName|PSSessionOption|PSUICulture|PSVersionTable|Pwd|ShellId|StackTrace|VerbosePreference/,\n    /WarningPreference|WhatIfPreference/,\n\n    /Event|EventArgs|EventSubscriber|Sender/,\n    /Matches|Ofs|ForEach|LastExitCode|PSCmdlet|PSItem|PSSenderInfo|This/,\n    /true|false|null/\n  ], { prefix: '\\\\$', suffix: '' });\n\n  var builtins = buildRegexp([symbolBuiltins, namedBuiltins, variableBuiltins], { suffix: notCharacterOrDash });\n\n  var grammar = {\n    keyword: keywords,\n    number: numbers,\n    operator: operators,\n    builtin: builtins,\n    punctuation: punctuation,\n    identifier: identifiers\n  };\n\n  // tokenizers\n  function tokenBase(stream, state) {\n    // Handle Comments\n    //var ch = stream.peek();\n\n    var parent = state.returnStack[state.returnStack.length - 1];\n    if (parent && parent.shouldReturnFrom(state)) {\n      state.tokenize = parent.tokenize;\n      state.returnStack.pop();\n      return state.tokenize(stream, state);\n    }\n\n    if (stream.eatSpace()) {\n      return null;\n    }\n\n    if (stream.eat('(')) {\n      state.bracketNesting += 1;\n      return 'punctuation';\n    }\n\n    if (stream.eat(')')) {\n      state.bracketNesting -= 1;\n      return 'punctuation';\n    }\n\n    for (var key in grammar) {\n      if (stream.match(grammar[key])) {\n        return key;\n      }\n    }\n\n    var ch = stream.next();\n\n    // single-quote string\n    if (ch === \"'\") {\n      return tokenSingleQuoteString(stream, state);\n    }\n\n    if (ch === '$') {\n      return tokenVariable(stream, state);\n    }\n\n    // double-quote string\n    if (ch === '\"') {\n      return tokenDoubleQuoteString(stream, state);\n    }\n\n    if (ch === '<' && stream.eat('#')) {\n      state.tokenize = tokenComment;\n      return tokenComment(stream, state);\n    }\n\n    if (ch === '#') {\n      stream.skipToEnd();\n      return 'comment';\n    }\n\n    if (ch === '@') {\n      var quoteMatch = stream.eat(/[\"']/);\n      if (quoteMatch && stream.eol()) {\n        state.tokenize = tokenMultiString;\n        state.startQuote = quoteMatch[0];\n        return tokenMultiString(stream, state);\n      } else if (stream.eol()) {\n        return 'error';\n      } else if (stream.peek().match(/[({]/)) {\n        return 'punctuation';\n      } else if (stream.peek().match(varNames)) {\n        // splatted variable\n        return tokenVariable(stream, state);\n      }\n    }\n    return 'error';\n  }\n\n  function tokenSingleQuoteString(stream, state) {\n    var ch;\n    while ((ch = stream.peek()) != null) {\n      stream.next();\n\n      if (ch === \"'\" && !stream.eat(\"'\")) {\n        state.tokenize = tokenBase;\n        return 'string';\n      }\n    }\n\n    return 'error';\n  }\n\n  function tokenDoubleQuoteString(stream, state) {\n    var ch;\n    while ((ch = stream.peek()) != null) {\n      if (ch === '$') {\n        state.tokenize = tokenStringInterpolation;\n        return 'string';\n      }\n\n      stream.next();\n      if (ch === '`') {\n        stream.next();\n        continue;\n      }\n\n      if (ch === '\"' && !stream.eat('\"')) {\n        state.tokenize = tokenBase;\n        return 'string';\n      }\n    }\n\n    return 'error';\n  }\n\n  function tokenStringInterpolation(stream, state) {\n    return tokenInterpolation(stream, state, tokenDoubleQuoteString);\n  }\n\n  function tokenMultiStringReturn(stream, state) {\n    state.tokenize = tokenMultiString;\n    state.startQuote = '\"'\n    return tokenMultiString(stream, state);\n  }\n\n  function tokenHereStringInterpolation(stream, state) {\n    return tokenInterpolation(stream, state, tokenMultiStringReturn);\n  }\n\n  function tokenInterpolation(stream, state, parentTokenize) {\n    if (stream.match('$(')) {\n      var savedBracketNesting = state.bracketNesting;\n      state.returnStack.push({\n        /*jshint loopfunc:true */\n        shouldReturnFrom: function(state) {\n          return state.bracketNesting === savedBracketNesting;\n        },\n        tokenize: parentTokenize\n      });\n      state.tokenize = tokenBase;\n      state.bracketNesting += 1;\n      return 'punctuation';\n    } else {\n      stream.next();\n      state.returnStack.push({\n        shouldReturnFrom: function() { return true; },\n        tokenize: parentTokenize\n      });\n      state.tokenize = tokenVariable;\n      return state.tokenize(stream, state);\n    }\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (maybeEnd && ch == '>') {\n          state.tokenize = tokenBase;\n          break;\n      }\n      maybeEnd = (ch === '#');\n    }\n    return 'comment';\n  }\n\n  function tokenVariable(stream, state) {\n    var ch = stream.peek() || \"\";\n    if (stream.eat('{')) {\n      state.tokenize = tokenVariableWithBraces;\n      return tokenVariableWithBraces(stream, state);\n    } else if (ch != undefined && ch.match(varNames)) {\n      stream.eatWhile(varNames);\n      state.tokenize = tokenBase;\n      return 'variable-2';\n    } else {\n      state.tokenize = tokenBase;\n      return 'error';\n    }\n  }\n\n  function tokenVariableWithBraces(stream, state) {\n    var ch;\n    while ((ch = stream.next()) != null) {\n      if (ch === '}') {\n        state.tokenize = tokenBase;\n        break;\n      }\n    }\n    return 'variable-2';\n  }\n\n  function tokenMultiString(stream, state) {\n    var quote = state.startQuote;\n    if (stream.sol() && stream.match(new RegExp(quote + '@'))) {\n      state.tokenize = tokenBase;\n    }\n    else if (quote === '\"') {\n      while (!stream.eol()) {\n        var ch = stream.peek();\n        if (ch === '$') {\n          state.tokenize = tokenHereStringInterpolation;\n          return 'string';\n        }\n\n        stream.next();\n        if (ch === '`') {\n          stream.next();\n        }\n      }\n    }\n    else {\n      stream.skipToEnd();\n    }\n\n    return 'string';\n  }\n\n  var external = {\n    startState: function() {\n      return {\n        returnStack: [],\n        bracketNesting: 0,\n        tokenize: tokenBase\n      };\n    },\n\n    token: function(stream, state) {\n      return state.tokenize(stream, state);\n    },\n\n    blockCommentStart: '<#',\n    blockCommentEnd: '#>',\n    lineComment: '#',\n    fold: 'brace'\n  };\n  return external;\n});\n\nCodeMirror.defineMIME('application/x-powershell', 'powershell');\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  // Collect all Dockerfile directives\n  var instructions = [\"from\", \"maintainer\", \"run\", \"cmd\", \"expose\", \"env\",\n                      \"add\", \"copy\", \"entrypoint\", \"volume\", \"user\",\n                      \"workdir\", \"onbuild\"],\n      instructionRegex = \"(\" + instructions.join('|') + \")\",\n      instructionOnlyLine = new RegExp(instructionRegex + \"\\\\s*$\", \"i\"),\n      instructionWithArguments = new RegExp(instructionRegex + \"(\\\\s+)\", \"i\");\n\n  CodeMirror.defineSimpleMode(\"dockerfile\", {\n    start: [\n      // Block comment: This is a line starting with a comment\n      {\n        regex: /#.*$/,\n        token: \"comment\"\n      },\n      // Highlight an instruction without any arguments (for convenience)\n      {\n        regex: instructionOnlyLine,\n        token: \"variable-2\"\n      },\n      // Highlight an instruction followed by arguments\n      {\n        regex: instructionWithArguments,\n        token: [\"variable-2\", null],\n        next: \"arguments\"\n      },\n      {\n        regex: /./,\n        token: null\n      }\n    ],\n    arguments: [\n      {\n        // Line comment without instruction arguments is an error\n        regex: /#.*$/,\n        token: \"error\",\n        next: \"start\"\n      },\n      {\n        regex: /[^#]+\\\\$/,\n        token: null\n      },\n      {\n        // Match everything except for the inline comment\n        regex: /[^#]+/,\n        token: null,\n        next: \"start\"\n      },\n      {\n        regex: /$/,\n        token: null,\n        next: \"start\"\n      },\n      // Fail safe return to start\n      {\n        token: null,\n        next: \"start\"\n      }\n    ],\n      meta: {\n          lineComment: \"#\"\n      }\n  });\n\n  CodeMirror.defineMIME(\"text/x-dockerfile\", \"dockerfile\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n\n  // Depth means the amount of open braces in JS context, in XML\n  // context 0 means not in tag, 1 means in tag, and 2 means in tag\n  // and js block comment.\n  function Context(state, mode, depth, prev) {\n    this.state = state; this.mode = mode; this.depth = depth; this.prev = prev\n  }\n\n  function copyContext(context) {\n    return new Context(CodeMirror.copyState(context.mode, context.state),\n                       context.mode,\n                       context.depth,\n                       context.prev && copyContext(context.prev))\n  }\n\n  CodeMirror.defineMode(\"jsx\", function(config, modeConfig) {\n    var xmlMode = CodeMirror.getMode(config, {name: \"xml\", allowMissing: true, multilineTagIndentPastTag: false})\n    var jsMode = CodeMirror.getMode(config, modeConfig && modeConfig.base || \"javascript\")\n\n    function flatXMLIndent(state) {\n      var tagName = state.tagName\n      state.tagName = null\n      var result = xmlMode.indent(state, \"\")\n      state.tagName = tagName\n      return result\n    }\n\n    function token(stream, state) {\n      if (state.context.mode == xmlMode)\n        return xmlToken(stream, state, state.context)\n      else\n        return jsToken(stream, state, state.context)\n    }\n\n    function xmlToken(stream, state, cx) {\n      if (cx.depth == 2) { // Inside a JS /* */ comment\n        if (stream.match(/^.*?\\*\\//)) cx.depth = 1\n        else stream.skipToEnd()\n        return \"comment\"\n      }\n\n      if (stream.peek() == \"{\") {\n        xmlMode.skipAttribute(cx.state)\n\n        var indent = flatXMLIndent(cx.state), xmlContext = cx.state.context\n        // If JS starts on same line as tag\n        if (xmlContext && stream.match(/^[^>]*>\\s*$/, false)) {\n          while (xmlContext.prev && !xmlContext.startOfLine)\n            xmlContext = xmlContext.prev\n          // If tag starts the line, use XML indentation level\n          if (xmlContext.startOfLine) indent -= config.indentUnit\n          // Else use JS indentation level\n          else if (cx.prev.state.lexical) indent = cx.prev.state.lexical.indented\n        // Else if inside of tag\n        } else if (cx.depth == 1) {\n          indent += config.indentUnit\n        }\n\n        state.context = new Context(CodeMirror.startState(jsMode, indent),\n                                    jsMode, 0, state.context)\n        return null\n      }\n\n      if (cx.depth == 1) { // Inside of tag\n        if (stream.peek() == \"<\") { // Tag inside of tag\n          xmlMode.skipAttribute(cx.state)\n          state.context = new Context(CodeMirror.startState(xmlMode, flatXMLIndent(cx.state)),\n                                      xmlMode, 0, state.context)\n          return null\n        } else if (stream.match(\"//\")) {\n          stream.skipToEnd()\n          return \"comment\"\n        } else if (stream.match(\"/*\")) {\n          cx.depth = 2\n          return token(stream, state)\n        }\n      }\n\n      var style = xmlMode.token(stream, cx.state), cur = stream.current(), stop\n      if (/\\btag\\b/.test(style)) {\n        if (/>$/.test(cur)) {\n          if (cx.state.context) cx.depth = 0\n          else state.context = state.context.prev\n        } else if (/^</.test(cur)) {\n          cx.depth = 1\n        }\n      } else if (!style && (stop = cur.indexOf(\"{\")) > -1) {\n        stream.backUp(cur.length - stop)\n      }\n      return style\n    }\n\n    function jsToken(stream, state, cx) {\n      if (stream.peek() == \"<\" && jsMode.expressionAllowed(stream, cx.state)) {\n        jsMode.skipExpression(cx.state)\n        state.context = new Context(CodeMirror.startState(xmlMode, jsMode.indent(cx.state, \"\")),\n                                    xmlMode, 0, state.context)\n        return null\n      }\n\n      var style = jsMode.token(stream, cx.state)\n      if (!style && cx.depth != null) {\n        var cur = stream.current()\n        if (cur == \"{\") {\n          cx.depth++\n        } else if (cur == \"}\") {\n          if (--cx.depth == 0) state.context = state.context.prev\n        }\n      }\n      return style\n    }\n\n    return {\n      startState: function() {\n        return {context: new Context(CodeMirror.startState(jsMode), jsMode)}\n      },\n\n      copyState: function(state) {\n        return {context: copyContext(state.context)}\n      },\n\n      token: token,\n\n      indent: function(state, textAfter, fullLine) {\n        return state.context.mode.indent(state.context.state, textAfter, fullLine)\n      },\n\n      innerMode: function(state) {\n        return state.context\n      }\n    }\n  }, \"xml\", \"javascript\")\n\n  CodeMirror.defineMIME(\"text/jsx\", \"jsx\")\n  CodeMirror.defineMIME(\"text/typescript-jsx\", {name: \"jsx\", base: {name: \"javascript\", typescript: true}})\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function (mod) {\n  \"use strict\";\n  if (typeof exports === \"object\" && typeof module === \"object\") {// CommonJS\n    mod(require(\"../../lib/codemirror\"),\n        require(\"../../addon/mode/overlay\"),\n        require(\"../xml/xml\"),\n        require(\"../javascript/javascript\"),\n        require(\"../coffeescript/coffeescript\"),\n        require(\"../css/css\"),\n        require(\"../sass/sass\"),\n        require(\"../stylus/stylus\"),\n        require(\"../pug/pug\"),\n        require(\"../handlebars/handlebars\"));\n  } else if (typeof define === \"function\" && define.amd) { // AMD\n    define([\"../../lib/codemirror\",\n            \"../../addon/mode/overlay\",\n            \"../xml/xml\",\n            \"../javascript/javascript\",\n            \"../coffeescript/coffeescript\",\n            \"../css/css\",\n            \"../sass/sass\",\n            \"../stylus/stylus\",\n            \"../pug/pug\",\n            \"../handlebars/handlebars\"], mod);\n  } else { // Plain browser env\n    mod(CodeMirror);\n  }\n})(function (CodeMirror) {\n  var tagLanguages = {\n    script: [\n      [\"lang\", /coffee(script)?/, \"coffeescript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?coffee(?:script)?$/, \"coffeescript\"]\n    ],\n    style: [\n      [\"lang\", /^stylus$/i, \"stylus\"],\n      [\"lang\", /^sass$/i, \"sass\"],\n      [\"type\", /^(text\\/)?(x-)?styl(us)?$/i, \"stylus\"],\n      [\"type\", /^text\\/sass/i, \"sass\"]\n    ],\n    template: [\n      [\"lang\", /^vue-template$/i, \"vue\"],\n      [\"lang\", /^pug$/i, \"pug\"],\n      [\"lang\", /^handlebars$/i, \"handlebars\"],\n      [\"type\", /^(text\\/)?(x-)?pug$/i, \"pug\"],\n      [\"type\", /^text\\/x-handlebars-template$/i, \"handlebars\"],\n      [null, null, \"vue-template\"]\n    ]\n  };\n\n  CodeMirror.defineMode(\"vue-template\", function (config, parserConfig) {\n    var mustacheOverlay = {\n      token: function (stream) {\n        if (stream.match(/^\\{\\{.*?\\}\\}/)) return \"meta mustache\";\n        while (stream.next() && !stream.match(\"{{\", false)) {}\n        return null;\n      }\n    };\n    return CodeMirror.overlayMode(CodeMirror.getMode(config, parserConfig.backdrop || \"text/html\"), mustacheOverlay);\n  });\n\n  CodeMirror.defineMode(\"vue\", function (config) {\n    return CodeMirror.getMode(config, {name: \"htmlmixed\", tags: tagLanguages});\n  }, \"htmlmixed\", \"xml\", \"javascript\", \"coffeescript\", \"css\", \"sass\", \"stylus\", \"pug\", \"handlebars\");\n\n  CodeMirror.defineMIME(\"script/x-vue\", \"vue\");\n  CodeMirror.defineMIME(\"text/x-vue\", \"vue\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Author: Jan T. Sott (http://github.com/idleberg)\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineSimpleMode(\"nsis\",{\n  start:[\n    // Numbers\n    {regex: /(?:[+-]?)(?:0x[\\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\\d+.?\\d*)/, token: \"number\"},\n\n    // Strings\n    { regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/, token: \"string\" },\n    { regex: /'(?:[^\\\\']|\\\\.)*'?/, token: \"string\" },\n    { regex: /`(?:[^\\\\`]|\\\\.)*`?/, token: \"string\" },\n\n    // Compile Time Commands\n    {regex: /^\\s*(?:\\!(include|addincludedir|addplugindir|appendfile|cd|delfile|echo|error|execute|packhdr|finalize|getdllversion|system|tempfile|warning|verbose|define|undef|insertmacro|makensis|searchparse|searchreplace))\\b/, token: \"keyword\"},\n\n    // Conditional Compilation\n    {regex: /^\\s*(?:\\!(if(?:n?def)?|ifmacron?def|macro))\\b/, token: \"keyword\", indent: true},\n    {regex: /^\\s*(?:\\!(else|endif|macroend))\\b/, token: \"keyword\", dedent: true},\n\n    // Runtime Commands\n    {regex: /^\\s*(?:Abort|AddBrandingImage|AddSize|AllowRootDirInstall|AllowSkipFiles|AutoCloseWindow|BGFont|BGGradient|BrandingText|BringToFront|Call|CallInstDLL|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|CreateDirectory|CreateFont|CreateShortCut|Delete|DeleteINISec|DeleteINIStr|DeleteRegKey|DeleteRegValue|DetailPrint|DetailsButtonText|DirText|DirVar|DirVerify|EnableWindow|EnumRegKey|EnumRegValue|Exch|Exec|ExecShell|ExecWait|ExpandEnvStrings|File|FileBufSize|FileClose|FileErrorText|FileOpen|FileRead|FileReadByte|FileReadUTF16LE|FileReadWord|FileWriteUTF16LE|FileSeek|FileWrite|FileWriteByte|FileWriteWord|FindClose|FindFirst|FindNext|FindWindow|FlushINI|GetCurInstType|GetCurrentAddress|GetDlgItem|GetDLLVersion|GetDLLVersionLocal|GetErrorLevel|GetFileTime|GetFileTimeLocal|GetFullPathName|GetFunctionAddress|GetInstDirError|GetLabelAddress|GetTempFileName|Goto|HideWindow|Icon|IfAbort|IfErrors|IfFileExists|IfRebootFlag|IfSilent|InitPluginsDir|InstallButtonText|InstallColors|InstallDir|InstallDirRegKey|InstProgressFlags|InstType|InstTypeGetText|InstTypeSetText|IntCmp|IntCmpU|IntFmt|IntOp|IsWindow|LangString|LicenseBkColor|LicenseData|LicenseForceSelection|LicenseLangString|LicenseText|LoadLanguageFile|LockWindow|LogSet|LogText|ManifestDPIAware|ManifestSupportedOS|MessageBox|MiscButtonText|Name|Nop|OutFile|Page|PageCallbacks|Pop|Push|Quit|ReadEnvStr|ReadINIStr|ReadRegDWORD|ReadRegStr|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|SectionGetFlags|SectionGetInstTypes|SectionGetSize|SectionGetText|SectionIn|SectionSetFlags|SectionSetInstTypes|SectionSetSize|SectionSetText|SendMessage|SetAutoClose|SetBrandingImage|SetCompress|SetCompressor|SetCompressorDictSize|SetCtlColors|SetCurInstType|SetDatablockOptimize|SetDateSave|SetDetailsPrint|SetDetailsView|SetErrorLevel|SetErrors|SetFileAttributes|SetFont|SetOutPath|SetOverwrite|SetRebootFlag|SetRegView|SetShellVarContext|SetSilent|ShowInstDetails|ShowUninstDetails|ShowWindow|SilentInstall|SilentUnInstall|Sleep|SpaceTexts|StrCmp|StrCmpS|StrCpy|StrLen|SubCaption|Unicode|UninstallButtonText|UninstallCaption|UninstallIcon|UninstallSubCaption|UninstallText|UninstPage|UnRegDLL|Var|VIAddVersionKey|VIFileVersion|VIProductVersion|WindowIcon|WriteINIStr|WriteRegBin|WriteRegDWORD|WriteRegExpandStr|WriteRegStr|WriteUninstaller|XPStyle)\\b/, token: \"keyword\"},\n    {regex: /^\\s*(?:Function|PageEx|Section(?:Group)?)\\b/, token: \"keyword\", indent: true},\n    {regex: /^\\s*(?:(Function|PageEx|Section(?:Group)?)End)\\b/, token: \"keyword\", dedent: true},\n\n    // Command Options\n    {regex: /\\b(?:ARCHIVE|FILE_ATTRIBUTE_ARCHIVE|FILE_ATTRIBUTE_HIDDEN|FILE_ATTRIBUTE_NORMAL|FILE_ATTRIBUTE_OFFLINE|FILE_ATTRIBUTE_READONLY|FILE_ATTRIBUTE_SYSTEM|FILE_ATTRIBUTE_TEMPORARY|HIDDEN|HKCC|HKCR|HKCU|HKDD|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_DYN_DATA|HKEY_LOCAL_MACHINE|HKEY_PERFORMANCE_DATA|HKEY_USERS|HKLM|HKPD|HKU|IDABORT|IDCANCEL|IDD_DIR|IDD_INST|IDD_INSTFILES|IDD_LICENSE|IDD_SELCOM|IDD_UNINST|IDD_VERIFY|IDIGNORE|IDNO|IDOK|IDRETRY|IDYES|MB_ABORTRETRYIGNORE|MB_DEFBUTTON1|MB_DEFBUTTON2|MB_DEFBUTTON3|MB_DEFBUTTON4|MB_ICONEXCLAMATION|MB_ICONINFORMATION|MB_ICONQUESTION|MB_ICONSTOP|MB_OK|MB_OKCANCEL|MB_RETRYCANCEL|MB_RIGHT|MB_RTLREADING|MB_SETFOREGROUND|MB_TOPMOST|MB_USERICON|MB_YESNO|MB_YESNOCANCEL|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SW_HIDE|SW_SHOWDEFAULT|SW_SHOWMAXIMIZED|SW_SHOWMINIMIZED|SW_SHOWNORMAL|SYSTEM|TEMPORARY)\\b/, token: \"atom\"},\n    {regex: /\\b(?:admin|all|auto|both|bottom|bzip2|components|current|custom|directory|force|hide|highest|ifdiff|ifnewer|instfiles|lastused|leave|left|license|listonly|lzma|nevershow|none|normal|notset|right|show|silent|silentlog|textonly|top|try|un\\.components|un\\.custom|un\\.directory|un\\.instfiles|un\\.license|uninstConfirm|user|Win10|Win7|Win8|WinVista|zlib)\\b/, token: \"builtin\"},\n\n    // LogicLib.nsh\n    {regex: /\\$\\{(?:And(?:If(?:Not)?|Unless)|Break|Case(?:Else)?|Continue|Default|Do(?:Until|While)?|Else(?:If(?:Not)?|Unless)?|End(?:If|Select|Switch)|Exit(?:Do|For|While)|For(?:Each)?|If(?:Cmd|Not(?:Then)?|Then)?|Loop(?:Until|While)?|Or(?:If(?:Not)?|Unless)|Select|Switch|Unless|While)\\}/, token: \"variable-2\", indent: true},\n\n    // FileFunc.nsh\n    {regex: /\\$\\{(?:BannerTrimPath|DirState|DriveSpace|Get(BaseName|Drives|ExeName|ExePath|FileAttributes|FileExt|FileName|FileVersion|Options|OptionsS|Parameters|Parent|Root|Size|Time)|Locate|RefreshShellIcons)\\}/, token: \"variable-2\", dedent: true},\n\n    // Memento.nsh\n    {regex: /\\$\\{(?:Memento(?:Section(?:Done|End|Restore|Save)?|UnselectedSection))\\}/, token: \"variable-2\", dedent: true},\n\n    // TextFunc.nsh\n    {regex: /\\$\\{(?:Config(?:Read|ReadS|Write|WriteS)|File(?:Join|ReadFromEnd|Recode)|Line(?:Find|Read|Sum)|Text(?:Compare|CompareS)|TrimNewLines)\\}/, token: \"variable-2\", dedent: true},\n\n    // WinVer.nsh\n    {regex: /\\$\\{(?:(?:At(?:Least|Most)|Is)(?:ServicePack|Win(?:7|8|10|95|98|200(?:0|3|8(?:R2)?)|ME|NT4|Vista|XP))|Is(?:NT|Server))\\}/, token: \"variable\", dedent: true},\n\n    // WordFunc.nsh\n    {regex: /\\$\\{(?:StrFilterS?|Version(?:Compare|Convert)|Word(?:AddS?|Find(?:(?:2|3)X)?S?|InsertS?|ReplaceS?))\\}/, token: \"variable-2\", dedent: true},\n\n    // x64.nsh\n    {regex: /\\$\\{(?:RunningX64)\\}/, token: \"variable\", dedent: true},\n    {regex: /\\$\\{(?:Disable|Enable)X64FSRedirection\\}/, token: \"variable-2\", dedent: true},\n\n    // Line Comment\n    {regex: /(#|;).*/, token: \"comment\"},\n\n    // Block Comment\n    {regex: /\\/\\*/, token: \"comment\", next: \"comment\"},\n\n    // Operator\n    {regex: /[-+\\/*=<>!]+/, token: \"operator\"},\n\n    // Variable\n    {regex: /\\$\\w+/, token: \"variable\"},\n\n    // Constant\n    {regex: /\\${[\\w\\.:-]+}/, token: \"variable-2\"},\n\n    // Language String\n    {regex: /\\$\\([\\w\\.:-]+\\)/, token: \"variable-3\"}\n  ],\n  comment: [\n    {regex: /.*?\\*\\//, token: \"comment\", next: \"start\"},\n    {regex: /.*/, token: \"comment\"}\n  ],\n  meta: {\n    electricInput: /^\\s*((Function|PageEx|Section|Section(Group)?)End|(\\!(endif|macroend))|\\$\\{(End(If|Unless|While)|Loop(Until)|Next)\\})$/,\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: [\"#\", \";\"]\n  }\n});\n\nCodeMirror.defineMIME(\"text/x-nsis\", \"nsis\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Mathematica mode copyright (c) 2015 by Calin Barbat\n// Based on code by Patrick Scheibe (halirutan)\n// See: https://github.com/halirutan/Mathematica-Source-Highlighting/tree/master/src/lang-mma.js\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('mathematica', function(_config, _parserConfig) {\n\n  // used pattern building blocks\n  var Identifier = '[a-zA-Z\\\\$][a-zA-Z0-9\\\\$]*';\n  var pBase      = \"(?:\\\\d+)\";\n  var pFloat     = \"(?:\\\\.\\\\d+|\\\\d+\\\\.\\\\d*|\\\\d+)\";\n  var pFloatBase = \"(?:\\\\.\\\\w+|\\\\w+\\\\.\\\\w*|\\\\w+)\";\n  var pPrecision = \"(?:`(?:`?\"+pFloat+\")?)\";\n\n  // regular expressions\n  var reBaseForm        = new RegExp('(?:'+pBase+'(?:\\\\^\\\\^'+pFloatBase+pPrecision+'?(?:\\\\*\\\\^[+-]?\\\\d+)?))');\n  var reFloatForm       = new RegExp('(?:' + pFloat + pPrecision + '?(?:\\\\*\\\\^[+-]?\\\\d+)?)');\n  var reIdInContext     = new RegExp('(?:`?)(?:' + Identifier + ')(?:`(?:' + Identifier + '))*(?:`?)');\n\n  function tokenBase(stream, state) {\n    var ch;\n\n    // get next character\n    ch = stream.next();\n\n    // string\n    if (ch === '\"') {\n      state.tokenize = tokenString;\n      return state.tokenize(stream, state);\n    }\n\n    // comment\n    if (ch === '(') {\n      if (stream.eat('*')) {\n        state.commentLevel++;\n        state.tokenize = tokenComment;\n        return state.tokenize(stream, state);\n      }\n    }\n\n    // go back one character\n    stream.backUp(1);\n\n    // look for numbers\n    // Numbers in a baseform\n    if (stream.match(reBaseForm, true, false)) {\n      return 'number';\n    }\n\n    // Mathematica numbers. Floats (1.2, .2, 1.) can have optionally a precision (`float) or an accuracy definition\n    // (``float). Note: while 1.2` is possible 1.2`` is not. At the end an exponent (float*^+12) can follow.\n    if (stream.match(reFloatForm, true, false)) {\n      return 'number';\n    }\n\n    /* In[23] and Out[34] */\n    if (stream.match(/(?:In|Out)\\[[0-9]*\\]/, true, false)) {\n      return 'atom';\n    }\n\n    // usage\n    if (stream.match(/([a-zA-Z\\$]+(?:`?[a-zA-Z0-9\\$])*::usage)/, true, false)) {\n      return 'meta';\n    }\n\n    // message\n    if (stream.match(/([a-zA-Z\\$]+(?:`?[a-zA-Z0-9\\$])*::[a-zA-Z\\$][a-zA-Z0-9\\$]*):?/, true, false)) {\n      return 'string-2';\n    }\n\n    // this makes a look-ahead match for something like variable:{_Integer}\n    // the match is then forwarded to the mma-patterns tokenizer.\n    if (stream.match(/([a-zA-Z\\$][a-zA-Z0-9\\$]*\\s*:)(?:(?:[a-zA-Z\\$][a-zA-Z0-9\\$]*)|(?:[^:=>~@\\^\\&\\*\\)\\[\\]'\\?,\\|])).*/, true, false)) {\n      return 'variable-2';\n    }\n\n    // catch variables which are used together with Blank (_), BlankSequence (__) or BlankNullSequence (___)\n    // Cannot start with a number, but can have numbers at any other position. Examples\n    // blub__Integer, a1_, b34_Integer32\n    if (stream.match(/[a-zA-Z\\$][a-zA-Z0-9\\$]*_+[a-zA-Z\\$][a-zA-Z0-9\\$]*/, true, false)) {\n      return 'variable-2';\n    }\n    if (stream.match(/[a-zA-Z\\$][a-zA-Z0-9\\$]*_+/, true, false)) {\n      return 'variable-2';\n    }\n    if (stream.match(/_+[a-zA-Z\\$][a-zA-Z0-9\\$]*/, true, false)) {\n      return 'variable-2';\n    }\n\n    // Named characters in Mathematica, like \\[Gamma].\n    if (stream.match(/\\\\\\[[a-zA-Z\\$][a-zA-Z0-9\\$]*\\]/, true, false)) {\n      return 'variable-3';\n    }\n\n    // Match all braces separately\n    if (stream.match(/(?:\\[|\\]|{|}|\\(|\\))/, true, false)) {\n      return 'bracket';\n    }\n\n    // Catch Slots (#, ##, #3, ##9 and the V10 named slots #name). I have never seen someone using more than one digit after #, so we match\n    // only one.\n    if (stream.match(/(?:#[a-zA-Z\\$][a-zA-Z0-9\\$]*|#+[0-9]?)/, true, false)) {\n      return 'variable-2';\n    }\n\n    // Literals like variables, keywords, functions\n    if (stream.match(reIdInContext, true, false)) {\n      return 'keyword';\n    }\n\n    // operators. Note that operators like @@ or /; are matched separately for each symbol.\n    if (stream.match(/(?:\\\\|\\+|\\-|\\*|\\/|,|;|\\.|:|@|~|=|>|<|&|\\||_|`|'|\\^|\\?|!|%)/, true, false)) {\n      return 'operator';\n    }\n\n    // everything else is an error\n    stream.next(); // advance the stream.\n    return 'error';\n  }\n\n  function tokenString(stream, state) {\n    var next, end = false, escaped = false;\n    while ((next = stream.next()) != null) {\n      if (next === '\"' && !escaped) {\n        end = true;\n        break;\n      }\n      escaped = !escaped && next === '\\\\';\n    }\n    if (end && !escaped) {\n      state.tokenize = tokenBase;\n    }\n    return 'string';\n  };\n\n  function tokenComment(stream, state) {\n    var prev, next;\n    while(state.commentLevel > 0 && (next = stream.next()) != null) {\n      if (prev === '(' && next === '*') state.commentLevel++;\n      if (prev === '*' && next === ')') state.commentLevel--;\n      prev = next;\n    }\n    if (state.commentLevel <= 0) {\n      state.tokenize = tokenBase;\n    }\n    return 'comment';\n  }\n\n  return {\n    startState: function() {return {tokenize: tokenBase, commentLevel: 0};},\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      return state.tokenize(stream, state);\n    },\n    blockCommentStart: \"(*\",\n    blockCommentEnd: \"*)\"\n  };\n});\n\nCodeMirror.defineMIME('text/x-mathematica', {\n  name: 'mathematica'\n});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('tiki', function(config) {\n  function inBlock(style, terminator, returnTokenizer) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n\n      if (returnTokenizer) state.tokenize = returnTokenizer;\n\n      return style;\n    };\n  }\n\n  function inLine(style) {\n    return function(stream, state) {\n      while(!stream.eol()) {\n        stream.next();\n      }\n      state.tokenize = inText;\n      return style;\n    };\n  }\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var sol = stream.sol();\n    var ch = stream.next();\n\n    //non start of line\n    switch (ch) { //switch is generally much faster than if, so it is used here\n    case \"{\": //plugin\n      stream.eat(\"/\");\n      stream.eatSpace();\n      stream.eatWhile(/[^\\s\\u00a0=\\\"\\'\\/?(}]/);\n      state.tokenize = inPlugin;\n      return \"tag\";\n    case \"_\": //bold\n      if (stream.eat(\"_\"))\n        return chain(inBlock(\"strong\", \"__\", inText));\n      break;\n    case \"'\": //italics\n      if (stream.eat(\"'\"))\n        return chain(inBlock(\"em\", \"''\", inText));\n      break;\n    case \"(\":// Wiki Link\n      if (stream.eat(\"(\"))\n        return chain(inBlock(\"variable-2\", \"))\", inText));\n      break;\n    case \"[\":// Weblink\n      return chain(inBlock(\"variable-3\", \"]\", inText));\n      break;\n    case \"|\": //table\n      if (stream.eat(\"|\"))\n        return chain(inBlock(\"comment\", \"||\"));\n      break;\n    case \"-\":\n      if (stream.eat(\"=\")) {//titleBar\n        return chain(inBlock(\"header string\", \"=-\", inText));\n      } else if (stream.eat(\"-\")) {//deleted\n        return chain(inBlock(\"error tw-deleted\", \"--\", inText));\n      }\n      break;\n    case \"=\": //underline\n      if (stream.match(\"==\"))\n        return chain(inBlock(\"tw-underline\", \"===\", inText));\n      break;\n    case \":\":\n      if (stream.eat(\":\"))\n        return chain(inBlock(\"comment\", \"::\"));\n      break;\n    case \"^\": //box\n      return chain(inBlock(\"tw-box\", \"^\"));\n      break;\n    case \"~\": //np\n      if (stream.match(\"np~\"))\n        return chain(inBlock(\"meta\", \"~/np~\"));\n      break;\n    }\n\n    //start of line types\n    if (sol) {\n      switch (ch) {\n      case \"!\": //header at start of line\n        if (stream.match('!!!!!')) {\n          return chain(inLine(\"header string\"));\n        } else if (stream.match('!!!!')) {\n          return chain(inLine(\"header string\"));\n        } else if (stream.match('!!!')) {\n          return chain(inLine(\"header string\"));\n        } else if (stream.match('!!')) {\n          return chain(inLine(\"header string\"));\n        } else {\n          return chain(inLine(\"header string\"));\n        }\n        break;\n      case \"*\": //unordered list line item, or <li /> at start of line\n      case \"#\": //ordered list line item, or <li /> at start of line\n      case \"+\": //ordered list line item, or <li /> at start of line\n        return chain(inLine(\"tw-listitem bracket\"));\n        break;\n      }\n    }\n\n    //stream.eatWhile(/[&{]/); was eating up plugins, turned off to act less like html and more like tiki\n    return null;\n  }\n\n  var indentUnit = config.indentUnit;\n\n  // Return variables for tokenizers\n  var pluginName, type;\n  function inPlugin(stream, state) {\n    var ch = stream.next();\n    var peek = stream.peek();\n\n    if (ch == \"}\") {\n      state.tokenize = inText;\n      //type = ch == \")\" ? \"endPlugin\" : \"selfclosePlugin\"; inPlugin\n      return \"tag\";\n    } else if (ch == \"(\" || ch == \")\") {\n      return \"bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n\n      if (peek == \">\") {\n        stream.next();\n        peek = stream.peek();\n      }\n\n      //here we detect values directly after equal character with no quotes\n      if (!/[\\'\\\"]/.test(peek)) {\n        state.tokenize = inAttributeNoQuote();\n      }\n      //end detect values\n\n      return \"operator\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      return state.tokenize(stream, state);\n    } else {\n      stream.eatWhile(/[^\\s\\u00a0=\\\"\\'\\/?]/);\n      return \"keyword\";\n    }\n  }\n\n  function inAttribute(quote) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inPlugin;\n          break;\n        }\n      }\n      return \"string\";\n    };\n  }\n\n  function inAttributeNoQuote() {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        var ch = stream.next();\n        var peek = stream.peek();\n        if (ch == \" \" || ch == \",\" || /[ )}]/.test(peek)) {\n      state.tokenize = inPlugin;\n      break;\n    }\n  }\n  return \"string\";\n};\n                     }\n\nvar curState, setStyle;\nfunction pass() {\n  for (var i = arguments.length - 1; i >= 0; i--) curState.cc.push(arguments[i]);\n}\n\nfunction cont() {\n  pass.apply(null, arguments);\n  return true;\n}\n\nfunction pushContext(pluginName, startOfLine) {\n  var noIndent = curState.context && curState.context.noIndent;\n  curState.context = {\n    prev: curState.context,\n    pluginName: pluginName,\n    indent: curState.indented,\n    startOfLine: startOfLine,\n    noIndent: noIndent\n  };\n}\n\nfunction popContext() {\n  if (curState.context) curState.context = curState.context.prev;\n}\n\nfunction element(type) {\n  if (type == \"openPlugin\") {curState.pluginName = pluginName; return cont(attributes, endplugin(curState.startOfLine));}\n  else if (type == \"closePlugin\") {\n    var err = false;\n    if (curState.context) {\n      err = curState.context.pluginName != pluginName;\n      popContext();\n    } else {\n      err = true;\n    }\n    if (err) setStyle = \"error\";\n    return cont(endcloseplugin(err));\n  }\n  else if (type == \"string\") {\n    if (!curState.context || curState.context.name != \"!cdata\") pushContext(\"!cdata\");\n    if (curState.tokenize == inText) popContext();\n    return cont();\n  }\n  else return cont();\n}\n\nfunction endplugin(startOfLine) {\n  return function(type) {\n    if (\n      type == \"selfclosePlugin\" ||\n        type == \"endPlugin\"\n    )\n      return cont();\n    if (type == \"endPlugin\") {pushContext(curState.pluginName, startOfLine); return cont();}\n    return cont();\n  };\n}\n\nfunction endcloseplugin(err) {\n  return function(type) {\n    if (err) setStyle = \"error\";\n    if (type == \"endPlugin\") return cont();\n    return pass();\n  };\n}\n\nfunction attributes(type) {\n  if (type == \"keyword\") {setStyle = \"attribute\"; return cont(attributes);}\n  if (type == \"equals\") return cont(attvalue, attributes);\n  return pass();\n}\nfunction attvalue(type) {\n  if (type == \"keyword\") {setStyle = \"string\"; return cont();}\n  if (type == \"string\") return cont(attvaluemaybe);\n  return pass();\n}\nfunction attvaluemaybe(type) {\n  if (type == \"string\") return cont(attvaluemaybe);\n  else return pass();\n}\nreturn {\n  startState: function() {\n    return {tokenize: inText, cc: [], indented: 0, startOfLine: true, pluginName: null, context: null};\n  },\n  token: function(stream, state) {\n    if (stream.sol()) {\n      state.startOfLine = true;\n      state.indented = stream.indentation();\n    }\n    if (stream.eatSpace()) return null;\n\n    setStyle = type = pluginName = null;\n    var style = state.tokenize(stream, state);\n    if ((style || type) && style != \"comment\") {\n      curState = state;\n      while (true) {\n        var comb = state.cc.pop() || element;\n        if (comb(type || style)) break;\n      }\n    }\n    state.startOfLine = false;\n    return setStyle || style;\n  },\n  indent: function(state, textAfter) {\n    var context = state.context;\n    if (context && context.noIndent) return 0;\n    if (context && /^{\\//.test(textAfter))\n        context = context.prev;\n    while (context && !context.startOfLine)\n        context = context.prev;\n    if (context) return context.indent + indentUnit;\n    else return 0;\n  },\n  electricChars: \"/\"\n};\n});\n\nCodeMirror.defineMIME(\"text/tiki\", \"tiki\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"properties\", function() {\n  return {\n    token: function(stream, state) {\n      var sol = stream.sol() || state.afterSection;\n      var eol = stream.eol();\n\n      state.afterSection = false;\n\n      if (sol) {\n        if (state.nextMultiline) {\n          state.inMultiline = true;\n          state.nextMultiline = false;\n        } else {\n          state.position = \"def\";\n        }\n      }\n\n      if (eol && ! state.nextMultiline) {\n        state.inMultiline = false;\n        state.position = \"def\";\n      }\n\n      if (sol) {\n        while(stream.eatSpace()) {}\n      }\n\n      var ch = stream.next();\n\n      if (sol && (ch === \"#\" || ch === \"!\" || ch === \";\")) {\n        state.position = \"comment\";\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (sol && ch === \"[\") {\n        state.afterSection = true;\n        stream.skipTo(\"]\"); stream.eat(\"]\");\n        return \"header\";\n      } else if (ch === \"=\" || ch === \":\") {\n        state.position = \"quote\";\n        return null;\n      } else if (ch === \"\\\\\" && state.position === \"quote\") {\n        if (stream.eol()) {  // end of line?\n          // Multiline value\n          state.nextMultiline = true;\n        }\n      }\n\n      return state.position;\n    },\n\n    startState: function() {\n      return {\n        position : \"def\",       // Current position, \"def\", \"quote\" or \"comment\"\n        nextMultiline : false,  // Is the next line multiline value\n        inMultiline : false,    // Is the current line a multiline value\n        afterSection : false    // Did we just open a section\n      };\n    }\n\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-properties\", \"properties\");\nCodeMirror.defineMIME(\"text/x-ini\", \"properties\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n/**\n * Link to the project's GitHub page:\n * https://github.com/duralog/CodeMirror\n */\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode('livescript', function(){\n    var tokenBase = function(stream, state) {\n      var next_rule = state.next || \"start\";\n      if (next_rule) {\n        state.next = state.next;\n        var nr = Rules[next_rule];\n        if (nr.splice) {\n          for (var i$ = 0; i$ < nr.length; ++i$) {\n            var r = nr[i$];\n            if (r.regex && stream.match(r.regex)) {\n              state.next = r.next || state.next;\n              return r.token;\n            }\n          }\n          stream.next();\n          return 'error';\n        }\n        if (stream.match(r = Rules[next_rule])) {\n          if (r.regex && stream.match(r.regex)) {\n            state.next = r.next;\n            return r.token;\n          } else {\n            stream.next();\n            return 'error';\n          }\n        }\n      }\n      stream.next();\n      return 'error';\n    };\n    var external = {\n      startState: function(){\n        return {\n          next: 'start',\n          lastToken: {style: null, indent: 0, content: \"\"}\n        };\n      },\n      token: function(stream, state){\n        while (stream.pos == stream.start)\n          var style = tokenBase(stream, state);\n        state.lastToken = {\n          style: style,\n          indent: stream.indentation(),\n          content: stream.current()\n        };\n        return style.replace(/\\./g, ' ');\n      },\n      indent: function(state){\n        var indentation = state.lastToken.indent;\n        if (state.lastToken.content.match(indenter)) {\n          indentation += 2;\n        }\n        return indentation;\n      }\n    };\n    return external;\n  });\n\n  var identifier = '(?![\\\\d\\\\s])[$\\\\w\\\\xAA-\\\\uFFDC](?:(?!\\\\s)[$\\\\w\\\\xAA-\\\\uFFDC]|-[A-Za-z])*';\n  var indenter = RegExp('(?:[({[=:]|[-~]>|\\\\b(?:e(?:lse|xport)|d(?:o|efault)|t(?:ry|hen)|finally|import(?:\\\\s*all)?|const|var|let|new|catch(?:\\\\s*' + identifier + ')?))\\\\s*$');\n  var keywordend = '(?![$\\\\w]|-[A-Za-z]|\\\\s*:(?![:=]))';\n  var stringfill = {\n    token: 'string',\n    regex: '.+'\n  };\n  var Rules = {\n    start: [\n      {\n        token: 'comment.doc',\n        regex: '/\\\\*',\n        next: 'comment'\n      }, {\n        token: 'comment',\n        regex: '#.*'\n      }, {\n        token: 'keyword',\n        regex: '(?:t(?:h(?:is|row|en)|ry|ypeof!?)|c(?:on(?:tinue|st)|a(?:se|tch)|lass)|i(?:n(?:stanceof)?|mp(?:ort(?:\\\\s+all)?|lements)|[fs])|d(?:e(?:fault|lete|bugger)|o)|f(?:or(?:\\\\s+own)?|inally|unction)|s(?:uper|witch)|e(?:lse|x(?:tends|port)|val)|a(?:nd|rguments)|n(?:ew|ot)|un(?:less|til)|w(?:hile|ith)|o[fr]|return|break|let|var|loop)' + keywordend\n      }, {\n        token: 'constant.language',\n        regex: '(?:true|false|yes|no|on|off|null|void|undefined)' + keywordend\n      }, {\n        token: 'invalid.illegal',\n        regex: '(?:p(?:ackage|r(?:ivate|otected)|ublic)|i(?:mplements|nterface)|enum|static|yield)' + keywordend\n      }, {\n        token: 'language.support.class',\n        regex: '(?:R(?:e(?:gExp|ferenceError)|angeError)|S(?:tring|yntaxError)|E(?:rror|valError)|Array|Boolean|Date|Function|Number|Object|TypeError|URIError)' + keywordend\n      }, {\n        token: 'language.support.function',\n        regex: '(?:is(?:NaN|Finite)|parse(?:Int|Float)|Math|JSON|(?:en|de)codeURI(?:Component)?)' + keywordend\n      }, {\n        token: 'variable.language',\n        regex: '(?:t(?:hat|il|o)|f(?:rom|allthrough)|it|by|e)' + keywordend\n      }, {\n        token: 'identifier',\n        regex: identifier + '\\\\s*:(?![:=])'\n      }, {\n        token: 'variable',\n        regex: identifier\n      }, {\n        token: 'keyword.operator',\n        regex: '(?:\\\\.{3}|\\\\s+\\\\?)'\n      }, {\n        token: 'keyword.variable',\n        regex: '(?:@+|::|\\\\.\\\\.)',\n        next: 'key'\n      }, {\n        token: 'keyword.operator',\n        regex: '\\\\.\\\\s*',\n        next: 'key'\n      }, {\n        token: 'string',\n        regex: '\\\\\\\\\\\\S[^\\\\s,;)}\\\\]]*'\n      }, {\n        token: 'string.doc',\n        regex: '\\'\\'\\'',\n        next: 'qdoc'\n      }, {\n        token: 'string.doc',\n        regex: '\"\"\"',\n        next: 'qqdoc'\n      }, {\n        token: 'string',\n        regex: '\\'',\n        next: 'qstring'\n      }, {\n        token: 'string',\n        regex: '\"',\n        next: 'qqstring'\n      }, {\n        token: 'string',\n        regex: '`',\n        next: 'js'\n      }, {\n        token: 'string',\n        regex: '<\\\\[',\n        next: 'words'\n      }, {\n        token: 'string.regex',\n        regex: '//',\n        next: 'heregex'\n      }, {\n        token: 'string.regex',\n        regex: '\\\\/(?:[^[\\\\/\\\\n\\\\\\\\]*(?:(?:\\\\\\\\.|\\\\[[^\\\\]\\\\n\\\\\\\\]*(?:\\\\\\\\.[^\\\\]\\\\n\\\\\\\\]*)*\\\\])[^[\\\\/\\\\n\\\\\\\\]*)*)\\\\/[gimy$]{0,4}',\n        next: 'key'\n      }, {\n        token: 'constant.numeric',\n        regex: '(?:0x[\\\\da-fA-F][\\\\da-fA-F_]*|(?:[2-9]|[12]\\\\d|3[0-6])r[\\\\da-zA-Z][\\\\da-zA-Z_]*|(?:\\\\d[\\\\d_]*(?:\\\\.\\\\d[\\\\d_]*)?|\\\\.\\\\d[\\\\d_]*)(?:e[+-]?\\\\d[\\\\d_]*)?[\\\\w$]*)'\n      }, {\n        token: 'lparen',\n        regex: '[({[]'\n      }, {\n        token: 'rparen',\n        regex: '[)}\\\\]]',\n        next: 'key'\n      }, {\n        token: 'keyword.operator',\n        regex: '\\\\S+'\n      }, {\n        token: 'text',\n        regex: '\\\\s+'\n      }\n    ],\n    heregex: [\n      {\n        token: 'string.regex',\n        regex: '.*?//[gimy$?]{0,4}',\n        next: 'start'\n      }, {\n        token: 'string.regex',\n        regex: '\\\\s*#{'\n      }, {\n        token: 'comment.regex',\n        regex: '\\\\s+(?:#.*)?'\n      }, {\n        token: 'string.regex',\n        regex: '\\\\S+'\n      }\n    ],\n    key: [\n      {\n        token: 'keyword.operator',\n        regex: '[.?@!]+'\n      }, {\n        token: 'identifier',\n        regex: identifier,\n        next: 'start'\n      }, {\n        token: 'text',\n        regex: '',\n        next: 'start'\n      }\n    ],\n    comment: [\n      {\n        token: 'comment.doc',\n        regex: '.*?\\\\*/',\n        next: 'start'\n      }, {\n        token: 'comment.doc',\n        regex: '.+'\n      }\n    ],\n    qdoc: [\n      {\n        token: 'string',\n        regex: \".*?'''\",\n        next: 'key'\n      }, stringfill\n    ],\n    qqdoc: [\n      {\n        token: 'string',\n        regex: '.*?\"\"\"',\n        next: 'key'\n      }, stringfill\n    ],\n    qstring: [\n      {\n        token: 'string',\n        regex: '[^\\\\\\\\\\']*(?:\\\\\\\\.[^\\\\\\\\\\']*)*\\'',\n        next: 'key'\n      }, stringfill\n    ],\n    qqstring: [\n      {\n        token: 'string',\n        regex: '[^\\\\\\\\\"]*(?:\\\\\\\\.[^\\\\\\\\\"]*)*\"',\n        next: 'key'\n      }, stringfill\n    ],\n    js: [\n      {\n        token: 'string',\n        regex: '[^\\\\\\\\`]*(?:\\\\\\\\.[^\\\\\\\\`]*)*`',\n        next: 'key'\n      }, stringfill\n    ],\n    words: [\n      {\n        token: 'string',\n        regex: '.*?\\\\]>',\n        next: 'key'\n      }, stringfill\n    ]\n  };\n  for (var idx in Rules) {\n    var r = Rules[idx];\n    if (r.splice) {\n      for (var i = 0, len = r.length; i < len; ++i) {\n        var rr = r[i];\n        if (typeof rr.regex === 'string') {\n          Rules[idx][i].regex = new RegExp('^' + rr.regex);\n        }\n      }\n    } else if (typeof rr.regex === 'string') {\n      Rules[idx].regex = new RegExp('^' + r.regex);\n    }\n  }\n\n  CodeMirror.defineMIME('text/x-livescript', 'livescript');\n\n});\n","CodeMirror.defineMode(\"assembly\", function(_config, parserConfig) {\n  'use strict';\n\n  // If an architecture is specified, its initialization function may\n  // populate this array with custom parsing functions which will be\n  // tried in the event that the standard functions do not find a match.\n  var custom = [];\n\n  // The symbol used to start a line comment changes based on the target\n  // architecture.\n  // If no architecture is pased in \"parserConfig\" then only multiline\n  // comments will have syntax support.\n\n  // These directives are architecture independent.\n  // Machine specific directives should go in their respective\n  // architecture initialization function.\n  // Reference:\n  // http://sourceware.org/binutils/docs/as/Pseudo-Ops.html#Pseudo-Ops\n  var directives = {\n    \".abort\" : \"builtin\",\n    \".align\" : \"builtin\",\n    \".altmacro\" : \"builtin\",\n    \".ascii\" : \"builtin\",\n    \".asciz\" : \"builtin\",\n    \".balign\" : \"builtin\",\n    \".balignw\" : \"builtin\",\n    \".balignl\" : \"builtin\",\n    \".bundle_align_mode\" : \"builtin\",\n    \".bundle_lock\" : \"builtin\",\n    \".bundle_unlock\" : \"builtin\",\n    \".byte\" : \"builtin\",\n    \".cfi_startproc\" : \"builtin\",\n    \".comm\" : \"builtin\",\n    \".data\" : \"builtin\",\n    \".def\" : \"builtin\",\n    \".desc\" : \"builtin\",\n    \".dim\" : \"builtin\",\n    \".double\" : \"builtin\",\n    \".eject\" : \"builtin\",\n    \".else\" : \"builtin\",\n    \".elseif\" : \"builtin\",\n    \".end\" : \"builtin\",\n    \".endef\" : \"builtin\",\n    \".endfunc\" : \"builtin\",\n    \".endif\" : \"builtin\",\n    \".equ\" : \"builtin\",\n    \".equiv\" : \"builtin\",\n    \".eqv\" : \"builtin\",\n    \".err\" : \"builtin\",\n    \".error\" : \"builtin\",\n    \".exitm\" : \"builtin\",\n    \".extern\" : \"builtin\",\n    \".fail\" : \"builtin\",\n    \".file\" : \"builtin\",\n    \".fill\" : \"builtin\",\n    \".float\" : \"builtin\",\n    \".func\" : \"builtin\",\n    \".global\" : \"builtin\",\n    \".gnu_attribute\" : \"builtin\",\n    \".hidden\" : \"builtin\",\n    \".hword\" : \"builtin\",\n    \".ident\" : \"builtin\",\n    \".if\" : \"builtin\",\n    \".incbin\" : \"builtin\",\n    \".include\" : \"builtin\",\n    \".int\" : \"builtin\",\n    \".internal\" : \"builtin\",\n    \".irp\" : \"builtin\",\n    \".irpc\" : \"builtin\",\n    \".lcomm\" : \"builtin\",\n    \".lflags\" : \"builtin\",\n    \".line\" : \"builtin\",\n    \".linkonce\" : \"builtin\",\n    \".list\" : \"builtin\",\n    \".ln\" : \"builtin\",\n    \".loc\" : \"builtin\",\n    \".loc_mark_labels\" : \"builtin\",\n    \".local\" : \"builtin\",\n    \".long\" : \"builtin\",\n    \".macro\" : \"builtin\",\n    \".mri\" : \"builtin\",\n    \".noaltmacro\" : \"builtin\",\n    \".nolist\" : \"builtin\",\n    \".octa\" : \"builtin\",\n    \".offset\" : \"builtin\",\n    \".org\" : \"builtin\",\n    \".p2align\" : \"builtin\",\n    \".popsection\" : \"builtin\",\n    \".previous\" : \"builtin\",\n    \".print\" : \"builtin\",\n    \".protected\" : \"builtin\",\n    \".psize\" : \"builtin\",\n    \".purgem\" : \"builtin\",\n    \".pushsection\" : \"builtin\",\n    \".quad\" : \"builtin\",\n    \".reloc\" : \"builtin\",\n    \".rept\" : \"builtin\",\n    \".sbttl\" : \"builtin\",\n    \".scl\" : \"builtin\",\n    \".section\" : \"builtin\",\n    \".set\" : \"builtin\",\n    \".short\" : \"builtin\",\n    \".single\" : \"builtin\",\n    \".size\" : \"builtin\",\n    \".skip\" : \"builtin\",\n    \".sleb128\" : \"builtin\",\n    \".space\" : \"builtin\",\n    \".stab\" : \"builtin\",\n    \".string\" : \"builtin\",\n    \".struct\" : \"builtin\",\n    \".subsection\" : \"builtin\",\n    \".symver\" : \"builtin\",\n    \".tag\" : \"builtin\",\n    \".text\" : \"builtin\",\n    \".title\" : \"builtin\",\n    \".type\" : \"builtin\",\n    \".uleb128\" : \"builtin\",\n    \".val\" : \"builtin\",\n    \".version\" : \"builtin\",\n    \".vtable_entry\" : \"builtin\",\n    \".vtable_inherit\" : \"builtin\",\n    \".warning\" : \"builtin\",\n    \".weak\" : \"builtin\",\n    \".weakref\" : \"builtin\",\n    \".word\" : \"builtin\"\n  };\n\n  var registers = {};\n\n  function x86(_parserConfig) {\n\n    registers.ax  = \"variable\";\n    registers.eax = \"variable-2\";\n    registers.rax = \"variable-3\";\n\n    registers.bx  = \"variable\";\n    registers.ebx = \"variable-2\";\n    registers.rbx = \"variable-3\";\n\n    registers.cx  = \"variable\";\n    registers.ecx = \"variable-2\";\n    registers.rcx = \"variable-3\";\n\n    registers.dx  = \"variable\";\n    registers.edx = \"variable-2\";\n    registers.rdx = \"variable-3\";\n\n    registers.si  = \"variable\";\n    registers.esi = \"variable-2\";\n    registers.rsi = \"variable-3\";\n\n    registers.di  = \"variable\";\n    registers.edi = \"variable-2\";\n    registers.rdi = \"variable-3\";\n\n    registers.sp  = \"variable\";\n    registers.esp = \"variable-2\";\n    registers.rsp = \"variable-3\";\n\n    registers.bp  = \"variable\";\n    registers.ebp = \"variable-2\";\n    registers.rbp = \"variable-3\";\n\n    registers.ip  = \"variable\";\n    registers.eip = \"variable-2\";\n    registers.rip = \"variable-3\";\n\n    registers.cs  = \"keyword\";\n    registers.ds  = \"keyword\";\n    registers.ss  = \"keyword\";\n    registers.es  = \"keyword\";\n    registers.fs  = \"keyword\";\n    registers.gs  = \"keyword\";\n  }\n\n  function armv6(_parserConfig) {\n    // Reference:\n    // http://infocenter.arm.com/help/topic/com.arm.doc.qrc0001l/QRC0001_UAL.pdf\n    // http://infocenter.arm.com/help/topic/com.arm.doc.ddi0301h/DDI0301H_arm1176jzfs_r0p7_trm.pdf\n    directives.syntax = \"builtin\";\n\n    registers.r0  = \"variable\";\n    registers.r1  = \"variable\";\n    registers.r2  = \"variable\";\n    registers.r3  = \"variable\";\n    registers.r4  = \"variable\";\n    registers.r5  = \"variable\";\n    registers.r6  = \"variable\";\n    registers.r7  = \"variable\";\n    registers.r8  = \"variable\";\n    registers.r9  = \"variable\";\n    registers.r10 = \"variable\";\n    registers.r11 = \"variable\";\n    registers.r12 = \"variable\";\n\n    registers.sp  = \"variable-2\";\n    registers.lr  = \"variable-2\";\n    registers.pc  = \"variable-2\";\n    registers.r13 = registers.sp;\n    registers.r14 = registers.lr;\n    registers.r15 = registers.pc;\n\n    custom.push(function(ch, stream) {\n      if (ch === '#') {\n        stream.eatWhile(/\\w/);\n        return \"number\";\n      }\n    });\n  }\n\n  armv6(parserConfig);\n  x86(parserConfig);\n\n  function nextUntilUnescaped(stream, end) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (next === end && !escaped) {\n        return false;\n      }\n      escaped = !escaped && next === \"\\\\\";\n    }\n    return escaped;\n  }\n\n  function clikeComment(stream, state) {\n    var maybeEnd = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch === \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch === \"*\");\n    }\n    return \"comment\";\n  }\n\n  var renderKeyword = false;\n\n  return {\n    startState: function() {\n      return {\n        tokenize: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (state.tokenize) {\n        return state.tokenize(stream, state);\n      }\n\n      if(stream.pos === 0 && stream.match(/\\s*\\w+(\\s+|$)/, false)){\n        renderKeyword = true;\n      }\n\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      var style, cur, ch = stream.next();\n\n      if (ch === \"_\") {\n        stream.eatWhile(/\\w/);\n        renderKeyword = false;\n        return \"builtin\";\n      }\n\n      if (/\\w/.test(ch)) {\n        stream.eatWhile(/\\w/);\n        if (stream.eat(\":\")) {\n          return 'tag';\n        }\n        cur = stream.current().toLowerCase();\n        style = registers[cur];\n        if(!style && renderKeyword){\n          return \"keyword\";\n        }\n        renderKeyword = false;\n        return style || null;\n      }\n\n      renderKeyword = false;\n\n      if (ch === \"/\") {\n        if (stream.eat(\"*\")) {\n          state.tokenize = clikeComment;\n          return clikeComment(stream, state);\n        }\n      }\n\n      // # for x86\n      // @ for amd\n      // ; for NASM (http://cs.lmu.edu/~ray/notes/x86assembly/)\n      if (ch === \"#\" || ch === \"@\" || ch === \";\") {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      if (ch === '\"') {\n        nextUntilUnescaped(stream, '\"');\n        return \"string\";\n      }\n\n      if (ch === '.') {\n        stream.eatWhile(/\\w/);\n        cur = stream.current().toLowerCase();\n        style = directives[cur];\n        return style || null;\n      }\n\n      if (ch === '=') {\n        stream.eatWhile(/\\w/);\n        return \"tag\";\n      }\n\n      if (ch === '{') {\n        return \"braket\";\n      }\n\n      if (ch === '}') {\n        return \"braket\";\n      }\n\n      if (/\\d/.test(ch)) {\n        if (ch === \"0\" && stream.eat(\"x\")) {\n          stream.eatWhile(/[0-9a-fA-F]/);\n          return \"number\";\n        }\n        stream.eatWhile(/\\d/);\n        return \"number\";\n      }\n\n      for (var i = 0; i < custom.length; i++) {\n        style = custom[i](ch, stream, state);\n        if (style) {\n          return style;\n        }\n      }\n    },\n\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\"\n  };\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"toml\", function () {\n  return {\n    startState: function () {\n      return {\n        inString: false,\n        stringType: \"\",\n        lhs: true,\n        inArray: 0\n      };\n    },\n    token: function (stream, state) {\n      //check for state changes\n      if (!state.inString && ((stream.peek() == '\"') || (stream.peek() == \"'\"))) {\n        state.stringType = stream.peek();\n        stream.next(); // Skip quote\n        state.inString = true; // Update state\n      }\n      if (stream.sol() && state.inArray === 0) {\n        state.lhs = true;\n      }\n      //return state\n      if (state.inString) {\n        while (state.inString && !stream.eol()) {\n          if (stream.peek() === state.stringType) {\n            stream.next(); // Skip quote\n            state.inString = false; // Clear flag\n          } else if (stream.peek() === '\\\\') {\n            stream.next();\n            stream.next();\n          } else {\n            stream.match(/^.[^\\\\\\\"\\']*/);\n          }\n        }\n        return state.lhs ? \"property string\" : \"string\"; // Token style\n      } else if (state.inArray && stream.peek() === ']') {\n        stream.next();\n        state.inArray--;\n        return 'bracket';\n      } else if (state.lhs && stream.peek() === '[' && stream.skipTo(']')) {\n        stream.next();//skip closing ]\n        // array of objects has an extra open & close []\n        if (stream.peek() === ']') stream.next();\n        return \"atom\";\n      } else if (stream.peek() === \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (stream.eatSpace()) {\n        return null;\n      } else if (state.lhs && stream.eatWhile(function (c) { return c != '=' && c != ' '; })) {\n        return \"property\";\n      } else if (state.lhs && stream.peek() === \"=\") {\n        stream.next();\n        state.lhs = false;\n        return null;\n      } else if (!state.lhs && stream.match(/^\\d\\d\\d\\d[\\d\\-\\:\\.T]*Z/)) {\n        return 'atom'; //date\n      } else if (!state.lhs && (stream.match('true') || stream.match('false'))) {\n        return 'atom';\n      } else if (!state.lhs && stream.peek() === '[') {\n        state.inArray++;\n        stream.next();\n        return 'bracket';\n      } else if (!state.lhs && stream.match(/^\\-?\\d+(?:\\.\\d+)?/)) {\n        return 'number';\n      } else if (!stream.eatSpace()) {\n        stream.next();\n      }\n      return null;\n    }\n  };\n});\n\nCodeMirror.defineMIME('text/x-toml', 'toml');\n\n});\n","CodeMirror.defineMode(\"sequence\", function() {\n\n    return {\n        token: function(stream, state) {\n            var ch = stream.peek();\n\n            if(state.beginString){\n                stream.skipToEnd();\n                state.beginString = false;\n                return \"\";\n            }\n\n            if(stream.eatSpace()){\n                return \"\";\n            }\n\n            if(stream.eat(\"#\")){\n                stream.skipToEnd();\n                return \"comment\";\n            }\n            \n            if(stream.match(/title(\\s|$)/i)){\n                return \"header\";\n            }\n\n            if(stream.match(/(left|right) of(\\s|$)/i) || \n                stream.match(/over(\\s|$)/i)){\n                return \"keyword\";\n            }\n\n            if(stream.match(/note|participant(\\s|$)/i)){\n                return \"tag\";\n            }\n\n            if(stream.match(/,|->:|--|-|>>|>/)){\n                return \"operator\";\n            }\n\n            if(stream.match(/:\\s*/)){\n                state.beginString = true;\n                return \"atom\";\n            }\n\n            if(stream.match(/[^:\\->,]+/)){\n                return \"def\";\n            }\n\n            stream.next();\n            return \"\";\n        },\n        startState: function() {\n            return {\n                beginString: false\n            };\n        }\n    };\n});\n","CodeMirror.defineMode(\"flow\", function() {\n\n    return {\n        token: function(stream, state) {\n            var ch = stream.peek();\n\n            if(stream.eatSpace()){\n                return \"\";\n            }\n\n            if(stream.eat(\"#\")){\n                stream.skipToEnd();\n                return \"comment\";\n            }\n\n            if(stream.match(\":>\")){\n                state.afterDef = true;\n                state.linkStart = true;\n                return \"operator\";\n            }\n\n            if(state.linkStart){\n                state.linkStart = false;\n                stream.skipToEnd();\n                return \"link\";\n            }\n\n            var afterText = stream.string.substring(stream.pos),\n                defMatch = afterText.match(/=>/),\n                midText, contentMatch, flowMatch;\n\n            state.afterDef = state.afterDef && !defMatch;\n\n            if(!state.afterDef){\n                if(!defMatch){\n                    // continue\n                } else if(defMatch.index == 0){\n                    stream.pos += 2;\n                    state.flowStart = false;\n                    return \"operator\";\n                } else {\n                    stream.pos += defMatch.index;\n                    state.flowStart = false;\n                    return \"variable-3\";\n                }\n\n            }\n\n            contentMatch = afterText.match(/:/);\n            if(!contentMatch){\n                \n            } else if(contentMatch.index == 0){\n                stream.pos += 1;\n                state.afterDef = true;\n                return \"operator\"\n            } else {\n                state.afterDef = false;\n                if(stream.match(\"start\")){\n                    return \"keyword\";\n                }\n                if(stream.match(\"end\")){\n                    return \"keyword\";\n                }\n                if(stream.match(\"operation\")){\n                    return \"keyword\";\n                }\n                if(stream.match(\"inputoutput\")){\n                    return \"keyword\";\n                }\n                if(stream.match(\"subroutine\")){\n                    return \"keyword\";\n                }\n                if(stream.match(\"condition\")){\n                    return \"keyword\";\n                }\n\n                stream.pos += contentMatch.index;\n                return \"\";\n            }\n\n            if(!state.flowStart){\n                flowMatch = afterText.match(/->/);\n                if(flowMatch) {\n                    state.afterDef = false;\n                    state.flowStart = true;\n                }\n            }\n\n            if(state.flowStart){\n                flowMatch = afterText.match(/->/);\n                if(!flowMatch){\n                    stream.skipToEnd();\n                    return \"variable-3\";\n                } else if(flowMatch.index){\n                    stream.pos += flowMatch.index;\n                    return \"variable-3\";\n                } else {\n                    stream.pos += 2;\n                    return \"operator\";\n                }\n            }\n\n            state.flowStart = false;\n\n            stream.next();\n            return \"\";\n        },\n        startState: function() {\n            return {\n                afterDef: false,\n                flowStart: false,\n                linkStart: false\n            };\n        }\n    };\n});\n","CodeMirror.defineMode(\"mermaid\", function() {\n\n    var startState = function(){\n        var state = {};\n        resetState(state);\n        resetSequenceState(state);\n        resetGanttState(state);\n        return state;\n    }\n\n    var resetSequenceState = function(state){\n        state.beginString = false;\n        state.beginController = false;\n        state.beginActor = false;\n        state.beginAttr = false;\n    }\n\n    var resetGanttState = function(state){\n        state.beginTittle = false;\n        state.beginSection = false;\n        state.beginDateFormat = false;\n    }\n\n    var resetState = function(state){\n        state.inFlowchart = false;\n        state.inSequence = false;\n        state.inGantt = false;\n        state.inClassDiagram = false;\n        state.inGitGraph = false;\n        state.inInfo = false;\n        state.inDotGraph = false;\n    }\n\n    var skipTo_ = function(exp){\n        var textAfter = this.string.substring(this.pos),\n            match = textAfter.match(exp);\n\n        if(match){\n            this.pos += (match.index - match.pos) || 1;\n            return match.index;\n        } else {\n            this.skipToEnd();\n        }\n    }\n\n    return {\n        token: function(stream, state) {\n            var ch = stream.peek();\n\n            if(stream.eatSpace()){\n                return \"\";\n            }\n\n            if(stream.match(\"%%\")){\n                stream.skipToEnd();\n                return \"comment\";\n            }\n\n            if(stream.match(\"graph\", true, true)){\n                resetState(state);\n                state.inFlowchart = true;\n                return \"keyword\";\n            }\n\n            if(stream.match(\"gantt\", true, true)){\n                resetState(state);\n                state.inGantt = true;\n                return \"keyword\";\n            }\n\n            if(stream.match(\"sequenceDiagram\", true, true)){\n                resetState(state);\n                state.inSequence = true;\n                resetSequenceState(state);\n                return \"keyword\";\n            }\n\n            if(stream.match(\"classDiagram\", true, true)){\n                resetState(state);\n                state.inSequence = true;\n                return \"keyword\";\n            }\n\n            if(stream.match(\"gitGraph\", true, true)){\n                resetState(state);\n                state.inGitGraph = true;\n                return \"keyword\";\n            }\n\n            if(stream.match(\"info\", true, true)){\n                resetState(state);\n                state.inInfo = true;\n                return \"keyword\";\n            }\n\n            if(stream.match(\"digraph\", true, true)){\n                resetState(state);\n                state.inDotGraph = true;\n                return \"keyword\";\n            }\n\n            if(state.inFlowchart){\n                if(stream.match(\"TB\") || stream.match(\"BT\") || stream.match(\"LR\") || stream.match(\"RL\")){\n                    return \"attribute\";\n                }\n\n                if(stream.match(/(subgraph|title|end|style|classDef)(\\s|$)/)){\n                    return \"keyword\";\n                }\n\n                var endBox = null,\n                    startBox = null;\n                    textAfter = stream.string.substring(stream.pos);\n\n                if(endBox = textAfter.match(/^\\(\\(.*?\\)\\)/)){\n                    stream.pos += endBox[0].length;\n                    return \"quote\";\n                }\n\n                if(endBox = textAfter.match(/^\\(.*?\\)/)){\n                    stream.pos += endBox[0].length;\n                    return \"quote\";\n                }\n\n                if(endBox = textAfter.match(/^\\[.*?\\]/)){\n                    stream.pos += endBox[0].length;\n                    return \"quote\";\n                }\n\n                if(endBox = textAfter.match(/^\\{.*?\\}/)){\n                    stream.pos += endBox[0].length;\n                    return \"quote\";\n                }\n\n                if(endBox = textAfter.match(/^\\>[^\\[]*?\\]/)){\n                    stream.pos += endBox[0].length;\n                    return \"quote\";\n                }\n\n                if(stream.match(/^--.+--[->]/)){\n                    return \"operator\";\n                }\n\n                if(stream.match(/^--[->]\\|.+\\|/)){\n                    return \"operator\";\n                }\n\n                if(stream.match(/^--[->]/)){\n                    return \"operator\";\n                }\n\n                if(stream.match(/^-\\..+\\.->/)){\n                    return \"operator\";\n                }\n\n                if(stream.match(/^-\\.->/)){\n                    return \"operator\";\n                }\n\n                if(stream.match(/^==.+==>/)){\n                    return \"operator\";\n                }\n\n                if(stream.match(/^==>/)){\n                    return \"operator\";\n                }\n\n                if(stream.match(/^[^\\[\\(\\{\\>\\-=%]+/)){\n                    return \"\";\n                }\n\n                skipTo_.call(stream, /[ \\[\\{\\(\\-=>|]/);\n                return \"\";\n            }\n\n            if(state.inSequence){\n                if(state.beginString){\n                    stream.skipToEnd();\n                    resetSequenceState(state);\n                    return \"\";\n                }\n\n                if(state.beginController){\n                    stream.skipToEnd();\n                    resetSequenceState(state);\n                    return \"\";\n                }\n\n                if(state.beginActor){\n                    stream.skipToEnd();\n                    resetSequenceState(state);\n                    return \"def\";\n                }\n\n                if(stream.match(/participant(\\s|$)/i)){\n                    state.beginActor = true;\n                    return \"tag\";\n                }\n\n                if(stream.match(/note(\\s|$)/i)){\n                    return \"tag\";\n                }\n\n                if(stream.match(/title(\\s|$)/i)){\n                    state.beginController = true;\n                    return \"header\";\n                }\n\n                if(stream.match(/(left|right) of(\\s|$)/i) || \n                    stream.match(/over(\\s|$)/i)){\n                    return \"keyword\";\n                }\n\n                if(stream.match(/,|->:|--|-|>>|>/)){\n                    return \"operator\";\n                }\n\n                if(stream.match(/:\\s*/)){\n                    resetSequenceState(state);\n                    state.beginString = true;\n                    return \"atom\";\n                }\n\n                if(stream.match(/(alt|opt|else|loop)(\\s|$)/i)){\n                    resetSequenceState(state);\n                    state.beginController = true;\n                    return \"keyword\";\n                }\n\n                if(stream.match(/end(\\s|$)/i)){\n                    resetSequenceState(state);\n                    return \"keyword\";\n                }\n\n                if(stream.match(/[^:\\->,]+/)){\n                    return \"def\";\n                }\n\n                skipTo_.call(stream, /[ \\[\\{\\(\\-=>:|]/);\n                return \"\";\n            }\n\n            if(state.inGantt){\n                if(state.beginTittle){\n                    stream.skipToEnd();\n                    resetGanttState(state);\n                    return \"header\";\n                }\n\n                if(state.beginSection){\n                    stream.skipToEnd();\n                    resetGanttState(state);\n                    return \"def\";\n                }\n\n                if(state.beginDateFormat){\n                    stream.skipToEnd();\n                    resetGanttState(state);\n                    return \"variable-3\";\n                }\n\n                if(stream.match(/title(?:\\s|$)/)){\n                    resetGanttState(state);\n                    state.beginTittle = true;\n                    return \"keyword\";\n                }\n\n                if(stream.match(/dateFormat(\\s|$)/i)){\n                    state.beginDateFormat = true;\n                    return \"keyword\";\n                }\n\n                if(stream.match(/section(?:\\s|$)/)){\n                    resetGanttState(state);\n                    state.beginSection = true;\n                    return \"keyword\";\n                }\n\n                if(stream.match(/[:,]/)){\n                    return \"operator\";\n                }\n\n                var attrStart = stream.string.match(/:/);\n                if(!attrStart){\n                    stream.skipToEnd();\n                    return \"\";\n                }\n\n                if(stream.pos < attrStart.index){\n                    stream.pos = attrStart.index;\n                    return \"\";\n                }\n\n                if(stream.match(/(done|active)(\\W|$)/)){\n                    return \"operator\";\n                }\n\n                if(stream.match(/(crit)(\\W|$)/)){\n                    return \"builtin\";\n                }\n\n                if(stream.match(/^\\d[\\d\\-dhym]+/)){\n                    return \"variable-3\"\n                }\n\n                if(stream.match(/(after)(\\W|$)/)){\n                    return \"keyword\"\n                }\n\n                skipTo_.call(stream, /[ ,:]/);\n                return \"\";\n            }\n\n            stream.skipToEnd();\n            return \"\";\n        },\n        startState: startState\n    };\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('mllike', function(_config, parserConfig) {\n  var words = {\n    'let': 'keyword',\n    'rec': 'keyword',\n    'in': 'keyword',\n    'of': 'keyword',\n    'and': 'keyword',\n    'if': 'keyword',\n    'then': 'keyword',\n    'else': 'keyword',\n    'for': 'keyword',\n    'to': 'keyword',\n    'while': 'keyword',\n    'do': 'keyword',\n    'done': 'keyword',\n    'fun': 'keyword',\n    'function': 'keyword',\n    'val': 'keyword',\n    'type': 'keyword',\n    'mutable': 'keyword',\n    'match': 'keyword',\n    'with': 'keyword',\n    'try': 'keyword',\n    'open': 'builtin',\n    'ignore': 'builtin',\n    'begin': 'keyword',\n    'end': 'keyword'\n  };\n\n  var extraWords = parserConfig.extraWords || {};\n  for (var prop in extraWords) {\n    if (extraWords.hasOwnProperty(prop)) {\n      words[prop] = parserConfig.extraWords[prop];\n    }\n  }\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n\n    if (ch === '\"') {\n      state.tokenize = tokenString;\n      return state.tokenize(stream, state);\n    }\n    if (ch === '(') {\n      if (stream.eat('*')) {\n        state.commentLevel++;\n        state.tokenize = tokenComment;\n        return state.tokenize(stream, state);\n      }\n    }\n    if (ch === '~') {\n      stream.eatWhile(/\\w/);\n      return 'variable-2';\n    }\n    if (ch === '`') {\n      stream.eatWhile(/\\w/);\n      return 'quote';\n    }\n    if (ch === '/' && parserConfig.slashComments && stream.eat('/')) {\n      stream.skipToEnd();\n      return 'comment';\n    }\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\d]/);\n      if (stream.eat('.')) {\n        stream.eatWhile(/[\\d]/);\n      }\n      return 'number';\n    }\n    if ( /[+\\-*&%=<>!?|]/.test(ch)) {\n      return 'operator';\n    }\n    if (/[\\w\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      var cur = stream.current();\n      return words.hasOwnProperty(cur) ? words[cur] : 'variable';\n    }\n    return null\n  }\n\n  function tokenString(stream, state) {\n    var next, end = false, escaped = false;\n    while ((next = stream.next()) != null) {\n      if (next === '\"' && !escaped) {\n        end = true;\n        break;\n      }\n      escaped = !escaped && next === '\\\\';\n    }\n    if (end && !escaped) {\n      state.tokenize = tokenBase;\n    }\n    return 'string';\n  };\n\n  function tokenComment(stream, state) {\n    var prev, next;\n    while(state.commentLevel > 0 && (next = stream.next()) != null) {\n      if (prev === '(' && next === '*') state.commentLevel++;\n      if (prev === '*' && next === ')') state.commentLevel--;\n      prev = next;\n    }\n    if (state.commentLevel <= 0) {\n      state.tokenize = tokenBase;\n    }\n    return 'comment';\n  }\n\n  return {\n    startState: function() {return {tokenize: tokenBase, commentLevel: 0};},\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      return state.tokenize(stream, state);\n    },\n\n    blockCommentStart: \"(*\",\n    blockCommentEnd: \"*)\",\n    lineComment: parserConfig.slashComments ? \"//\" : null\n  };\n});\n\nCodeMirror.defineMIME('text/x-ocaml', {\n  name: 'mllike',\n  extraWords: {\n    'succ': 'keyword',\n    'trace': 'builtin',\n    'exit': 'builtin',\n    'print_string': 'builtin',\n    'print_endline': 'builtin',\n    'true': 'atom',\n    'false': 'atom',\n    'raise': 'keyword'\n  }\n});\n\nCodeMirror.defineMIME('text/x-fsharp', {\n  name: 'mllike',\n  extraWords: {\n    'abstract': 'keyword',\n    'as': 'keyword',\n    'assert': 'keyword',\n    'base': 'keyword',\n    'class': 'keyword',\n    'default': 'keyword',\n    'delegate': 'keyword',\n    'downcast': 'keyword',\n    'downto': 'keyword',\n    'elif': 'keyword',\n    'exception': 'keyword',\n    'extern': 'keyword',\n    'finally': 'keyword',\n    'global': 'keyword',\n    'inherit': 'keyword',\n    'inline': 'keyword',\n    'interface': 'keyword',\n    'internal': 'keyword',\n    'lazy': 'keyword',\n    'let!': 'keyword',\n    'member' : 'keyword',\n    'module': 'keyword',\n    'namespace': 'keyword',\n    'new': 'keyword',\n    'null': 'keyword',\n    'override': 'keyword',\n    'private': 'keyword',\n    'public': 'keyword',\n    'return': 'keyword',\n    'return!': 'keyword',\n    'select': 'keyword',\n    'static': 'keyword',\n    'struct': 'keyword',\n    'upcast': 'keyword',\n    'use': 'keyword',\n    'use!': 'keyword',\n    'val': 'keyword',\n    'when': 'keyword',\n    'yield': 'keyword',\n    'yield!': 'keyword',\n\n    'List': 'builtin',\n    'Seq': 'builtin',\n    'Map': 'builtin',\n    'Set': 'builtin',\n    'int': 'builtin',\n    'string': 'builtin',\n    'raise': 'builtin',\n    'failwith': 'builtin',\n    'not': 'builtin',\n    'true': 'builtin',\n    'false': 'builtin'\n  },\n  slashComments: true\n});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"elm\", function() {\n\n    function switchState(source, setState, f) {\n      setState(f);\n      return f(source, setState);\n    }\n\n    // These should all be Unicode extended, as per the Haskell 2010 report\n    var smallRE = /[a-z_]/;\n    var largeRE = /[A-Z]/;\n    var digitRE = /[0-9]/;\n    var hexitRE = /[0-9A-Fa-f]/;\n    var octitRE = /[0-7]/;\n    var idRE = /[a-z_A-Z0-9\\']/;\n    var symbolRE = /[-!#$%&*+.\\/<=>?@\\\\^|~:\\u03BB\\u2192]/;\n    var specialRE = /[(),;[\\]`{}]/;\n    var whiteCharRE = /[ \\t\\v\\f]/; // newlines are handled in tokenizer\n\n    function normal() {\n      return function (source, setState) {\n        if (source.eatWhile(whiteCharRE)) {\n          return null;\n        }\n\n        var ch = source.next();\n        if (specialRE.test(ch)) {\n          if (ch == '{' && source.eat('-')) {\n            var t = \"comment\";\n            if (source.eat('#')) t = \"meta\";\n            return switchState(source, setState, ncomment(t, 1));\n          }\n          return null;\n        }\n\n        if (ch == '\\'') {\n          if (source.eat('\\\\'))\n            source.next();  // should handle other escapes here\n          else\n            source.next();\n\n          if (source.eat('\\''))\n            return \"string\";\n          return \"error\";\n        }\n\n        if (ch == '\"') {\n          return switchState(source, setState, stringLiteral);\n        }\n\n        if (largeRE.test(ch)) {\n          source.eatWhile(idRE);\n          if (source.eat('.'))\n            return \"qualifier\";\n          return \"variable-2\";\n        }\n\n        if (smallRE.test(ch)) {\n          var isDef = source.pos === 1;\n          source.eatWhile(idRE);\n          return isDef ? \"variable-3\" : \"variable\";\n        }\n\n        if (digitRE.test(ch)) {\n          if (ch == '0') {\n            if (source.eat(/[xX]/)) {\n              source.eatWhile(hexitRE); // should require at least 1\n              return \"integer\";\n            }\n            if (source.eat(/[oO]/)) {\n              source.eatWhile(octitRE); // should require at least 1\n              return \"number\";\n            }\n          }\n          source.eatWhile(digitRE);\n          var t = \"number\";\n          if (source.eat('.')) {\n            t = \"number\";\n            source.eatWhile(digitRE); // should require at least 1\n          }\n          if (source.eat(/[eE]/)) {\n            t = \"number\";\n            source.eat(/[-+]/);\n            source.eatWhile(digitRE); // should require at least 1\n          }\n          return t;\n        }\n\n        if (symbolRE.test(ch)) {\n          if (ch == '-' && source.eat(/-/)) {\n            source.eatWhile(/-/);\n            if (!source.eat(symbolRE)) {\n              source.skipToEnd();\n              return \"comment\";\n            }\n          }\n          source.eatWhile(symbolRE);\n          return \"builtin\";\n        }\n\n        return \"error\";\n      }\n    }\n\n    function ncomment(type, nest) {\n      if (nest == 0) {\n        return normal();\n      }\n      return function(source, setState) {\n        var currNest = nest;\n        while (!source.eol()) {\n          var ch = source.next();\n          if (ch == '{' && source.eat('-')) {\n            ++currNest;\n          } else if (ch == '-' && source.eat('}')) {\n            --currNest;\n            if (currNest == 0) {\n              setState(normal());\n              return type;\n            }\n          }\n        }\n        setState(ncomment(type, currNest));\n        return type;\n      }\n    }\n\n    function stringLiteral(source, setState) {\n      while (!source.eol()) {\n        var ch = source.next();\n        if (ch == '\"') {\n          setState(normal());\n          return \"string\";\n        }\n        if (ch == '\\\\') {\n          if (source.eol() || source.eat(whiteCharRE)) {\n            setState(stringGap);\n            return \"string\";\n          }\n          if (!source.eat('&')) source.next(); // should handle other escapes here\n        }\n      }\n      setState(normal());\n      return \"error\";\n    }\n\n    function stringGap(source, setState) {\n      if (source.eat('\\\\')) {\n        return switchState(source, setState, stringLiteral);\n      }\n      source.next();\n      setState(normal());\n      return \"error\";\n    }\n\n\n    var wellKnownWords = (function() {\n      var wkw = {};\n\n      var keywords = [\n        \"case\", \"of\", \"as\",\n        \"if\", \"then\", \"else\",\n        \"let\", \"in\",\n        \"infix\", \"infixl\", \"infixr\",\n        \"type\", \"alias\",\n        \"input\", \"output\", \"foreign\", \"loopback\",\n        \"module\", \"where\", \"import\", \"exposing\",\n        \"_\", \"..\", \"|\", \":\", \"=\", \"\\\\\", \"\\\"\", \"->\", \"<-\"\n      ];\n\n      for (var i = keywords.length; i--;)\n        wkw[keywords[i]] = \"keyword\";\n\n      return wkw;\n    })();\n\n\n\n    return {\n      startState: function ()  { return { f: normal() }; },\n      copyState:  function (s) { return { f: s.f }; },\n\n      token: function(stream, state) {\n        var t = state.f(stream, function(s) { state.f = s; });\n        var w = stream.current();\n        return (wellKnownWords.hasOwnProperty(w)) ? wellKnownWords[w] : t;\n      }\n    };\n\n  });\n\n  CodeMirror.defineMIME(\"text/x-elm\", \"elm\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function errorIfNotEmpty(stream) {\n    var nonWS = stream.match(/^\\s*\\S/);\n    stream.skipToEnd();\n    return nonWS ? \"error\" : null;\n  }\n\n  CodeMirror.defineMode(\"asciiarmor\", function() {\n    return {\n      token: function(stream, state) {\n        var m;\n        if (state.state == \"top\") {\n          if (stream.sol() && (m = stream.match(/^-----BEGIN (.*)?-----\\s*$/))) {\n            state.state = \"headers\";\n            state.type = m[1];\n            return \"tag\";\n          }\n          return errorIfNotEmpty(stream);\n        } else if (state.state == \"headers\") {\n          if (stream.sol() && stream.match(/^\\w+:/)) {\n            state.state = \"header\";\n            return \"atom\";\n          } else {\n            var result = errorIfNotEmpty(stream);\n            if (result) state.state = \"body\";\n            return result;\n          }\n        } else if (state.state == \"header\") {\n          stream.skipToEnd();\n          state.state = \"headers\";\n          return \"string\";\n        } else if (state.state == \"body\") {\n          if (stream.sol() && (m = stream.match(/^-----END (.*)?-----\\s*$/))) {\n            if (m[1] != state.type) return \"error\";\n            state.state = \"end\";\n            return \"tag\";\n          } else {\n            if (stream.eatWhile(/[A-Za-z0-9+\\/=]/)) {\n              return null;\n            } else {\n              stream.next();\n              return \"error\";\n            }\n          }\n        } else if (state.state == \"end\") {\n          return errorIfNotEmpty(stream);\n        }\n      },\n      blankLine: function(state) {\n        if (state.state == \"headers\") state.state = \"body\";\n      },\n      startState: function() {\n        return {state: \"top\", type: null};\n      }\n    };\n  });\n\n  CodeMirror.defineMIME(\"application/pgp\", \"asciiarmor\");\n  CodeMirror.defineMIME(\"application/pgp-keys\", \"asciiarmor\");\n  CodeMirror.defineMIME(\"application/pgp-signature\", \"asciiarmor\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"spreadsheet\", function () {\n    return {\n      startState: function () {\n        return {\n          stringType: null,\n          stack: []\n        };\n      },\n      token: function (stream, state) {\n        if (!stream) return;\n\n        //check for state changes\n        if (state.stack.length === 0) {\n          //strings\n          if ((stream.peek() == '\"') || (stream.peek() == \"'\")) {\n            state.stringType = stream.peek();\n            stream.next(); // Skip quote\n            state.stack.unshift(\"string\");\n          }\n        }\n\n        //return state\n        //stack has\n        switch (state.stack[0]) {\n        case \"string\":\n          while (state.stack[0] === \"string\" && !stream.eol()) {\n            if (stream.peek() === state.stringType) {\n              stream.next(); // Skip quote\n              state.stack.shift(); // Clear flag\n            } else if (stream.peek() === \"\\\\\") {\n              stream.next();\n              stream.next();\n            } else {\n              stream.match(/^.[^\\\\\\\"\\']*/);\n            }\n          }\n          return \"string\";\n\n        case \"characterClass\":\n          while (state.stack[0] === \"characterClass\" && !stream.eol()) {\n            if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./)))\n              state.stack.shift();\n          }\n          return \"operator\";\n        }\n\n        var peek = stream.peek();\n\n        //no stack\n        switch (peek) {\n        case \"[\":\n          stream.next();\n          state.stack.unshift(\"characterClass\");\n          return \"bracket\";\n        case \":\":\n          stream.next();\n          return \"operator\";\n        case \"\\\\\":\n          if (stream.match(/\\\\[a-z]+/)) return \"string-2\";\n          else {\n            stream.next();\n            return \"atom\";\n          }\n        case \".\":\n        case \",\":\n        case \";\":\n        case \"*\":\n        case \"-\":\n        case \"+\":\n        case \"^\":\n        case \"<\":\n        case \"/\":\n        case \"=\":\n          stream.next();\n          return \"atom\";\n        case \"$\":\n          stream.next();\n          return \"builtin\";\n        }\n\n        if (stream.match(/\\d+/)) {\n          if (stream.match(/^\\w+/)) return \"error\";\n          return \"number\";\n        } else if (stream.match(/^[a-zA-Z_]\\w*/)) {\n          if (stream.match(/(?=[\\(.])/, false)) return \"keyword\";\n          return \"variable-2\";\n        } else if ([\"[\", \"]\", \"(\", \")\", \"{\", \"}\"].indexOf(peek) != -1) {\n          stream.next();\n          return \"bracket\";\n        } else if (!stream.eatSpace()) {\n          stream.next();\n        }\n        return null;\n      }\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-spreadsheet\", \"spreadsheet\");\n});\n","CodeMirror.defineMode(\"elixir\", function(config) {\n\n  parseComment = function (stream, state) {\n    stream.skipToEnd();\n\n    return \"comment\";\n  }\n\n  parseStringDelimiter = function (stream, state, delimiter) {\n    state.inString = !state.inString;\n\n    if (state.inString) { stream.eatWhile(delimiter); };\n\n    return \"string\";\n  }\n\n  parseDocStringDelimiter = function (stream, state, delimiter) {\n    state.inDocString = !state.inDocString;\n\n    if (state.inDocString) { stream.eatWhile(delimiter); };\n\n    return \"comment\";\n  }\n\n  matchesAtom = function (stream) {\n    return stream.match(/:\\w+[\\?!]?/)  ||\n           stream.match(/\\w+[\\?!]?:/)  ||\n           stream.match(/:\"[^\"]+\"/)    ||\n           stream.match(/:'[^']+'/)    ||\n           stream.match(/\"[^\"]+\":/)    ||\n           stream.match(/'[^']+':/)\n  }\n\n  return {\n    startState: function () {\n      return {\n        inDocString: false,\n        inString: false,\n        defining: false,\n      };\n    },\n\n    token: function (stream, state) {\n      var word, style;\n\n      stream.eatSpace();\n\n      if (stream.match(\"%B\"))                     { style = \"string\" };\n      if (stream.match('\"\"\"'))                    { style = parseDocStringDelimiter(stream, state, '\"\"\"'); };\n      if (stream.match('\"'))                      { style = parseStringDelimiter(stream, state, '\"'); };\n      if (stream.match(\"#\") && !state.inString)   { style = parseComment(stream, state); };\n      if (matchesAtom(stream))                    { style = \"atom\" };\n      if (stream.match(/@(_|[a-z])\\w*/))          { style = \"attribute\" };\n      if (stream.match(/[A-Z]\\w+/))               { style = \"constant\"; state.defining = false };\n      if (state.defining)                         { style = \"defined\"; stream.eatWhile(/\\w/); state.defining = false };\n      if (stream.match(/(def|defp|defmodule)\\b/)) { style = \"def\"; state.defining = true };\n\n      if (!style) { stream.next(); }\n\n      if (state.inDocString) { return style = \"comment\" };\n      if (state.inString) { return style = \"string\" };\n      return style;\n    },\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-elixir\", \"elixir\");\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd)\n    define([\"../../lib/codemirror\"], mod);\n  else\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"cmake\", function () {\n  var variable_regex = /({)?[a-zA-Z0-9_]+(})?/;\n\n  function tokenString(stream, state) {\n    var current, prev, found_var = false;\n    while (!stream.eol() && (current = stream.next()) != state.pending) {\n      if (current === '$' && prev != '\\\\' && state.pending == '\"') {\n        found_var = true;\n        break;\n      }\n      prev = current;\n    }\n    if (found_var) {\n      stream.backUp(1);\n    }\n    if (current == state.pending) {\n      state.continueString = false;\n    } else {\n      state.continueString = true;\n    }\n    return \"string\";\n  }\n\n  function tokenize(stream, state) {\n    var ch = stream.next() || \"\";\n\n    // Have we found a variable?\n    if (ch === '$') {\n      if (stream.match(variable_regex)) {\n        return 'variable-2';\n      }\n      return 'variable';\n    }\n    // Should we still be looking for the end of a string?\n    if (state.continueString) {\n      // If so, go through the loop again\n      stream.backUp(1);\n      return tokenString(stream, state);\n    }\n    // Do we just have a function on our hands?\n    // In 'cmake_minimum_required (VERSION 2.8.8)', 'cmake_minimum_required' is matched\n    if (stream.match(/(\\s+)?\\w+\\(/) || stream.match(/(\\s+)?\\w+\\ \\(/)) {\n      stream.backUp(1);\n      return 'def';\n    }\n    if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    // Have we found a string?\n    if (ch == \"'\" || ch == '\"') {\n      // Store the type (single or double)\n      state.pending = ch;\n      // Perform the looping function to find the end\n      return tokenString(stream, state);\n    }\n    if (ch == '(' || ch == ')') {\n      return 'bracket';\n    }\n    if (ch.match(/[0-9]/)) {\n      return 'number';\n    }\n    stream.eatWhile(/[\\w-]/);\n    return null;\n  }\n  return {\n    startState: function () {\n      var state = {};\n      state.inDefinition = false;\n      state.inInclude = false;\n      state.continueString = false;\n      state.pending = false;\n      return state;\n    },\n    token: function (stream, state) {\n      if (stream.eatSpace()) return null;\n      return tokenize(stream, state);\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-cmake\", \"cmake\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// By the Neo4j Team and contributors.\n// https://github.com/neo4j-contrib/CodeMirror\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  var wordRegexp = function(words) {\n    return new RegExp(\"^(?:\" + words.join(\"|\") + \")$\", \"i\");\n  };\n\n  CodeMirror.defineMode(\"cypher\", function(config) {\n    var tokenBase = function(stream/*, state*/) {\n      var ch = stream.next();\n      if (ch ==='\"') {\n        stream.match(/.*?\"/);\n        return \"string\";\n      }\n      if (ch === \"'\") {\n        stream.match(/.*?'/);\n        return \"string\";\n      }\n      if (/[{}\\(\\),\\.;\\[\\]]/.test(ch)) {\n        curPunc = ch;\n        return \"node\";\n      } else if (ch === \"/\" && stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (operatorChars.test(ch)) {\n        stream.eatWhile(operatorChars);\n        return null;\n      } else {\n        stream.eatWhile(/[_\\w\\d]/);\n        if (stream.eat(\":\")) {\n          stream.eatWhile(/[\\w\\d_\\-]/);\n          return \"atom\";\n        }\n        var word = stream.current();\n        if (funcs.test(word)) return \"builtin\";\n        if (preds.test(word)) return \"def\";\n        if (keywords.test(word)) return \"keyword\";\n        return \"variable\";\n      }\n    };\n    var pushContext = function(state, type, col) {\n      return state.context = {\n        prev: state.context,\n        indent: state.indent,\n        col: col,\n        type: type\n      };\n    };\n    var popContext = function(state) {\n      state.indent = state.context.indent;\n      return state.context = state.context.prev;\n    };\n    var indentUnit = config.indentUnit;\n    var curPunc;\n    var funcs = wordRegexp([\"abs\", \"acos\", \"allShortestPaths\", \"asin\", \"atan\", \"atan2\", \"avg\", \"ceil\", \"coalesce\", \"collect\", \"cos\", \"cot\", \"count\", \"degrees\", \"e\", \"endnode\", \"exp\", \"extract\", \"filter\", \"floor\", \"haversin\", \"head\", \"id\", \"keys\", \"labels\", \"last\", \"left\", \"length\", \"log\", \"log10\", \"lower\", \"ltrim\", \"max\", \"min\", \"node\", \"nodes\", \"percentileCont\", \"percentileDisc\", \"pi\", \"radians\", \"rand\", \"range\", \"reduce\", \"rel\", \"relationship\", \"relationships\", \"replace\", \"reverse\", \"right\", \"round\", \"rtrim\", \"shortestPath\", \"sign\", \"sin\", \"size\", \"split\", \"sqrt\", \"startnode\", \"stdev\", \"stdevp\", \"str\", \"substring\", \"sum\", \"tail\", \"tan\", \"timestamp\", \"toFloat\", \"toInt\", \"toString\", \"trim\", \"type\", \"upper\"]);\n    var preds = wordRegexp([\"all\", \"and\", \"any\", \"contains\", \"exists\", \"has\", \"in\", \"none\", \"not\", \"or\", \"single\", \"xor\"]);\n    var keywords = wordRegexp([\"as\", \"asc\", \"ascending\", \"assert\", \"by\", \"case\", \"commit\", \"constraint\", \"create\", \"csv\", \"cypher\", \"delete\", \"desc\", \"descending\", \"detach\", \"distinct\", \"drop\", \"else\", \"end\", \"ends\", \"explain\", \"false\", \"fieldterminator\", \"foreach\", \"from\", \"headers\", \"in\", \"index\", \"is\", \"join\", \"limit\", \"load\", \"match\", \"merge\", \"null\", \"on\", \"optional\", \"order\", \"periodic\", \"profile\", \"remove\", \"return\", \"scan\", \"set\", \"skip\", \"start\", \"starts\", \"then\", \"true\", \"union\", \"unique\", \"unwind\", \"using\", \"when\", \"where\", \"with\", \"call\", \"yield\"]);\n    var operatorChars = /[*+\\-<>=&|~%^]/;\n\n    return {\n      startState: function(/*base*/) {\n        return {\n          tokenize: tokenBase,\n          context: null,\n          indent: 0,\n          col: 0\n        };\n      },\n      token: function(stream, state) {\n        if (stream.sol()) {\n          if (state.context && (state.context.align == null)) {\n            state.context.align = false;\n          }\n          state.indent = stream.indentation();\n        }\n        if (stream.eatSpace()) {\n          return null;\n        }\n        var style = state.tokenize(stream, state);\n        if (style !== \"comment\" && state.context && (state.context.align == null) && state.context.type !== \"pattern\") {\n          state.context.align = true;\n        }\n        if (curPunc === \"(\") {\n          pushContext(state, \")\", stream.column());\n        } else if (curPunc === \"[\") {\n          pushContext(state, \"]\", stream.column());\n        } else if (curPunc === \"{\") {\n          pushContext(state, \"}\", stream.column());\n        } else if (/[\\]\\}\\)]/.test(curPunc)) {\n          while (state.context && state.context.type === \"pattern\") {\n            popContext(state);\n          }\n          if (state.context && curPunc === state.context.type) {\n            popContext(state);\n          }\n        } else if (curPunc === \".\" && state.context && state.context.type === \"pattern\") {\n          popContext(state);\n        } else if (/atom|string|variable/.test(style) && state.context) {\n          if (/[\\}\\]]/.test(state.context.type)) {\n            pushContext(state, \"pattern\", stream.column());\n          } else if (state.context.type === \"pattern\" && !state.context.align) {\n            state.context.align = true;\n            state.context.col = stream.column();\n          }\n        }\n        return style;\n      },\n      indent: function(state, textAfter) {\n        var firstChar = textAfter && textAfter.charAt(0);\n        var context = state.context;\n        if (/[\\]\\}]/.test(firstChar)) {\n          while (context && context.type === \"pattern\") {\n            context = context.prev;\n          }\n        }\n        var closing = context && firstChar === context.type;\n        if (!context) return 0;\n        if (context.type === \"keywords\") return CodeMirror.commands.newlineAndIndent;\n        if (context.align) return context.col + (closing ? 0 : 1);\n        return context.indent + (closing ? 0 : indentUnit);\n      }\n    };\n  });\n\n  CodeMirror.modeExtensions[\"cypher\"] = {\n    autoFormatLineBreaks: function(text) {\n      var i, lines, reProcessedPortion;\n      var lines = text.split(\"\\n\");\n      var reProcessedPortion = /\\s+\\b(return|where|order by|match|with|skip|limit|create|delete|set)\\b\\s/g;\n      for (var i = 0; i < lines.length; i++)\n        lines[i] = lines[i].replace(reProcessedPortion, \" \\n$1 \").trim();\n      return lines.join(\"\\n\");\n    }\n  };\n\n  CodeMirror.defineMIME(\"application/x-cypher-query\", \"cypher\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../clike/clike\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../clike/clike\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var keywords = (\"this super static final const abstract class extends external factory \" +\n    \"implements get native operator set typedef with enum throw rethrow \" +\n    \"assert break case continue default in return new deferred async await covariant \" +\n    \"try catch finally do else for if switch while import library export \" +\n    \"part of show hide is as\").split(\" \");\n  var blockKeywords = \"try catch finally do else for if switch while\".split(\" \");\n  var atoms = \"true false null\".split(\" \");\n  var builtins = \"void bool num int double dynamic var String\".split(\" \");\n\n  function set(words) {\n    var obj = {};\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  function pushInterpolationStack(state) {\n    (state.interpolationStack || (state.interpolationStack = [])).push(state.tokenize);\n  }\n\n  function popInterpolationStack(state) {\n    return (state.interpolationStack || (state.interpolationStack = [])).pop();\n  }\n\n  function sizeInterpolationStack(state) {\n    return state.interpolationStack ? state.interpolationStack.length : 0;\n  }\n\n  CodeMirror.defineMIME(\"application/dart\", {\n    name: \"clike\",\n    keywords: set(keywords),\n    blockKeywords: set(blockKeywords),\n    builtin: set(builtins),\n    atoms: set(atoms),\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_\\.]/);\n        return \"meta\";\n      },\n\n      // custom string handling to deal with triple-quoted strings and string interpolation\n      \"'\": function(stream, state) {\n        return tokenString(\"'\", stream, state, false);\n      },\n      \"\\\"\": function(stream, state) {\n        return tokenString(\"\\\"\", stream, state, false);\n      },\n      \"r\": function(stream, state) {\n        var peek = stream.peek();\n        if (peek == \"'\" || peek == \"\\\"\") {\n          return tokenString(stream.next(), stream, state, true);\n        }\n        return false;\n      },\n\n      \"}\": function(_stream, state) {\n        // \"}\" is end of interpolation, if interpolation stack is non-empty\n        if (sizeInterpolationStack(state) > 0) {\n          state.tokenize = popInterpolationStack(state);\n          return null;\n        }\n        return false;\n      },\n\n      \"/\": function(stream, state) {\n        if (!stream.eat(\"*\")) return false\n        state.tokenize = tokenNestedComment(1)\n        return state.tokenize(stream, state)\n      }\n    }\n  });\n\n  function tokenString(quote, stream, state, raw) {\n    var tripleQuoted = false;\n    if (stream.eat(quote)) {\n      if (stream.eat(quote)) tripleQuoted = true;\n      else return \"string\"; //empty string\n    }\n    function tokenStringHelper(stream, state) {\n      var escaped = false;\n      while (!stream.eol()) {\n        if (!raw && !escaped && stream.peek() == \"$\") {\n          pushInterpolationStack(state);\n          state.tokenize = tokenInterpolation;\n          return \"string\";\n        }\n        var next = stream.next();\n        if (next == quote && !escaped && (!tripleQuoted || stream.match(quote + quote))) {\n          state.tokenize = null;\n          break;\n        }\n        escaped = !raw && !escaped && next == \"\\\\\";\n      }\n      return \"string\";\n    }\n    state.tokenize = tokenStringHelper;\n    return tokenStringHelper(stream, state);\n  }\n\n  function tokenInterpolation(stream, state) {\n    stream.eat(\"$\");\n    if (stream.eat(\"{\")) {\n      // let clike handle the content of ${...},\n      // we take over again when \"}\" appears (see hooks).\n      state.tokenize = null;\n    } else {\n      state.tokenize = tokenInterpolationIdentifier;\n    }\n    return null;\n  }\n\n  function tokenInterpolationIdentifier(stream, state) {\n    stream.eatWhile(/[\\w_]/);\n    state.tokenize = popInterpolationStack(state);\n    return \"variable\";\n  }\n\n  function tokenNestedComment(depth) {\n    return function (stream, state) {\n      var ch\n      while (ch = stream.next()) {\n        if (ch == \"*\" && stream.eat(\"/\")) {\n          if (depth == 1) {\n            state.tokenize = null\n            break\n          } else {\n            state.tokenize = tokenNestedComment(depth - 1)\n            return state.tokenize(stream, state)\n          }\n        } else if (ch == \"/\" && stream.eat(\"*\")) {\n          state.tokenize = tokenNestedComment(depth + 1)\n          return state.tokenize(stream, state)\n        }\n      }\n      return \"comment\"\n    }\n  }\n\n  CodeMirror.registerHelper(\"hintWords\", \"application/dart\", keywords.concat(atoms).concat(builtins));\n\n  // This is needed to make loading through meta.js work.\n  CodeMirror.defineMode(\"dart\", function(conf) {\n    return CodeMirror.getMode(conf, \"application/dart\");\n  }, \"clike\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"),\n        require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\",\n            \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"django:inner\", function() {\n    var keywords = [\"block\", \"endblock\", \"for\", \"endfor\", \"true\", \"false\", \"filter\", \"endfilter\",\n                    \"loop\", \"none\", \"self\", \"super\", \"if\", \"elif\", \"endif\", \"as\", \"else\", \"import\",\n                    \"with\", \"endwith\", \"without\", \"context\", \"ifequal\", \"endifequal\", \"ifnotequal\",\n                    \"endifnotequal\", \"extends\", \"include\", \"load\", \"comment\", \"endcomment\",\n                    \"empty\", \"url\", \"static\", \"trans\", \"blocktrans\", \"endblocktrans\", \"now\",\n                    \"regroup\", \"lorem\", \"ifchanged\", \"endifchanged\", \"firstof\", \"debug\", \"cycle\",\n                    \"csrf_token\", \"autoescape\", \"endautoescape\", \"spaceless\", \"endspaceless\",\n                    \"ssi\", \"templatetag\", \"verbatim\", \"endverbatim\", \"widthratio\"],\n        filters = [\"add\", \"addslashes\", \"capfirst\", \"center\", \"cut\", \"date\",\n                   \"default\", \"default_if_none\", \"dictsort\",\n                   \"dictsortreversed\", \"divisibleby\", \"escape\", \"escapejs\",\n                   \"filesizeformat\", \"first\", \"floatformat\", \"force_escape\",\n                   \"get_digit\", \"iriencode\", \"join\", \"last\", \"length\",\n                   \"length_is\", \"linebreaks\", \"linebreaksbr\", \"linenumbers\",\n                   \"ljust\", \"lower\", \"make_list\", \"phone2numeric\", \"pluralize\",\n                   \"pprint\", \"random\", \"removetags\", \"rjust\", \"safe\",\n                   \"safeseq\", \"slice\", \"slugify\", \"stringformat\", \"striptags\",\n                   \"time\", \"timesince\", \"timeuntil\", \"title\", \"truncatechars\",\n                   \"truncatechars_html\", \"truncatewords\", \"truncatewords_html\",\n                   \"unordered_list\", \"upper\", \"urlencode\", \"urlize\",\n                   \"urlizetrunc\", \"wordcount\", \"wordwrap\", \"yesno\"],\n        operators = [\"==\", \"!=\", \"<\", \">\", \"<=\", \">=\"],\n        wordOperators = [\"in\", \"not\", \"or\", \"and\"];\n\n    keywords = new RegExp(\"^\\\\b(\" + keywords.join(\"|\") + \")\\\\b\");\n    filters = new RegExp(\"^\\\\b(\" + filters.join(\"|\") + \")\\\\b\");\n    operators = new RegExp(\"^\\\\b(\" + operators.join(\"|\") + \")\\\\b\");\n    wordOperators = new RegExp(\"^\\\\b(\" + wordOperators.join(\"|\") + \")\\\\b\");\n\n    // We have to return \"null\" instead of null, in order to avoid string\n    // styling as the default, when using Django templates inside HTML\n    // element attributes\n    function tokenBase (stream, state) {\n      // Attempt to identify a variable, template or comment tag respectively\n      if (stream.match(\"{{\")) {\n        state.tokenize = inVariable;\n        return \"tag\";\n      } else if (stream.match(\"{%\")) {\n        state.tokenize = inTag;\n        return \"tag\";\n      } else if (stream.match(\"{#\")) {\n        state.tokenize = inComment;\n        return \"comment\";\n      }\n\n      // Ignore completely any stream series that do not match the\n      // Django template opening tags.\n      while (stream.next() != null && !stream.match(/\\{[{%#]/, false)) {}\n      return null;\n    }\n\n    // A string can be included in either single or double quotes (this is\n    // the delimiter). Mark everything as a string until the start delimiter\n    // occurs again.\n    function inString (delimiter, previousTokenizer) {\n      return function (stream, state) {\n        if (!state.escapeNext && stream.eat(delimiter)) {\n          state.tokenize = previousTokenizer;\n        } else {\n          if (state.escapeNext) {\n            state.escapeNext = false;\n          }\n\n          var ch = stream.next();\n\n          // Take into account the backslash for escaping characters, such as\n          // the string delimiter.\n          if (ch == \"\\\\\") {\n            state.escapeNext = true;\n          }\n        }\n\n        return \"string\";\n      };\n    }\n\n    // Apply Django template variable syntax highlighting\n    function inVariable (stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        }\n\n        // Dot followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for property.\");\n        }\n      }\n\n      // Attempt to match a pipe that precedes a filter\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        }\n\n        // Pipe followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for filter.\");\n        }\n      }\n\n      // Highlight properties\n      if (state.waitProperty) {\n        state.waitProperty = false;\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true;  // A property can be followed by another property\n          state.waitPipe = true;  // A property can be followed by a filter\n          return \"property\";\n        }\n      }\n\n      // Highlight filters\n      if (state.waitFilter) {\n          state.waitFilter = false;\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      }\n\n      // Ignore all white spaces\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      }\n\n      // Identify numbers\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      }\n\n      // Identify strings\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      }\n\n      // Attempt to find the variable\n      if (stream.match(/\\b(\\w+)\\b/) && !state.foundVariable) {\n        state.waitDot = true;\n        state.waitPipe = true;  // A property can be followed by a filter\n        return \"variable\";\n      }\n\n      // If found closing tag reset\n      if (stream.match(\"}}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        state.tokenize = tokenBase;\n        return \"tag\";\n      }\n\n      // If nothing was found, advance to the next character\n      stream.next();\n      return \"null\";\n    }\n\n    function inTag (stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        }\n\n        // Dot followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for property.\");\n        }\n      }\n\n      // Attempt to match a pipe that precedes a filter\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        }\n\n        // Pipe followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for filter.\");\n        }\n      }\n\n      // Highlight properties\n      if (state.waitProperty) {\n        state.waitProperty = false;\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true;  // A property can be followed by another property\n          state.waitPipe = true;  // A property can be followed by a filter\n          return \"property\";\n        }\n      }\n\n      // Highlight filters\n      if (state.waitFilter) {\n          state.waitFilter = false;\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      }\n\n      // Ignore all white spaces\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      }\n\n      // Identify numbers\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      }\n\n      // Identify strings\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      }\n\n      // Attempt to match an operator\n      if (stream.match(operators)) {\n        return \"operator\";\n      }\n\n      // Attempt to match a word operator\n      if (stream.match(wordOperators)) {\n        return \"keyword\";\n      }\n\n      // Attempt to match a keyword\n      var keywordMatch = stream.match(keywords);\n      if (keywordMatch) {\n        if (keywordMatch[0] == \"comment\") {\n          state.blockCommentTag = true;\n        }\n        return \"keyword\";\n      }\n\n      // Attempt to match a variable\n      if (stream.match(/\\b(\\w+)\\b/)) {\n        state.waitDot = true;\n        state.waitPipe = true;  // A property can be followed by a filter\n        return \"variable\";\n      }\n\n      // If found closing tag reset\n      if (stream.match(\"%}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        // If the tag that closes is a block comment tag, we want to mark the\n        // following code as comment, until the tag closes.\n        if (state.blockCommentTag) {\n          state.blockCommentTag = false;  // Release the \"lock\"\n          state.tokenize = inBlockComment;\n        } else {\n          state.tokenize = tokenBase;\n        }\n        return \"tag\";\n      }\n\n      // If nothing was found, advance to the next character\n      stream.next();\n      return \"null\";\n    }\n\n    // Mark everything as comment inside the tag and the tag itself.\n    function inComment (stream, state) {\n      if (stream.match(/^.*?#\\}/)) state.tokenize = tokenBase\n      else stream.skipToEnd()\n      return \"comment\";\n    }\n\n    // Mark everything as a comment until the `blockcomment` tag closes.\n    function inBlockComment (stream, state) {\n      if (stream.match(/\\{%\\s*endcomment\\s*%\\}/, false)) {\n        state.tokenize = inTag;\n        stream.match(\"{%\");\n        return \"tag\";\n      } else {\n        stream.next();\n        return \"comment\";\n      }\n    }\n\n    return {\n      startState: function () {\n        return {tokenize: tokenBase};\n      },\n      token: function (stream, state) {\n        return state.tokenize(stream, state);\n      },\n      blockCommentStart: \"{% comment %}\",\n      blockCommentEnd: \"{% endcomment %}\"\n    };\n  });\n\n  CodeMirror.defineMode(\"django\", function(config) {\n    var htmlBase = CodeMirror.getMode(config, \"text/html\");\n    var djangoInner = CodeMirror.getMode(config, \"django:inner\");\n    return CodeMirror.overlayMode(htmlBase, djangoInner);\n  });\n\n  CodeMirror.defineMIME(\"text/x-django\", \"django\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n/*\n  DTD mode\n  Ported to CodeMirror by Peter Kroon <plakroon@gmail.com>\n  Report bugs/issues here: https://github.com/codemirror/CodeMirror/issues\n  GitHub: @peterkroon\n*/\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"dtd\", function(config) {\n  var indentUnit = config.indentUnit, type;\n  function ret(style, tp) {type = tp; return style;}\n\n  function tokenBase(stream, state) {\n    var ch = stream.next() || \"\";\n\n    if (ch == \"<\" && stream.eat(\"!\") ) {\n      if (stream.eatWhile(/[\\-]/)) {\n        state.tokenize = tokenSGMLComment;\n        return tokenSGMLComment(stream, state);\n      } else if (stream.eatWhile(/[\\w]/)) return ret(\"keyword\", \"doindent\");\n    } else if (ch == \"<\" && stream.eat(\"?\")) { //xml declaration\n      state.tokenize = inBlock(\"meta\", \"?>\");\n      return ret(\"meta\", ch);\n    } else if (ch == \"#\" && stream.eatWhile(/[\\w]/)) return ret(\"atom\", \"tag\");\n    else if (ch == \"|\") return ret(\"keyword\", \"seperator\");\n    else if (ch.match(/[\\(\\)\\[\\]\\-\\.,\\+\\?>]/)) return ret(null, ch);//if(ch === \">\") return ret(null, \"endtag\"); else\n    else if (ch.match(/[\\[\\]]/)) return ret(\"rule\", ch);\n    else if (ch == \"\\\"\" || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (stream.eatWhile(/[a-zA-Z\\?\\+\\d]/)) {\n      var sc = stream.current();\n      if( sc.substr(sc.length-1,sc.length).match(/\\?|\\+/) !== null )stream.backUp(1);\n      return ret(\"tag\", \"tag\");\n    } else if (ch == \"%\" || ch == \"*\" ) return ret(\"number\", \"number\");\n    else {\n      stream.eatWhile(/[\\w\\\\\\-_%.{,]/);\n      return ret(null, null);\n    }\n  }\n\n  function tokenSGMLComment(stream, state) {\n    var dashes = 0, ch;\n    while ((ch = stream.next()) != null) {\n      if (dashes >= 2 && ch == \">\") {\n        state.tokenize = tokenBase;\n        break;\n      }\n      dashes = (ch == \"-\") ? dashes + 1 : 0;\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return ret(\"string\", \"tag\");\n    };\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    };\n  }\n\n  return {\n    startState: function(base) {\n      return {tokenize: tokenBase,\n              baseIndent: base || 0,\n              stack: []};\n    },\n\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n\n      var context = state.stack[state.stack.length-1];\n      if (stream.current() == \"[\" || type === \"doindent\" || type == \"[\") state.stack.push(\"rule\");\n      else if (type === \"endtag\") state.stack[state.stack.length-1] = \"endtag\";\n      else if (stream.current() == \"]\" || type == \"]\" || (type == \">\" && context == \"rule\")) state.stack.pop();\n      else if (type == \"[\") state.stack.push(\"[\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      var n = state.stack.length;\n\n      if( textAfter.match(/\\]\\s+|\\]/) )n=n-1;\n      else if(textAfter.substr(textAfter.length-1, textAfter.length) === \">\"){\n        if(textAfter.substr(0,1) === \"<\") {}\n        else if( type == \"doindent\" && textAfter.length > 1 ) {}\n        else if( type == \"doindent\")n--;\n        else if( type == \">\" && textAfter.length > 1) {}\n        else if( type == \"tag\" && textAfter !== \">\") {}\n        else if( type == \"tag\" && state.stack[state.stack.length-1] == \"rule\")n--;\n        else if( type == \"tag\")n++;\n        else if( textAfter === \">\" && state.stack[state.stack.length-1] == \"rule\" && type === \">\")n--;\n        else if( textAfter === \">\" && state.stack[state.stack.length-1] == \"rule\") {}\n        else if( textAfter.substr(0,1) !== \"<\" && textAfter.substr(0,1) === \">\" )n=n-1;\n        else if( textAfter === \">\") {}\n        else n=n-1;\n        //over rule them all\n        if(type == null || type == \"]\")n--;\n      }\n\n      return state.baseIndent + n * indentUnit;\n    },\n\n    electricChars: \"]>\"\n  };\n});\n\nCodeMirror.defineMIME(\"application/xml-dtd\", \"dtd\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction forEach(arr, f) {\n  for (var i = 0; i < arr.length; i++) f(arr[i], i)\n}\nfunction some(arr, f) {\n  for (var i = 0; i < arr.length; i++) if (f(arr[i], i)) return true\n  return false\n}\n\nCodeMirror.defineMode(\"dylan\", function(_config) {\n  // Words\n  var words = {\n    // Words that introduce unnamed definitions like \"define interface\"\n    unnamedDefinition: [\"interface\"],\n\n    // Words that introduce simple named definitions like \"define library\"\n    namedDefinition: [\"module\", \"library\", \"macro\",\n                      \"C-struct\", \"C-union\",\n                      \"C-function\", \"C-callable-wrapper\"\n                     ],\n\n    // Words that introduce type definitions like \"define class\".\n    // These are also parameterized like \"define method\" and are\n    // appended to otherParameterizedDefinitionWords\n    typeParameterizedDefinition: [\"class\", \"C-subtype\", \"C-mapped-subtype\"],\n\n    // Words that introduce trickier definitions like \"define method\".\n    // These require special definitions to be added to startExpressions\n    otherParameterizedDefinition: [\"method\", \"function\",\n                                   \"C-variable\", \"C-address\"\n                                  ],\n\n    // Words that introduce module constant definitions.\n    // These must also be simple definitions and are\n    // appended to otherSimpleDefinitionWords\n    constantSimpleDefinition: [\"constant\"],\n\n    // Words that introduce module variable definitions.\n    // These must also be simple definitions and are\n    // appended to otherSimpleDefinitionWords\n    variableSimpleDefinition: [\"variable\"],\n\n    // Other words that introduce simple definitions\n    // (without implicit bodies).\n    otherSimpleDefinition: [\"generic\", \"domain\",\n                            \"C-pointer-type\",\n                            \"table\"\n                           ],\n\n    // Words that begin statements with implicit bodies.\n    statement: [\"if\", \"block\", \"begin\", \"method\", \"case\",\n                \"for\", \"select\", \"when\", \"unless\", \"until\",\n                \"while\", \"iterate\", \"profiling\", \"dynamic-bind\"\n               ],\n\n    // Patterns that act as separators in compound statements.\n    // This may include any general pattern that must be indented\n    // specially.\n    separator: [\"finally\", \"exception\", \"cleanup\", \"else\",\n                \"elseif\", \"afterwards\"\n               ],\n\n    // Keywords that do not require special indentation handling,\n    // but which should be highlighted\n    other: [\"above\", \"below\", \"by\", \"from\", \"handler\", \"in\",\n            \"instance\", \"let\", \"local\", \"otherwise\", \"slot\",\n            \"subclass\", \"then\", \"to\", \"keyed-by\", \"virtual\"\n           ],\n\n    // Condition signaling function calls\n    signalingCalls: [\"signal\", \"error\", \"cerror\",\n                     \"break\", \"check-type\", \"abort\"\n                    ]\n  };\n\n  words[\"otherDefinition\"] =\n    words[\"unnamedDefinition\"]\n    .concat(words[\"namedDefinition\"])\n    .concat(words[\"otherParameterizedDefinition\"]);\n\n  words[\"definition\"] =\n    words[\"typeParameterizedDefinition\"]\n    .concat(words[\"otherDefinition\"]);\n\n  words[\"parameterizedDefinition\"] =\n    words[\"typeParameterizedDefinition\"]\n    .concat(words[\"otherParameterizedDefinition\"]);\n\n  words[\"simpleDefinition\"] =\n    words[\"constantSimpleDefinition\"]\n    .concat(words[\"variableSimpleDefinition\"])\n    .concat(words[\"otherSimpleDefinition\"]);\n\n  words[\"keyword\"] =\n    words[\"statement\"]\n    .concat(words[\"separator\"])\n    .concat(words[\"other\"]);\n\n  // Patterns\n  var symbolPattern = \"[-_a-zA-Z?!*@<>$%]+\";\n  var symbol = new RegExp(\"^\" + symbolPattern);\n  var patterns = {\n    // Symbols with special syntax\n    symbolKeyword: symbolPattern + \":\",\n    symbolClass: \"<\" + symbolPattern + \">\",\n    symbolGlobal: \"\\\\*\" + symbolPattern + \"\\\\*\",\n    symbolConstant: \"\\\\$\" + symbolPattern\n  };\n  var patternStyles = {\n    symbolKeyword: \"atom\",\n    symbolClass: \"tag\",\n    symbolGlobal: \"variable-2\",\n    symbolConstant: \"variable-3\"\n  };\n\n  // Compile all patterns to regular expressions\n  for (var patternName in patterns)\n    if (patterns.hasOwnProperty(patternName))\n      patterns[patternName] = new RegExp(\"^\" + patterns[patternName]);\n\n  // Names beginning \"with-\" and \"without-\" are commonly\n  // used as statement macro\n  patterns[\"keyword\"] = [/^with(?:out)?-[-_a-zA-Z?!*@<>$%]+/];\n\n  var styles = {};\n  styles[\"keyword\"] = \"keyword\";\n  styles[\"definition\"] = \"def\";\n  styles[\"simpleDefinition\"] = \"def\";\n  styles[\"signalingCalls\"] = \"builtin\";\n\n  // protected words lookup table\n  var wordLookup = {};\n  var styleLookup = {};\n\n  forEach([\n    \"keyword\",\n    \"definition\",\n    \"simpleDefinition\",\n    \"signalingCalls\"\n  ], function(type) {\n    forEach(words[type], function(word) {\n      wordLookup[word] = type;\n      styleLookup[word] = styles[type];\n    });\n  });\n\n\n  function chain(stream, state, f) {\n    state.tokenize = f;\n    return f(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    // String\n    var ch = stream.peek();\n    if (ch == \"'\" || ch == '\"') {\n      stream.next();\n      return chain(stream, state, tokenString(ch, \"string\"));\n    }\n    // Comment\n    else if (ch == \"/\") {\n      stream.next();\n      if (stream.eat(\"*\")) {\n        return chain(stream, state, tokenComment);\n      } else if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      stream.backUp(1);\n    }\n    // Decimal\n    else if (/[+\\-\\d\\.]/.test(ch)) {\n      if (stream.match(/^[+-]?[0-9]*\\.[0-9]*([esdx][+-]?[0-9]+)?/i) ||\n          stream.match(/^[+-]?[0-9]+([esdx][+-]?[0-9]+)/i) ||\n          stream.match(/^[+-]?\\d+/)) {\n        return \"number\";\n      }\n    }\n    // Hash\n    else if (ch == \"#\") {\n      stream.next();\n      // Symbol with string syntax\n      ch = stream.peek();\n      if (ch == '\"') {\n        stream.next();\n        return chain(stream, state, tokenString('\"', \"string\"));\n      }\n      // Binary number\n      else if (ch == \"b\") {\n        stream.next();\n        stream.eatWhile(/[01]/);\n        return \"number\";\n      }\n      // Hex number\n      else if (ch == \"x\") {\n        stream.next();\n        stream.eatWhile(/[\\da-f]/i);\n        return \"number\";\n      }\n      // Octal number\n      else if (ch == \"o\") {\n        stream.next();\n        stream.eatWhile(/[0-7]/);\n        return \"number\";\n      }\n      // Token concatenation in macros\n      else if (ch == '#') {\n        stream.next();\n        return \"punctuation\";\n      }\n      // Sequence literals\n      else if ((ch == '[') || (ch == '(')) {\n        stream.next();\n        return \"bracket\";\n      // Hash symbol\n      } else if (stream.match(/f|t|all-keys|include|key|next|rest/i)) {\n        return \"atom\";\n      } else {\n        stream.eatWhile(/[-a-zA-Z]/);\n        return \"error\";\n      }\n    } else if (ch == \"~\") {\n      stream.next();\n      ch = stream.peek();\n      if (ch == \"=\") {\n        stream.next();\n        ch = stream.peek();\n        if (ch == \"=\") {\n          stream.next();\n          return \"operator\";\n        }\n        return \"operator\";\n      }\n      return \"operator\";\n    } else if (ch == \":\") {\n      stream.next();\n      ch = stream.peek();\n      if (ch == \"=\") {\n        stream.next();\n        return \"operator\";\n      } else if (ch == \":\") {\n        stream.next();\n        return \"punctuation\";\n      }\n    } else if (\"[](){}\".indexOf(ch) != -1) {\n      stream.next();\n      return \"bracket\";\n    } else if (\".,\".indexOf(ch) != -1) {\n      stream.next();\n      return \"punctuation\";\n    } else if (stream.match(\"end\")) {\n      return \"keyword\";\n    }\n    for (var name in patterns) {\n      if (patterns.hasOwnProperty(name)) {\n        var pattern = patterns[name];\n        if ((pattern instanceof Array && some(pattern, function(p) {\n          return stream.match(p);\n        })) || stream.match(pattern))\n          return patternStyles[name];\n      }\n    }\n    if (/[+\\-*\\/^=<>&|]/.test(ch)) {\n      stream.next();\n      return \"operator\";\n    }\n    if (stream.match(\"define\")) {\n      return \"def\";\n    } else {\n      stream.eatWhile(/[\\w\\-]/);\n      // Keyword\n      if (wordLookup.hasOwnProperty(stream.current())) {\n        return styleLookup[stream.current()];\n      } else if (stream.current().match(symbol)) {\n        return \"variable\";\n      } else {\n        stream.next();\n        return \"variable-2\";\n      }\n    }\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, maybeNested = false, nestedCount = 0, ch;\n    while ((ch = stream.next())) {\n      if (ch == \"/\" && maybeEnd) {\n        if (nestedCount > 0) {\n          nestedCount--;\n        } else {\n          state.tokenize = tokenBase;\n          break;\n        }\n      } else if (ch == \"*\" && maybeNested) {\n        nestedCount++;\n      }\n      maybeEnd = (ch == \"*\");\n      maybeNested = (ch == \"/\");\n    }\n    return \"comment\";\n  }\n\n  function tokenString(quote, style) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {\n          end = true;\n          break;\n        }\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !escaped) {\n        state.tokenize = tokenBase;\n      }\n      return style;\n    };\n  }\n\n  // Interface\n  return {\n    startState: function() {\n      return {\n        tokenize: tokenBase,\n        currentIndent: 0\n      };\n    },\n    token: function(stream, state) {\n      if (stream.eatSpace())\n        return null;\n      var style = state.tokenize(stream, state);\n      return style;\n    },\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-dylan\", \"dylan\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"), require(\"../../addon/mode/multiplex\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\", \"../../addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode(\"handlebars-tags\", {\n    start: [\n      { regex: /\\{\\{!--/, push: \"dash_comment\", token: \"comment\" },\n      { regex: /\\{\\{!/,   push: \"comment\", token: \"comment\" },\n      { regex: /\\{\\{/,    push: \"handlebars\", token: \"tag\" }\n    ],\n    handlebars: [\n      { regex: /\\}\\}/, pop: true, token: \"tag\" },\n\n      // Double and single quotes\n      { regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/, token: \"string\" },\n      { regex: /'(?:[^\\\\']|\\\\.)*'?/, token: \"string\" },\n\n      // Handlebars keywords\n      { regex: />|[#\\/]([A-Za-z_]\\w*)/, token: \"keyword\" },\n      { regex: /(?:else|this)\\b/, token: \"keyword\" },\n\n      // Numeral\n      { regex: /\\d+/i, token: \"number\" },\n\n      // Atoms like = and .\n      { regex: /=|~|@|true|false/, token: \"atom\" },\n\n      // Paths\n      { regex: /(?:\\.\\.\\/)*(?:[A-Za-z_][\\w\\.]*)+/, token: \"variable-2\" }\n    ],\n    dash_comment: [\n      { regex: /--\\}\\}/, pop: true, token: \"comment\" },\n\n      // Commented code\n      { regex: /./, token: \"comment\"}\n    ],\n    comment: [\n      { regex: /\\}\\}/, pop: true, token: \"comment\" },\n      { regex: /./, token: \"comment\" }\n    ]\n  });\n\n  CodeMirror.defineMode(\"handlebars\", function(config, parserConfig) {\n    var handlebars = CodeMirror.getMode(config, \"handlebars-tags\");\n    if (!parserConfig || !parserConfig.base) return handlebars;\n    return CodeMirror.multiplexingMode(\n      CodeMirror.getMode(config, parserConfig.base),\n      {open: \"{{\", close: \"}}\", mode: handlebars, parseDelimiters: true}\n    );\n  });\n\n  CodeMirror.defineMIME(\"text/x-handlebars-template\", \"handlebars\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function wordRegexp(words) {\n    return new RegExp('^((' + words.join(')|(') + '))\\\\b', 'i');\n  };\n\n  var builtinArray = [\n    'a_correlate', 'abs', 'acos', 'adapt_hist_equal', 'alog',\n    'alog2', 'alog10', 'amoeba', 'annotate', 'app_user_dir',\n    'app_user_dir_query', 'arg_present', 'array_equal', 'array_indices',\n    'arrow', 'ascii_template', 'asin', 'assoc', 'atan',\n    'axis', 'axis', 'bandpass_filter', 'bandreject_filter', 'barplot',\n    'bar_plot', 'beseli', 'beselj', 'beselk', 'besely',\n    'beta', 'biginteger', 'bilinear', 'bin_date', 'binary_template',\n    'bindgen', 'binomial', 'bit_ffs', 'bit_population', 'blas_axpy',\n    'blk_con', 'boolarr', 'boolean', 'boxplot', 'box_cursor',\n    'breakpoint', 'broyden', 'bubbleplot', 'butterworth', 'bytarr',\n    'byte', 'byteorder', 'bytscl', 'c_correlate', 'calendar',\n    'caldat', 'call_external', 'call_function', 'call_method',\n    'call_procedure', 'canny', 'catch', 'cd', 'cdf', 'ceil',\n    'chebyshev', 'check_math', 'chisqr_cvf', 'chisqr_pdf', 'choldc',\n    'cholsol', 'cindgen', 'cir_3pnt', 'clipboard', 'close',\n    'clust_wts', 'cluster', 'cluster_tree', 'cmyk_convert', 'code_coverage',\n    'color_convert', 'color_exchange', 'color_quan', 'color_range_map',\n    'colorbar', 'colorize_sample', 'colormap_applicable',\n    'colormap_gradient', 'colormap_rotation', 'colortable',\n    'comfit', 'command_line_args', 'common', 'compile_opt', 'complex',\n    'complexarr', 'complexround', 'compute_mesh_normals', 'cond', 'congrid',\n    'conj', 'constrained_min', 'contour', 'contour', 'convert_coord',\n    'convol', 'convol_fft', 'coord2to3', 'copy_lun', 'correlate',\n    'cos', 'cosh', 'cpu', 'cramer', 'createboxplotdata',\n    'create_cursor', 'create_struct', 'create_view', 'crossp', 'crvlength',\n    'ct_luminance', 'cti_test', 'cursor', 'curvefit', 'cv_coord',\n    'cvttobm', 'cw_animate', 'cw_animate_getp', 'cw_animate_load',\n    'cw_animate_run', 'cw_arcball', 'cw_bgroup', 'cw_clr_index',\n    'cw_colorsel', 'cw_defroi', 'cw_field', 'cw_filesel', 'cw_form',\n    'cw_fslider', 'cw_light_editor', 'cw_light_editor_get',\n    'cw_light_editor_set', 'cw_orient', 'cw_palette_editor',\n    'cw_palette_editor_get', 'cw_palette_editor_set', 'cw_pdmenu',\n    'cw_rgbslider', 'cw_tmpl', 'cw_zoom', 'db_exists',\n    'dblarr', 'dcindgen', 'dcomplex', 'dcomplexarr', 'define_key',\n    'define_msgblk', 'define_msgblk_from_file', 'defroi', 'defsysv',\n    'delvar', 'dendro_plot', 'dendrogram', 'deriv', 'derivsig',\n    'determ', 'device', 'dfpmin', 'diag_matrix', 'dialog_dbconnect',\n    'dialog_message', 'dialog_pickfile', 'dialog_printersetup',\n    'dialog_printjob', 'dialog_read_image',\n    'dialog_write_image', 'dictionary', 'digital_filter', 'dilate', 'dindgen',\n    'dissolve', 'dist', 'distance_measure', 'dlm_load', 'dlm_register',\n    'doc_library', 'double', 'draw_roi', 'edge_dog', 'efont',\n    'eigenql', 'eigenvec', 'ellipse', 'elmhes', 'emboss',\n    'empty', 'enable_sysrtn', 'eof', 'eos', 'erase',\n    'erf', 'erfc', 'erfcx', 'erode', 'errorplot',\n    'errplot', 'estimator_filter', 'execute', 'exit', 'exp',\n    'expand', 'expand_path', 'expint', 'extrac', 'extract_slice',\n    'f_cvf', 'f_pdf', 'factorial', 'fft', 'file_basename',\n    'file_chmod', 'file_copy', 'file_delete', 'file_dirname',\n    'file_expand_path', 'file_gunzip', 'file_gzip', 'file_info',\n    'file_lines', 'file_link', 'file_mkdir', 'file_move',\n    'file_poll_input', 'file_readlink', 'file_same',\n    'file_search', 'file_tar', 'file_test', 'file_untar', 'file_unzip',\n    'file_which', 'file_zip', 'filepath', 'findgen', 'finite',\n    'fix', 'flick', 'float', 'floor', 'flow3',\n    'fltarr', 'flush', 'format_axis_values', 'forward_function', 'free_lun',\n    'fstat', 'fulstr', 'funct', 'function', 'fv_test',\n    'fx_root', 'fz_roots', 'gamma', 'gamma_ct', 'gauss_cvf',\n    'gauss_pdf', 'gauss_smooth', 'gauss2dfit', 'gaussfit',\n    'gaussian_function', 'gaussint', 'get_drive_list', 'get_dxf_objects',\n    'get_kbrd', 'get_login_info',\n    'get_lun', 'get_screen_size', 'getenv', 'getwindows', 'greg2jul',\n    'grib', 'grid_input', 'grid_tps', 'grid3', 'griddata',\n    'gs_iter', 'h_eq_ct', 'h_eq_int', 'hanning', 'hash',\n    'hdf', 'hdf5', 'heap_free', 'heap_gc', 'heap_nosave',\n    'heap_refcount', 'heap_save', 'help', 'hilbert', 'hist_2d',\n    'hist_equal', 'histogram', 'hls', 'hough', 'hqr',\n    'hsv', 'i18n_multibytetoutf8',\n    'i18n_multibytetowidechar', 'i18n_utf8tomultibyte',\n    'i18n_widechartomultibyte',\n    'ibeta', 'icontour', 'iconvertcoord', 'idelete', 'identity',\n    'idl_base64', 'idl_container', 'idl_validname',\n    'idlexbr_assistant', 'idlitsys_createtool',\n    'idlunit', 'iellipse', 'igamma', 'igetcurrent', 'igetdata',\n    'igetid', 'igetproperty', 'iimage', 'image', 'image_cont',\n    'image_statistics', 'image_threshold', 'imaginary', 'imap', 'indgen',\n    'int_2d', 'int_3d', 'int_tabulated', 'intarr', 'interpol',\n    'interpolate', 'interval_volume', 'invert', 'ioctl', 'iopen',\n    'ir_filter', 'iplot', 'ipolygon', 'ipolyline', 'iputdata',\n    'iregister', 'ireset', 'iresolve', 'irotate', 'isa',\n    'isave', 'iscale', 'isetcurrent', 'isetproperty', 'ishft',\n    'isocontour', 'isosurface', 'isurface', 'itext', 'itranslate',\n    'ivector', 'ivolume', 'izoom', 'journal', 'json_parse',\n    'json_serialize', 'jul2greg', 'julday', 'keyword_set', 'krig2d',\n    'kurtosis', 'kw_test', 'l64indgen', 'la_choldc', 'la_cholmprove',\n    'la_cholsol', 'la_determ', 'la_eigenproblem', 'la_eigenql', 'la_eigenvec',\n    'la_elmhes', 'la_gm_linear_model', 'la_hqr', 'la_invert',\n    'la_least_square_equality', 'la_least_squares', 'la_linear_equation',\n    'la_ludc', 'la_lumprove', 'la_lusol',\n    'la_svd', 'la_tridc', 'la_trimprove', 'la_triql', 'la_trired',\n    'la_trisol', 'label_date', 'label_region', 'ladfit', 'laguerre',\n    'lambda', 'lambdap', 'lambertw', 'laplacian', 'least_squares_filter',\n    'leefilt', 'legend', 'legendre', 'linbcg', 'lindgen',\n    'linfit', 'linkimage', 'list', 'll_arc_distance', 'lmfit',\n    'lmgr', 'lngamma', 'lnp_test', 'loadct', 'locale_get',\n    'logical_and', 'logical_or', 'logical_true', 'lon64arr', 'lonarr',\n    'long', 'long64', 'lsode', 'lu_complex', 'ludc',\n    'lumprove', 'lusol', 'm_correlate', 'machar', 'make_array',\n    'make_dll', 'make_rt', 'map', 'mapcontinents', 'mapgrid',\n    'map_2points', 'map_continents', 'map_grid', 'map_image', 'map_patch',\n    'map_proj_forward', 'map_proj_image', 'map_proj_info',\n    'map_proj_init', 'map_proj_inverse',\n    'map_set', 'matrix_multiply', 'matrix_power', 'max', 'md_test',\n    'mean', 'meanabsdev', 'mean_filter', 'median', 'memory',\n    'mesh_clip', 'mesh_decimate', 'mesh_issolid',\n    'mesh_merge', 'mesh_numtriangles',\n    'mesh_obj', 'mesh_smooth', 'mesh_surfacearea',\n    'mesh_validate', 'mesh_volume',\n    'message', 'min', 'min_curve_surf', 'mk_html_help', 'modifyct',\n    'moment', 'morph_close', 'morph_distance',\n    'morph_gradient', 'morph_hitormiss',\n    'morph_open', 'morph_thin', 'morph_tophat', 'multi', 'n_elements',\n    'n_params', 'n_tags', 'ncdf', 'newton', 'noise_hurl',\n    'noise_pick', 'noise_scatter', 'noise_slur', 'norm', 'obj_class',\n    'obj_destroy', 'obj_hasmethod', 'obj_isa', 'obj_new', 'obj_valid',\n    'objarr', 'on_error', 'on_ioerror', 'online_help', 'openr',\n    'openu', 'openw', 'oplot', 'oploterr', 'orderedhash',\n    'p_correlate', 'parse_url', 'particle_trace', 'path_cache', 'path_sep',\n    'pcomp', 'plot', 'plot3d', 'plot', 'plot_3dbox',\n    'plot_field', 'ploterr', 'plots', 'polar_contour', 'polar_surface',\n    'polyfill', 'polyshade', 'pnt_line', 'point_lun', 'polarplot',\n    'poly', 'poly_2d', 'poly_area', 'poly_fit', 'polyfillv',\n    'polygon', 'polyline', 'polywarp', 'popd', 'powell',\n    'pref_commit', 'pref_get', 'pref_set', 'prewitt', 'primes',\n    'print', 'printf', 'printd', 'pro', 'product',\n    'profile', 'profiler', 'profiles', 'project_vol', 'ps_show_fonts',\n    'psafm', 'pseudo', 'ptr_free', 'ptr_new', 'ptr_valid',\n    'ptrarr', 'pushd', 'qgrid3', 'qhull', 'qromb',\n    'qromo', 'qsimp', 'query_*', 'query_ascii', 'query_bmp',\n    'query_csv', 'query_dicom', 'query_gif', 'query_image', 'query_jpeg',\n    'query_jpeg2000', 'query_mrsid', 'query_pict', 'query_png', 'query_ppm',\n    'query_srf', 'query_tiff', 'query_video', 'query_wav', 'r_correlate',\n    'r_test', 'radon', 'randomn', 'randomu', 'ranks',\n    'rdpix', 'read', 'readf', 'read_ascii', 'read_binary',\n    'read_bmp', 'read_csv', 'read_dicom', 'read_gif', 'read_image',\n    'read_interfile', 'read_jpeg', 'read_jpeg2000', 'read_mrsid', 'read_pict',\n    'read_png', 'read_ppm', 'read_spr', 'read_srf', 'read_sylk',\n    'read_tiff', 'read_video', 'read_wav', 'read_wave', 'read_x11_bitmap',\n    'read_xwd', 'reads', 'readu', 'real_part', 'rebin',\n    'recall_commands', 'recon3', 'reduce_colors', 'reform', 'region_grow',\n    'register_cursor', 'regress', 'replicate',\n    'replicate_inplace', 'resolve_all',\n    'resolve_routine', 'restore', 'retall', 'return', 'reverse',\n    'rk4', 'roberts', 'rot', 'rotate', 'round',\n    'routine_filepath', 'routine_info', 'rs_test', 's_test', 'save',\n    'savgol', 'scale3', 'scale3d', 'scatterplot', 'scatterplot3d',\n    'scope_level', 'scope_traceback', 'scope_varfetch',\n    'scope_varname', 'search2d',\n    'search3d', 'sem_create', 'sem_delete', 'sem_lock', 'sem_release',\n    'set_plot', 'set_shading', 'setenv', 'sfit', 'shade_surf',\n    'shade_surf_irr', 'shade_volume', 'shift', 'shift_diff', 'shmdebug',\n    'shmmap', 'shmunmap', 'shmvar', 'show3', 'showfont',\n    'signum', 'simplex', 'sin', 'sindgen', 'sinh',\n    'size', 'skewness', 'skip_lun', 'slicer3', 'slide_image',\n    'smooth', 'sobel', 'socket', 'sort', 'spawn',\n    'sph_4pnt', 'sph_scat', 'spher_harm', 'spl_init', 'spl_interp',\n    'spline', 'spline_p', 'sprsab', 'sprsax', 'sprsin',\n    'sprstp', 'sqrt', 'standardize', 'stddev', 'stop',\n    'strarr', 'strcmp', 'strcompress', 'streamline', 'streamline',\n    'stregex', 'stretch', 'string', 'strjoin', 'strlen',\n    'strlowcase', 'strmatch', 'strmessage', 'strmid', 'strpos',\n    'strput', 'strsplit', 'strtrim', 'struct_assign', 'struct_hide',\n    'strupcase', 'surface', 'surface', 'surfr', 'svdc',\n    'svdfit', 'svsol', 'swap_endian', 'swap_endian_inplace', 'symbol',\n    'systime', 't_cvf', 't_pdf', 't3d', 'tag_names',\n    'tan', 'tanh', 'tek_color', 'temporary', 'terminal_size',\n    'tetra_clip', 'tetra_surface', 'tetra_volume', 'text', 'thin',\n    'thread', 'threed', 'tic', 'time_test2', 'timegen',\n    'timer', 'timestamp', 'timestamptovalues', 'tm_test', 'toc',\n    'total', 'trace', 'transpose', 'tri_surf', 'triangulate',\n    'trigrid', 'triql', 'trired', 'trisol', 'truncate_lun',\n    'ts_coef', 'ts_diff', 'ts_fcast', 'ts_smooth', 'tv',\n    'tvcrs', 'tvlct', 'tvrd', 'tvscl', 'typename',\n    'uindgen', 'uint', 'uintarr', 'ul64indgen', 'ulindgen',\n    'ulon64arr', 'ulonarr', 'ulong', 'ulong64', 'uniq',\n    'unsharp_mask', 'usersym', 'value_locate', 'variance', 'vector',\n    'vector_field', 'vel', 'velovect', 'vert_t3d', 'voigt',\n    'volume', 'voronoi', 'voxel_proj', 'wait', 'warp_tri',\n    'watershed', 'wdelete', 'wf_draw', 'where', 'widget_base',\n    'widget_button', 'widget_combobox', 'widget_control',\n    'widget_displaycontextmenu', 'widget_draw',\n    'widget_droplist', 'widget_event', 'widget_info',\n    'widget_label', 'widget_list',\n    'widget_propertysheet', 'widget_slider', 'widget_tab',\n    'widget_table', 'widget_text',\n    'widget_tree', 'widget_tree_move', 'widget_window',\n    'wiener_filter', 'window',\n    'window', 'write_bmp', 'write_csv', 'write_gif', 'write_image',\n    'write_jpeg', 'write_jpeg2000', 'write_nrif', 'write_pict', 'write_png',\n    'write_ppm', 'write_spr', 'write_srf', 'write_sylk', 'write_tiff',\n    'write_video', 'write_wav', 'write_wave', 'writeu', 'wset',\n    'wshow', 'wtn', 'wv_applet', 'wv_cwt', 'wv_cw_wavelet',\n    'wv_denoise', 'wv_dwt', 'wv_fn_coiflet',\n    'wv_fn_daubechies', 'wv_fn_gaussian',\n    'wv_fn_haar', 'wv_fn_morlet', 'wv_fn_paul',\n    'wv_fn_symlet', 'wv_import_data',\n    'wv_import_wavelet', 'wv_plot3d_wps', 'wv_plot_multires',\n    'wv_pwt', 'wv_tool_denoise',\n    'xbm_edit', 'xdisplayfile', 'xdxf', 'xfont', 'xinteranimate',\n    'xloadct', 'xmanager', 'xmng_tmpl', 'xmtool', 'xobjview',\n    'xobjview_rotate', 'xobjview_write_image',\n    'xpalette', 'xpcolor', 'xplot3d',\n    'xregistered', 'xroi', 'xsq_test', 'xsurface', 'xvaredit',\n    'xvolume', 'xvolume_rotate', 'xvolume_write_image',\n    'xyouts', 'zlib_compress', 'zlib_uncompress', 'zoom', 'zoom_24'\n  ];\n  var builtins = wordRegexp(builtinArray);\n\n  var keywordArray = [\n    'begin', 'end', 'endcase', 'endfor',\n    'endwhile', 'endif', 'endrep', 'endforeach',\n    'break', 'case', 'continue', 'for',\n    'foreach', 'goto', 'if', 'then', 'else',\n    'repeat', 'until', 'switch', 'while',\n    'do', 'pro', 'function'\n  ];\n  var keywords = wordRegexp(keywordArray);\n\n  CodeMirror.registerHelper(\"hintWords\", \"idl\", builtinArray.concat(keywordArray));\n\n  var identifiers = new RegExp('^[_a-z\\xa1-\\uffff][_a-z0-9\\xa1-\\uffff]*', 'i');\n\n  var singleOperators = /[+\\-*&=<>\\/@#~$]/;\n  var boolOperators = new RegExp('(and|or|eq|lt|le|gt|ge|ne|not)', 'i');\n\n  function tokenBase(stream) {\n    // whitespaces\n    if (stream.eatSpace()) return null;\n\n    // Handle one line Comments\n    if (stream.match(';')) {\n      stream.skipToEnd();\n      return 'comment';\n    }\n\n    // Handle Number Literals\n    if (stream.match(/^[0-9\\.+-]/, false)) {\n      if (stream.match(/^[+-]?0x[0-9a-fA-F]+/))\n        return 'number';\n      if (stream.match(/^[+-]?\\d*\\.\\d+([EeDd][+-]?\\d+)?/))\n        return 'number';\n      if (stream.match(/^[+-]?\\d+([EeDd][+-]?\\d+)?/))\n        return 'number';\n    }\n\n    // Handle Strings\n    if (stream.match(/^\"([^\"]|(\"\"))*\"/)) { return 'string'; }\n    if (stream.match(/^'([^']|(''))*'/)) { return 'string'; }\n\n    // Handle words\n    if (stream.match(keywords)) { return 'keyword'; }\n    if (stream.match(builtins)) { return 'builtin'; }\n    if (stream.match(identifiers)) { return 'variable'; }\n\n    if (stream.match(singleOperators) || stream.match(boolOperators)) {\n      return 'operator'; }\n\n    // Handle non-detected items\n    stream.next();\n    return null;\n  };\n\n  CodeMirror.defineMode('idl', function() {\n    return {\n      token: function(stream) {\n        return tokenBase(stream);\n      }\n    };\n  });\n\n  CodeMirror.defineMIME('text/x-idl', 'idl');\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction wordRegexp(words) {\n  return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n};\n\nvar builtinArray = [\n  \"Clamp\",\n  \"Constructor\",\n  \"EnforceRange\",\n  \"Exposed\",\n  \"ImplicitThis\",\n  \"Global\", \"PrimaryGlobal\",\n  \"LegacyArrayClass\",\n  \"LegacyUnenumerableNamedProperties\",\n  \"LenientThis\",\n  \"NamedConstructor\",\n  \"NewObject\",\n  \"NoInterfaceObject\",\n  \"OverrideBuiltins\",\n  \"PutForwards\",\n  \"Replaceable\",\n  \"SameObject\",\n  \"TreatNonObjectAsNull\",\n  \"TreatNullAs\",\n    \"EmptyString\",\n  \"Unforgeable\",\n  \"Unscopeable\"\n];\nvar builtins = wordRegexp(builtinArray);\n\nvar typeArray = [\n  \"unsigned\", \"short\", \"long\",                  // UnsignedIntegerType\n  \"unrestricted\", \"float\", \"double\",            // UnrestrictedFloatType\n  \"boolean\", \"byte\", \"octet\",                   // Rest of PrimitiveType\n  \"Promise\",                                    // PromiseType\n  \"ArrayBuffer\", \"DataView\", \"Int8Array\", \"Int16Array\", \"Int32Array\",\n  \"Uint8Array\", \"Uint16Array\", \"Uint32Array\", \"Uint8ClampedArray\",\n  \"Float32Array\", \"Float64Array\",               // BufferRelatedType\n  \"ByteString\", \"DOMString\", \"USVString\", \"sequence\", \"object\", \"RegExp\",\n  \"Error\", \"DOMException\", \"FrozenArray\",       // Rest of NonAnyType\n  \"any\",                                        // Rest of SingleType\n  \"void\"                                        // Rest of ReturnType\n];\nvar types = wordRegexp(typeArray);\n\nvar keywordArray = [\n  \"attribute\", \"callback\", \"const\", \"deleter\", \"dictionary\", \"enum\", \"getter\",\n  \"implements\", \"inherit\", \"interface\", \"iterable\", \"legacycaller\", \"maplike\",\n  \"partial\", \"required\", \"serializer\", \"setlike\", \"setter\", \"static\",\n  \"stringifier\", \"typedef\",                     // ArgumentNameKeyword except\n                                                // \"unrestricted\"\n  \"optional\", \"readonly\", \"or\"\n];\nvar keywords = wordRegexp(keywordArray);\n\nvar atomArray = [\n  \"true\", \"false\",                              // BooleanLiteral\n  \"Infinity\", \"NaN\",                            // FloatLiteral\n  \"null\"                                        // Rest of ConstValue\n];\nvar atoms = wordRegexp(atomArray);\n\nCodeMirror.registerHelper(\"hintWords\", \"webidl\",\n    builtinArray.concat(typeArray).concat(keywordArray).concat(atomArray));\n\nvar startDefArray = [\"callback\", \"dictionary\", \"enum\", \"interface\"];\nvar startDefs = wordRegexp(startDefArray);\n\nvar endDefArray = [\"typedef\"];\nvar endDefs = wordRegexp(endDefArray);\n\nvar singleOperators = /^[:<=>?]/;\nvar integers = /^-?([1-9][0-9]*|0[Xx][0-9A-Fa-f]+|0[0-7]*)/;\nvar floats = /^-?(([0-9]+\\.[0-9]*|[0-9]*\\.[0-9]+)([Ee][+-]?[0-9]+)?|[0-9]+[Ee][+-]?[0-9]+)/;\nvar identifiers = /^_?[A-Za-z][0-9A-Z_a-z-]*/;\nvar identifiersEnd = /^_?[A-Za-z][0-9A-Z_a-z-]*(?=\\s*;)/;\nvar strings = /^\"[^\"]*\"/;\nvar multilineComments = /^\\/\\*.*?\\*\\//;\nvar multilineCommentsStart = /^\\/\\*.*/;\nvar multilineCommentsEnd = /^.*?\\*\\//;\n\nfunction readToken(stream, state) {\n  // whitespace\n  if (stream.eatSpace()) return null;\n\n  // comment\n  if (state.inComment) {\n    if (stream.match(multilineCommentsEnd)) {\n      state.inComment = false;\n      return \"comment\";\n    }\n    stream.skipToEnd();\n    return \"comment\";\n  }\n  if (stream.match(\"//\")) {\n    stream.skipToEnd();\n    return \"comment\";\n  }\n  if (stream.match(multilineComments)) return \"comment\";\n  if (stream.match(multilineCommentsStart)) {\n    state.inComment = true;\n    return \"comment\";\n  }\n\n  // integer and float\n  if (stream.match(/^-?[0-9\\.]/, false)) {\n    if (stream.match(integers) || stream.match(floats)) return \"number\";\n  }\n\n  // string\n  if (stream.match(strings)) return \"string\";\n\n  // identifier\n  if (state.startDef && stream.match(identifiers)) return \"def\";\n\n  if (state.endDef && stream.match(identifiersEnd)) {\n    state.endDef = false;\n    return \"def\";\n  }\n\n  if (stream.match(keywords)) return \"keyword\";\n\n  if (stream.match(types)) {\n    var lastToken = state.lastToken;\n    var nextToken = (stream.match(/^\\s*(.+?)\\b/, false) || [])[1];\n\n    if (lastToken === \":\" || lastToken === \"implements\" ||\n        nextToken === \"implements\" || nextToken === \"=\") {\n      // Used as identifier\n      return \"builtin\";\n    } else {\n      // Used as type\n      return \"variable-3\";\n    }\n  }\n\n  if (stream.match(builtins)) return \"builtin\";\n  if (stream.match(atoms)) return \"atom\";\n  if (stream.match(identifiers)) return \"variable\";\n\n  // other\n  if (stream.match(singleOperators)) return \"operator\";\n\n  // unrecognized\n  stream.next();\n  return null;\n};\n\nCodeMirror.defineMode(\"webidl\", function() {\n  return {\n    startState: function() {\n      return {\n        // Is in multiline comment\n        inComment: false,\n        // Last non-whitespace, matched token\n        lastToken: \"\",\n        // Next token is a definition\n        startDef: false,\n        // Last token of the statement is a definition\n        endDef: false\n      };\n    },\n    token: function(stream, state) {\n      var style = readToken(stream, state);\n\n      if (style) {\n        var cur = stream.current();\n        state.lastToken = cur;\n        if (style === \"keyword\") {\n          state.startDef = startDefs.test(cur);\n          state.endDef = state.endDef || endDefs.test(cur);\n        } else {\n          state.startDef = false;\n        }\n      }\n\n      return style;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-webidl\", \"webidl\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Yacas mode copyright (c) 2015 by Grzegorz Mazur\n// Loosely based on mathematica mode by Calin Barbat\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('yacas', function(_config, _parserConfig) {\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  var bodiedOps = words(\"Assert BackQuote D Defun Deriv For ForEach FromFile \" +\n                        \"FromString Function Integrate InverseTaylor Limit \" +\n                        \"LocalSymbols Macro MacroRule MacroRulePattern \" +\n                        \"NIntegrate Rule RulePattern Subst TD TExplicitSum \" +\n                        \"TSum Taylor Taylor1 Taylor2 Taylor3 ToFile \" +\n                        \"ToStdout ToString TraceRule Until While\");\n\n  // patterns\n  var pFloatForm  = \"(?:(?:\\\\.\\\\d+|\\\\d+\\\\.\\\\d*|\\\\d+)(?:[eE][+-]?\\\\d+)?)\";\n  var pIdentifier = \"(?:[a-zA-Z\\\\$'][a-zA-Z0-9\\\\$']*)\";\n\n  // regular expressions\n  var reFloatForm    = new RegExp(pFloatForm);\n  var reIdentifier   = new RegExp(pIdentifier);\n  var rePattern      = new RegExp(pIdentifier + \"?_\" + pIdentifier);\n  var reFunctionLike = new RegExp(pIdentifier + \"\\\\s*\\\\(\");\n\n  function tokenBase(stream, state) {\n    var ch;\n\n    // get next character\n    ch = stream.next();\n\n    // string\n    if (ch === '\"') {\n      state.tokenize = tokenString;\n      return state.tokenize(stream, state);\n    }\n\n    // comment\n    if (ch === '/') {\n      if (stream.eat('*')) {\n        state.tokenize = tokenComment;\n        return state.tokenize(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n\n    // go back one character\n    stream.backUp(1);\n\n    // update scope info\n    var m = stream.match(/^(\\w+)\\s*\\(/, false);\n    if (m !== null && bodiedOps.hasOwnProperty(m[1]))\n      state.scopes.push('bodied');\n\n    var scope = currentScope(state);\n\n    if (scope === 'bodied' && ch === '[')\n      state.scopes.pop();\n\n    if (ch === '[' || ch === '{' || ch === '(')\n      state.scopes.push(ch);\n\n    scope = currentScope(state);\n\n    if (scope === '[' && ch === ']' ||\n        scope === '{' && ch === '}' ||\n        scope === '(' && ch === ')')\n      state.scopes.pop();\n\n    if (ch === ';') {\n      while (scope === 'bodied') {\n        state.scopes.pop();\n        scope = currentScope(state);\n      }\n    }\n\n    // look for ordered rules\n    if (stream.match(/\\d+ *#/, true, false)) {\n      return 'qualifier';\n    }\n\n    // look for numbers\n    if (stream.match(reFloatForm, true, false)) {\n      return 'number';\n    }\n\n    // look for placeholders\n    if (stream.match(rePattern, true, false)) {\n      return 'variable-3';\n    }\n\n    // match all braces separately\n    if (stream.match(/(?:\\[|\\]|{|}|\\(|\\))/, true, false)) {\n      return 'bracket';\n    }\n\n    // literals looking like function calls\n    if (stream.match(reFunctionLike, true, false)) {\n      stream.backUp(1);\n      return 'variable';\n    }\n\n    // all other identifiers\n    if (stream.match(reIdentifier, true, false)) {\n      return 'variable-2';\n    }\n\n    // operators; note that operators like @@ or /; are matched separately for each symbol.\n    if (stream.match(/(?:\\\\|\\+|\\-|\\*|\\/|,|;|\\.|:|@|~|=|>|<|&|\\||_|`|'|\\^|\\?|!|%)/, true, false)) {\n      return 'operator';\n    }\n\n    // everything else is an error\n    stream.next();\n    return 'error';\n  }\n\n  function tokenString(stream, state) {\n    var next, end = false, escaped = false;\n    while ((next = stream.next()) != null) {\n      if (next === '\"' && !escaped) {\n        end = true;\n        break;\n      }\n      escaped = !escaped && next === '\\\\';\n    }\n    if (end && !escaped) {\n      state.tokenize = tokenBase;\n    }\n    return 'string';\n  };\n\n  function tokenComment(stream, state) {\n    var prev, next;\n    while((next = stream.next()) != null) {\n      if (prev === '*' && next === '/') {\n        state.tokenize = tokenBase;\n        break;\n      }\n      prev = next;\n    }\n    return 'comment';\n  }\n\n  function currentScope(state) {\n    var scope = null;\n    if (state.scopes.length > 0)\n      scope = state.scopes[state.scopes.length - 1];\n    return scope;\n  }\n\n  return {\n    startState: function() {\n      return {\n        tokenize: tokenBase,\n        scopes: []\n      };\n    },\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      return state.tokenize(stream, state);\n    },\n    indent: function(state, textAfter) {\n      if (state.tokenize !== tokenBase && state.tokenize !== null)\n        return CodeMirror.Pass;\n\n      var delta = 0;\n      if (textAfter === ']' || textAfter === '];' ||\n          textAfter === '}' || textAfter === '};' ||\n          textAfter === ');')\n        delta = -1;\n\n      return (state.scopes.length + delta) * _config.indentUnit;\n    },\n    electricChars: \"{}[]();\",\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\"\n  };\n});\n\nCodeMirror.defineMIME('text/x-yacas', {\n  name: 'yacas'\n});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar rfc2822 = [\n  \"From\", \"Sender\", \"Reply-To\", \"To\", \"Cc\", \"Bcc\", \"Message-ID\",\n  \"In-Reply-To\", \"References\", \"Resent-From\", \"Resent-Sender\", \"Resent-To\",\n  \"Resent-Cc\", \"Resent-Bcc\", \"Resent-Message-ID\", \"Return-Path\", \"Received\"\n];\nvar rfc2822NoEmail = [\n  \"Date\", \"Subject\", \"Comments\", \"Keywords\", \"Resent-Date\"\n];\n\nCodeMirror.registerHelper(\"hintWords\", \"mbox\", rfc2822.concat(rfc2822NoEmail));\n\nvar whitespace = /^[ \\t]/;\nvar separator = /^From /; // See RFC 4155\nvar rfc2822Header = new RegExp(\"^(\" + rfc2822.join(\"|\") + \"): \");\nvar rfc2822HeaderNoEmail = new RegExp(\"^(\" + rfc2822NoEmail.join(\"|\") + \"): \");\nvar header = /^[^:]+:/; // Optional fields defined in RFC 2822\nvar email = /^[^ ]+@[^ ]+/;\nvar untilEmail = /^.*?(?=[^ ]+?@[^ ]+)/;\nvar bracketedEmail = /^<.*?>/;\nvar untilBracketedEmail = /^.*?(?=<.*>)/;\n\nfunction styleForHeader(header) {\n  if (header === \"Subject\") return \"header\";\n  return \"string\";\n}\n\nfunction readToken(stream, state) {\n  if (stream.sol()) {\n    // From last line\n    state.inSeparator = false;\n    if (state.inHeader && stream.match(whitespace)) {\n      // Header folding\n      return null;\n    } else {\n      state.inHeader = false;\n      state.header = null;\n    }\n\n    if (stream.match(separator)) {\n      state.inHeaders = true;\n      state.inSeparator = true;\n      return \"atom\";\n    }\n\n    var match;\n    var emailPermitted = false;\n    if ((match = stream.match(rfc2822HeaderNoEmail)) ||\n        (emailPermitted = true) && (match = stream.match(rfc2822Header))) {\n      state.inHeaders = true;\n      state.inHeader = true;\n      state.emailPermitted = emailPermitted;\n      state.header = match[1];\n      return \"atom\";\n    }\n\n    // Use vim's heuristics: recognize custom headers only if the line is in a\n    // block of legitimate headers.\n    if (state.inHeaders && (match = stream.match(header))) {\n      state.inHeader = true;\n      state.emailPermitted = true;\n      state.header = match[1];\n      return \"atom\";\n    }\n\n    state.inHeaders = false;\n    stream.skipToEnd();\n    return null;\n  }\n\n  if (state.inSeparator) {\n    if (stream.match(email)) return \"link\";\n    if (stream.match(untilEmail)) return \"atom\";\n    stream.skipToEnd();\n    return \"atom\";\n  }\n\n  if (state.inHeader) {\n    var style = styleForHeader(state.header);\n\n    if (state.emailPermitted) {\n      if (stream.match(bracketedEmail)) return style + \" link\";\n      if (stream.match(untilBracketedEmail)) return style;\n    }\n    stream.skipToEnd();\n    return style;\n  }\n\n  stream.skipToEnd();\n  return null;\n};\n\nCodeMirror.defineMode(\"mbox\", function() {\n  return {\n    startState: function() {\n      return {\n        // Is in a mbox separator\n        inSeparator: false,\n        // Is in a mail header\n        inHeader: false,\n        // If bracketed email is permitted. Only applicable when inHeader\n        emailPermitted: false,\n        // Name of current header\n        header: null,\n        // Is in a region of mail headers\n        inHeaders: false\n      };\n    },\n    token: readToken,\n    blankLine: function(state) {\n      state.inHeaders = state.inSeparator = state.inHeader = false;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"application/mbox\", \"mbox\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Originally written by Alf Nielsen, re-written by Michael Zhou\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction words(str) {\n  var obj = {}, words = str.split(\",\");\n  for (var i = 0; i < words.length; ++i) {\n    var allCaps = words[i].toUpperCase();\n    var firstCap = words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    obj[words[i]] = true;\n    obj[allCaps] = true;\n    obj[firstCap] = true;\n  }\n  return obj;\n}\n\nfunction metaHook(stream) {\n  stream.eatWhile(/[\\w\\$_]/);\n  return \"meta\";\n}\n\nCodeMirror.defineMode(\"vhdl\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit,\n      atoms = parserConfig.atoms || words(\"null\"),\n      hooks = parserConfig.hooks || {\"`\": metaHook, \"$\": metaHook},\n      multiLineStrings = parserConfig.multiLineStrings;\n\n  var keywords = words(\"abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,\" +\n      \"body,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,end block,end case,\" +\n      \"end component,end for,end generate,end if,end loop,end process,end record,end units,entity,exit,file,for,\" +\n      \"function,generate,generic,generic map,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,\" +\n      \"literal,loop,map,mod,nand,new,next,nor,null,of,on,open,or,others,out,package,package body,port,port map,\" +\n      \"postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,\" +\n      \"sla,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,until,use,variable,wait,when,while,with,xnor,xor\");\n\n  var blockKeywords = words(\"architecture,entity,begin,case,port,else,elsif,end,for,function,if\");\n\n  var isOperatorChar = /[&|~><!\\)\\(*#%@+\\/=?\\:;}{,\\.\\^\\-\\[\\]]/;\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"') {\n      state.tokenize = tokenString2(ch);\n      return state.tokenize(stream, state);\n    }\n    if (ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (/[\\d']/.test(ch)) {\n      stream.eatWhile(/[\\w\\.']/);\n      return \"number\";\n    }\n    if (ch == \"-\") {\n      if (stream.eat(\"-\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_]/);\n    var cur = stream.current();\n    if (keywords.propertyIsEnumerable(cur.toLowerCase())) {\n      if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n      return \"keyword\";\n    }\n    if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"--\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = tokenBase;\n      return \"string\";\n    };\n  }\n  function tokenString2(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"--\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = tokenBase;\n      return \"string-2\";\n    };\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    return state.context = new Context(state.indented, col, type, null, state.context);\n  }\n  function popContext(state) {\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (ctx.type == \"}\" || ctx.type == \"top\" || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n        pushContext(state, stream.column(), \"statement\");\n      state.startOfLine = false;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), ctx = state.context, closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : indentUnit);\n      else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"{}\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-vhdl\", \"vhdl\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"haxe\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit;\n\n  // Tokenizer\n\n  function kw(type) {return {type: type, style: \"keyword\"};}\n  var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\");\n  var operator = kw(\"operator\"), atom = {type: \"atom\", style: \"atom\"}, attribute = {type:\"attribute\", style: \"attribute\"};\n  var type = kw(\"typedef\");\n  var keywords = {\n    \"if\": A, \"while\": A, \"else\": B, \"do\": B, \"try\": B,\n    \"return\": C, \"break\": C, \"continue\": C, \"new\": C, \"throw\": C,\n    \"var\": kw(\"var\"), \"inline\":attribute, \"static\": attribute, \"using\":kw(\"import\"),\n    \"public\": attribute, \"private\": attribute, \"cast\": kw(\"cast\"), \"import\": kw(\"import\"), \"macro\": kw(\"macro\"),\n    \"function\": kw(\"function\"), \"catch\": kw(\"catch\"), \"untyped\": kw(\"untyped\"), \"callback\": kw(\"cb\"),\n    \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\n    \"in\": operator, \"never\": kw(\"property_access\"), \"trace\":kw(\"trace\"),\n    \"class\": type, \"abstract\":type, \"enum\":type, \"interface\":type, \"typedef\":type, \"extends\":type, \"implements\":type, \"dynamic\":type,\n    \"true\": atom, \"false\": atom, \"null\": atom\n  };\n\n  var isOperatorChar = /[+\\-*&%=<>!?|]/;\n\n  function chain(stream, state, f) {\n    state.tokenize = f;\n    return f(stream, state);\n  }\n\n  function toUnescaped(stream, end) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (next == end && !escaped)\n        return true;\n      escaped = !escaped && next == \"\\\\\";\n    }\n  }\n\n  // Used as scratch variables to communicate multiple values without\n  // consing up tons of objects.\n  var type, content;\n  function ret(tp, style, cont) {\n    type = tp; content = cont;\n    return style;\n  }\n\n  function haxeTokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\") {\n      return chain(stream, state, haxeTokenString(ch));\n    } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      return ret(ch);\n    } else if (ch == \"0\" && stream.eat(/x/i)) {\n      stream.eatWhile(/[\\da-f]/i);\n      return ret(\"number\", \"number\");\n    } else if (/\\d/.test(ch) || ch == \"-\" && stream.eat(/\\d/)) {\n      stream.match(/^\\d*(?:\\.\\d*(?!\\.))?(?:[eE][+\\-]?\\d+)?/);\n      return ret(\"number\", \"number\");\n    } else if (state.reAllowed && (ch == \"~\" && stream.eat(/\\//))) {\n      toUnescaped(stream, \"/\");\n      stream.eatWhile(/[gimsu]/);\n      return ret(\"regexp\", \"string-2\");\n    } else if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        return chain(stream, state, haxeTokenComment);\n      } else if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return ret(\"comment\", \"comment\");\n      } else {\n        stream.eatWhile(isOperatorChar);\n        return ret(\"operator\", null, stream.current());\n      }\n    } else if (ch == \"#\") {\n        stream.skipToEnd();\n        return ret(\"conditional\", \"meta\");\n    } else if (ch == \"@\") {\n      stream.eat(/:/);\n      stream.eatWhile(/[\\w_]/);\n      return ret (\"metadata\", \"meta\");\n    } else if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return ret(\"operator\", null, stream.current());\n    } else {\n      var word;\n      if(/[A-Z]/.test(ch)) {\n        stream.eatWhile(/[\\w_<>]/);\n        word = stream.current();\n        return ret(\"type\", \"variable-3\", word);\n      } else {\n        stream.eatWhile(/[\\w_]/);\n        var word = stream.current(), known = keywords.propertyIsEnumerable(word) && keywords[word];\n        return (known && state.kwAllowed) ? ret(known.type, known.style, word) :\n                       ret(\"variable\", \"variable\", word);\n      }\n    }\n  }\n\n  function haxeTokenString(quote) {\n    return function(stream, state) {\n      if (toUnescaped(stream, quote))\n        state.tokenize = haxeTokenBase;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function haxeTokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = haxeTokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  // Parser\n\n  var atomicTypes = {\"atom\": true, \"number\": true, \"variable\": true, \"string\": true, \"regexp\": true};\n\n  function HaxeLexical(indented, column, type, align, prev, info) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.prev = prev;\n    this.info = info;\n    if (align != null) this.align = align;\n  }\n\n  function inScope(state, varname) {\n    for (var v = state.localVars; v; v = v.next)\n      if (v.name == varname) return true;\n  }\n\n  function parseHaxe(state, style, type, content, stream) {\n    var cc = state.cc;\n    // Communicate our context to the combinators.\n    // (Less wasteful than consing up a hundred closures on every call.)\n    cx.state = state; cx.stream = stream; cx.marked = null, cx.cc = cc;\n\n    if (!state.lexical.hasOwnProperty(\"align\"))\n      state.lexical.align = true;\n\n    while(true) {\n      var combinator = cc.length ? cc.pop() : statement;\n      if (combinator(type, content)) {\n        while(cc.length && cc[cc.length - 1].lex)\n          cc.pop()();\n        if (cx.marked) return cx.marked;\n        if (type == \"variable\" && inScope(state, content)) return \"variable-2\";\n        if (type == \"variable\" && imported(state, content)) return \"variable-3\";\n        return style;\n      }\n    }\n  }\n\n  function imported(state, typename) {\n    if (/[a-z]/.test(typename.charAt(0)))\n      return false;\n    var len = state.importedtypes.length;\n    for (var i = 0; i<len; i++)\n      if(state.importedtypes[i]==typename) return true;\n  }\n\n  function registerimport(importname) {\n    var state = cx.state;\n    for (var t = state.importedtypes; t; t = t.next)\n      if(t.name == importname) return;\n    state.importedtypes = { name: importname, next: state.importedtypes };\n  }\n  // Combinator utils\n\n  var cx = {state: null, column: null, marked: null, cc: null};\n  function pass() {\n    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n  }\n  function cont() {\n    pass.apply(null, arguments);\n    return true;\n  }\n  function inList(name, list) {\n    for (var v = list; v; v = v.next)\n      if (v.name == name) return true;\n    return false;\n  }\n  function register(varname) {\n    var state = cx.state;\n    if (state.context) {\n      cx.marked = \"def\";\n      if (inList(varname, state.localVars)) return;\n      state.localVars = {name: varname, next: state.localVars};\n    } else if (state.globalVars) {\n      if (inList(varname, state.globalVars)) return;\n      state.globalVars = {name: varname, next: state.globalVars};\n    }\n  }\n\n  // Combinators\n\n  var defaultVars = {name: \"this\", next: null};\n  function pushcontext() {\n    if (!cx.state.context) cx.state.localVars = defaultVars;\n    cx.state.context = {prev: cx.state.context, vars: cx.state.localVars};\n  }\n  function popcontext() {\n    cx.state.localVars = cx.state.context.vars;\n    cx.state.context = cx.state.context.prev;\n  }\n  popcontext.lex = true;\n  function pushlex(type, info) {\n    var result = function() {\n      var state = cx.state;\n      state.lexical = new HaxeLexical(state.indented, cx.stream.column(), type, null, state.lexical, info);\n    };\n    result.lex = true;\n    return result;\n  }\n  function poplex() {\n    var state = cx.state;\n    if (state.lexical.prev) {\n      if (state.lexical.type == \")\")\n        state.indented = state.lexical.indented;\n      state.lexical = state.lexical.prev;\n    }\n  }\n  poplex.lex = true;\n\n  function expect(wanted) {\n    function f(type) {\n      if (type == wanted) return cont();\n      else if (wanted == \";\") return pass();\n      else return cont(f);\n    }\n    return f;\n  }\n\n  function statement(type) {\n    if (type == \"@\") return cont(metadef);\n    if (type == \"var\") return cont(pushlex(\"vardef\"), vardef1, expect(\";\"), poplex);\n    if (type == \"keyword a\") return cont(pushlex(\"form\"), expression, statement, poplex);\n    if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\n    if (type == \"{\") return cont(pushlex(\"}\"), pushcontext, block, poplex, popcontext);\n    if (type == \";\") return cont();\n    if (type == \"attribute\") return cont(maybeattribute);\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"for\") return cont(pushlex(\"form\"), expect(\"(\"), pushlex(\")\"), forspec1, expect(\")\"),\n                                   poplex, statement, poplex);\n    if (type == \"variable\") return cont(pushlex(\"stat\"), maybelabel);\n    if (type == \"switch\") return cont(pushlex(\"form\"), expression, pushlex(\"}\", \"switch\"), expect(\"{\"),\n                                      block, poplex, poplex);\n    if (type == \"case\") return cont(expression, expect(\":\"));\n    if (type == \"default\") return cont(expect(\":\"));\n    if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, expect(\"(\"), funarg, expect(\")\"),\n                                     statement, poplex, popcontext);\n    if (type == \"import\") return cont(importdef, expect(\";\"));\n    if (type == \"typedef\") return cont(typedef);\n    return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\n  }\n  function expression(type) {\n    if (atomicTypes.hasOwnProperty(type)) return cont(maybeoperator);\n    if (type == \"type\" ) return cont(maybeoperator);\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"keyword c\") return cont(maybeexpression);\n    if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeoperator);\n    if (type == \"operator\") return cont(expression);\n    if (type == \"[\") return cont(pushlex(\"]\"), commasep(maybeexpression, \"]\"), poplex, maybeoperator);\n    if (type == \"{\") return cont(pushlex(\"}\"), commasep(objprop, \"}\"), poplex, maybeoperator);\n    return cont();\n  }\n  function maybeexpression(type) {\n    if (type.match(/[;\\}\\)\\],]/)) return pass();\n    return pass(expression);\n  }\n\n  function maybeoperator(type, value) {\n    if (type == \"operator\" && /\\+\\+|--/.test(value)) return cont(maybeoperator);\n    if (type == \"operator\" || type == \":\") return cont(expression);\n    if (type == \";\") return;\n    if (type == \"(\") return cont(pushlex(\")\"), commasep(expression, \")\"), poplex, maybeoperator);\n    if (type == \".\") return cont(property, maybeoperator);\n    if (type == \"[\") return cont(pushlex(\"]\"), expression, expect(\"]\"), poplex, maybeoperator);\n  }\n\n  function maybeattribute(type) {\n    if (type == \"attribute\") return cont(maybeattribute);\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"var\") return cont(vardef1);\n  }\n\n  function metadef(type) {\n    if(type == \":\") return cont(metadef);\n    if(type == \"variable\") return cont(metadef);\n    if(type == \"(\") return cont(pushlex(\")\"), commasep(metaargs, \")\"), poplex, statement);\n  }\n  function metaargs(type) {\n    if(type == \"variable\") return cont();\n  }\n\n  function importdef (type, value) {\n    if(type == \"variable\" && /[A-Z]/.test(value.charAt(0))) { registerimport(value); return cont(); }\n    else if(type == \"variable\" || type == \"property\" || type == \".\" || value == \"*\") return cont(importdef);\n  }\n\n  function typedef (type, value)\n  {\n    if(type == \"variable\" && /[A-Z]/.test(value.charAt(0))) { registerimport(value); return cont(); }\n    else if (type == \"type\" && /[A-Z]/.test(value.charAt(0))) { return cont(); }\n  }\n\n  function maybelabel(type) {\n    if (type == \":\") return cont(poplex, statement);\n    return pass(maybeoperator, expect(\";\"), poplex);\n  }\n  function property(type) {\n    if (type == \"variable\") {cx.marked = \"property\"; return cont();}\n  }\n  function objprop(type) {\n    if (type == \"variable\") cx.marked = \"property\";\n    if (atomicTypes.hasOwnProperty(type)) return cont(expect(\":\"), expression);\n  }\n  function commasep(what, end) {\n    function proceed(type) {\n      if (type == \",\") return cont(what, proceed);\n      if (type == end) return cont();\n      return cont(expect(end));\n    }\n    return function(type) {\n      if (type == end) return cont();\n      else return pass(what, proceed);\n    };\n  }\n  function block(type) {\n    if (type == \"}\") return cont();\n    return pass(statement, block);\n  }\n  function vardef1(type, value) {\n    if (type == \"variable\"){register(value); return cont(typeuse, vardef2);}\n    return cont();\n  }\n  function vardef2(type, value) {\n    if (value == \"=\") return cont(expression, vardef2);\n    if (type == \",\") return cont(vardef1);\n  }\n  function forspec1(type, value) {\n    if (type == \"variable\") {\n      register(value);\n      return cont(forin, expression)\n    } else {\n      return pass()\n    }\n  }\n  function forin(_type, value) {\n    if (value == \"in\") return cont();\n  }\n  function functiondef(type, value) {\n    //function names starting with upper-case letters are recognised as types, so cludging them together here.\n    if (type == \"variable\" || type == \"type\") {register(value); return cont(functiondef);}\n    if (value == \"new\") return cont(functiondef);\n    if (type == \"(\") return cont(pushlex(\")\"), pushcontext, commasep(funarg, \")\"), poplex, typeuse, statement, popcontext);\n  }\n  function typeuse(type) {\n    if(type == \":\") return cont(typestring);\n  }\n  function typestring(type) {\n    if(type == \"type\") return cont();\n    if(type == \"variable\") return cont();\n    if(type == \"{\") return cont(pushlex(\"}\"), commasep(typeprop, \"}\"), poplex);\n  }\n  function typeprop(type) {\n    if(type == \"variable\") return cont(typeuse);\n  }\n  function funarg(type, value) {\n    if (type == \"variable\") {register(value); return cont(typeuse);}\n  }\n\n  // Interface\n  return {\n    startState: function(basecolumn) {\n      var defaulttypes = [\"Int\", \"Float\", \"String\", \"Void\", \"Std\", \"Bool\", \"Dynamic\", \"Array\"];\n      var state = {\n        tokenize: haxeTokenBase,\n        reAllowed: true,\n        kwAllowed: true,\n        cc: [],\n        lexical: new HaxeLexical((basecolumn || 0) - indentUnit, 0, \"block\", false),\n        localVars: parserConfig.localVars,\n        importedtypes: defaulttypes,\n        context: parserConfig.localVars && {vars: parserConfig.localVars},\n        indented: 0\n      };\n      if (parserConfig.globalVars && typeof parserConfig.globalVars == \"object\")\n        state.globalVars = parserConfig.globalVars;\n      return state;\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if (!state.lexical.hasOwnProperty(\"align\"))\n          state.lexical.align = false;\n        state.indented = stream.indentation();\n      }\n      if (stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      if (type == \"comment\") return style;\n      state.reAllowed = !!(type == \"operator\" || type == \"keyword c\" || type.match(/^[\\[{}\\(,;:]$/));\n      state.kwAllowed = type != '.';\n      return parseHaxe(state, style, type, content, stream);\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != haxeTokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical;\n      if (lexical.type == \"stat\" && firstChar == \"}\") lexical = lexical.prev;\n      var type = lexical.type, closing = firstChar == type;\n      if (type == \"vardef\") return lexical.indented + 4;\n      else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\n      else if (type == \"stat\" || type == \"form\") return lexical.indented + indentUnit;\n      else if (lexical.info == \"switch\" && !closing)\n        return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 2 * indentUnit);\n      else if (lexical.align) return lexical.column + (closing ? 0 : 1);\n      else return lexical.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"{}\",\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-haxe\", \"haxe\");\n\nCodeMirror.defineMode(\"hxml\", function () {\n\n  return {\n    startState: function () {\n      return {\n        define: false,\n        inString: false\n      };\n    },\n    token: function (stream, state) {\n      var ch = stream.peek();\n      var sol = stream.sol();\n\n      ///* comments */\n      if (ch == \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      if (sol && ch == \"-\") {\n        var style = \"variable-2\";\n\n        stream.eat(/-/);\n\n        if (stream.peek() == \"-\") {\n          stream.eat(/-/);\n          style = \"keyword a\";\n        }\n\n        if (stream.peek() == \"D\") {\n          stream.eat(/[D]/);\n          style = \"keyword c\";\n          state.define = true;\n        }\n\n        stream.eatWhile(/[A-Z]/i);\n        return style;\n      }\n\n      var ch = stream.peek();\n\n      if (state.inString == false && ch == \"'\") {\n        state.inString = true;\n        stream.next();\n      }\n\n      if (state.inString == true) {\n        if (stream.skipTo(\"'\")) {\n\n        } else {\n          stream.skipToEnd();\n        }\n\n        if (stream.peek() == \"'\") {\n          stream.next();\n          state.inString = false;\n        }\n\n        return \"string\";\n      }\n\n      stream.next();\n      return null;\n    },\n    lineComment: \"#\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-hxml\", \"hxml\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n/*\n * Author: Constantin Jucovschi (c.jucovschi@jacobs-university.de)\n * Licence: MIT\n */\n  var CodeMirror = require ? require(\"codemirror/lib/codemirror.js\") : window.CodeMirror;\n\n  \"use strict\";\n\n  CodeMirror.defineMode(\"stex\", function() {\n    \"use strict\";\n\n    function pushCommand(state, command) {\n      state.cmdState.push(command);\n    }\n\n    function peekCommand(state) {\n      if (state.cmdState.length > 0) {\n        return state.cmdState[state.cmdState.length - 1];\n      } else {\n        return null;\n      }\n    }\n\n    function popCommand(state) {\n      var plug = state.cmdState.pop();\n      if (plug) {\n        plug.closeBracket();\n      }\n    }\n\n    // returns the non-default plugin closest to the end of the list\n    function getMostPowerful(state) {\n      var context = state.cmdState;\n      for (var i = context.length - 1; i >= 0; i--) {\n        var plug = context[i];\n        if (plug.name == \"DEFAULT\") {\n          continue;\n        }\n        return plug;\n      }\n      return { styleIdentifier: function() { return null; } };\n    }\n\n    function addPluginPattern(pluginName, cmdStyle, styles) {\n      return function () {\n        this.name = pluginName;\n        this.bracketNo = 0;\n        this.style = cmdStyle;\n        this.styles = styles;\n        this.argument = null;   // \\begin and \\end have arguments that follow. These are stored in the plugin\n\n        this.styleIdentifier = function() {\n          return this.styles[this.bracketNo - 1] || null;\n        };\n        this.openBracket = function() {\n          this.bracketNo++;\n          return \"bracket\";\n        };\n        this.closeBracket = function() {};\n      };\n    }\n\n    var plugins = {};\n\n    plugins[\"importmodule\"] = addPluginPattern(\"importmodule\", \"tag\", [\"string\", \"builtin\"]);\n    plugins[\"documentclass\"] = addPluginPattern(\"documentclass\", \"tag\", [\"\", \"atom\"]);\n    plugins[\"usepackage\"] = addPluginPattern(\"usepackage\", \"tag\", [\"atom\"]);\n    plugins[\"begin\"] = addPluginPattern(\"begin\", \"tag\", [\"atom\"]);\n    plugins[\"end\"] = addPluginPattern(\"end\", \"tag\", [\"atom\"]);\n\n    plugins[\"DEFAULT\"] = function () {\n      this.name = \"DEFAULT\";\n      this.style = \"tag\";\n\n      this.styleIdentifier = this.openBracket = this.closeBracket = function() {};\n    };\n\n    function setState(state, f) {\n      state.f = f;\n    }\n\n    // called when in a normal (no environment) context\n    function normal(source, state) {\n      var plug;\n      // Do we look like '\\command' ?  If so, attempt to apply the plugin 'command'\n      if (source.match(/^\\\\[a-zA-Z@]+/)) {\n        var cmdName = source.current().slice(1);\n        plug = plugins[cmdName] || plugins[\"DEFAULT\"];\n        plug = new plug();\n        pushCommand(state, plug);\n        setState(state, beginParams);\n        return plug.style;\n      }\n\n      // escape characters\n      if (source.match(/^\\\\[$&%#{}_]/)) {\n        return \"tag\";\n      }\n\n      // white space control characters\n      if (source.match(/^\\\\[,;!\\/\\\\]/)) {\n        return \"tag\";\n      }\n\n      // find if we're starting various math modes\n      if (source.match(\"\\\\[\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"\\\\]\"); });\n        return \"keyword\";\n      }\n      if (source.match(\"$$\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"$$\"); });\n        return \"keyword\";\n      }\n      if (source.match(\"$\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"$\"); });\n        return \"keyword\";\n      }\n\n      var ch = source.next();\n      if (ch == \"%\") {\n        source.skipToEnd();\n        return \"comment\";\n      } else if (ch == '}' || ch == ']') {\n        plug = peekCommand(state);\n        if (plug) {\n          plug.closeBracket(ch);\n          setState(state, beginParams);\n        } else {\n          return \"error\";\n        }\n        return \"bracket\";\n      } else if (ch == '{' || ch == '[') {\n        plug = plugins[\"DEFAULT\"];\n        plug = new plug();\n        pushCommand(state, plug);\n        return \"bracket\";\n      } else if (/\\d/.test(ch)) {\n        source.eatWhile(/[\\w.%]/);\n        return \"atom\";\n      } else {\n        source.eatWhile(/[\\w\\-_]/);\n        plug = getMostPowerful(state);\n        if (plug.name == 'begin') {\n          plug.argument = source.current();\n        }\n        return plug.styleIdentifier();\n      }\n    }\n\n    function inMathMode(source, state, endModeSeq) {\n      if (source.eatSpace()) {\n        return null;\n      }\n      if (source.match(endModeSeq)) {\n        setState(state, normal);\n        return \"keyword\";\n      }\n      if (source.match(/^\\\\[a-zA-Z@]+/)) {\n        return \"tag\";\n      }\n      if (source.match(/^[a-zA-Z]+/)) {\n        return \"variable-2\";\n      }\n      // escape characters\n      if (source.match(/^\\\\[$&%#{}_]/)) {\n        return \"tag\";\n      }\n      // white space control characters\n      if (source.match(/^\\\\[,;!\\/]/)) {\n        return \"tag\";\n      }\n      // special math-mode characters\n      if (source.match(/^[\\^_&]/)) {\n        return \"tag\";\n      }\n      // non-special characters\n      if (source.match(/^[+\\-<>|=,\\/@!*:;'\"`~#?]/)) {\n        return null;\n      }\n      if (source.match(/^(\\d+\\.\\d*|\\d*\\.\\d+|\\d+)/)) {\n        return \"number\";\n      }\n      var ch = source.next();\n      if (ch == \"{\" || ch == \"}\" || ch == \"[\" || ch == \"]\" || ch == \"(\" || ch == \")\") {\n        return \"bracket\";\n      }\n\n      if (ch == \"%\") {\n        source.skipToEnd();\n        return \"comment\";\n      }\n      return \"error\";\n    }\n\n    function beginParams(source, state) {\n      var ch = source.peek(), lastPlug;\n      if (ch == '{' || ch == '[') {\n        lastPlug = peekCommand(state);\n        lastPlug.openBracket(ch);\n        source.eat(ch);\n        setState(state, normal);\n        return \"bracket\";\n      }\n      if (/[ \\t\\r]/.test(ch)) {\n        source.eat(ch);\n        return null;\n      }\n      setState(state, normal);\n      popCommand(state);\n\n      return normal(source, state);\n    }\n\n    return {\n      startState: function() {\n        return {\n          cmdState: [],\n          f: normal\n        };\n      },\n      copyState: function(s) {\n        return {\n          cmdState: s.cmdState.slice(),\n          f: s.f\n        };\n      },\n      token: function(stream, state) {\n        return state.f(stream, state);\n      },\n      blankLine: function(state) {\n        state.f = normal;\n        state.cmdState.length = 0;\n      },\n      lineComment: \"%\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-stex\", \"stex\");\n  CodeMirror.defineMIME(\"text/x-latex\", \"stex\");\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"fortran\", function() {\n  function words(array) {\n    var keys = {};\n    for (var i = 0; i < array.length; ++i) {\n      keys[array[i]] = true;\n    }\n    return keys;\n  }\n\n  var keywords = words([\n                  \"abstract\", \"accept\", \"allocatable\", \"allocate\",\n                  \"array\", \"assign\", \"asynchronous\", \"backspace\",\n                  \"bind\", \"block\", \"byte\", \"call\", \"case\",\n                  \"class\", \"close\", \"common\", \"contains\",\n                  \"continue\", \"cycle\", \"data\", \"deallocate\",\n                  \"decode\", \"deferred\", \"dimension\", \"do\",\n                  \"elemental\", \"else\", \"encode\", \"end\",\n                  \"endif\", \"entry\", \"enumerator\", \"equivalence\",\n                  \"exit\", \"external\", \"extrinsic\", \"final\",\n                  \"forall\", \"format\", \"function\", \"generic\",\n                  \"go\", \"goto\", \"if\", \"implicit\", \"import\", \"include\",\n                  \"inquire\", \"intent\", \"interface\", \"intrinsic\",\n                  \"module\", \"namelist\", \"non_intrinsic\",\n                  \"non_overridable\", \"none\", \"nopass\",\n                  \"nullify\", \"open\", \"optional\", \"options\",\n                  \"parameter\", \"pass\", \"pause\", \"pointer\",\n                  \"print\", \"private\", \"program\", \"protected\",\n                  \"public\", \"pure\", \"read\", \"recursive\", \"result\",\n                  \"return\", \"rewind\", \"save\", \"select\", \"sequence\",\n                  \"stop\", \"subroutine\", \"target\", \"then\", \"to\", \"type\",\n                  \"use\", \"value\", \"volatile\", \"where\", \"while\",\n                  \"write\"]);\n  var builtins = words([\"abort\", \"abs\", \"access\", \"achar\", \"acos\",\n                          \"adjustl\", \"adjustr\", \"aimag\", \"aint\", \"alarm\",\n                          \"all\", \"allocated\", \"alog\", \"amax\", \"amin\",\n                          \"amod\", \"and\", \"anint\", \"any\", \"asin\",\n                          \"associated\", \"atan\", \"besj\", \"besjn\", \"besy\",\n                          \"besyn\", \"bit_size\", \"btest\", \"cabs\", \"ccos\",\n                          \"ceiling\", \"cexp\", \"char\", \"chdir\", \"chmod\",\n                          \"clog\", \"cmplx\", \"command_argument_count\",\n                          \"complex\", \"conjg\", \"cos\", \"cosh\", \"count\",\n                          \"cpu_time\", \"cshift\", \"csin\", \"csqrt\", \"ctime\",\n                          \"c_funloc\", \"c_loc\", \"c_associated\", \"c_null_ptr\",\n                          \"c_null_funptr\", \"c_f_pointer\", \"c_null_char\",\n                          \"c_alert\", \"c_backspace\", \"c_form_feed\",\n                          \"c_new_line\", \"c_carriage_return\",\n                          \"c_horizontal_tab\", \"c_vertical_tab\", \"dabs\",\n                          \"dacos\", \"dasin\", \"datan\", \"date_and_time\",\n                          \"dbesj\", \"dbesj\", \"dbesjn\", \"dbesy\", \"dbesy\",\n                          \"dbesyn\", \"dble\", \"dcos\", \"dcosh\", \"ddim\", \"derf\",\n                          \"derfc\", \"dexp\", \"digits\", \"dim\", \"dint\", \"dlog\",\n                          \"dlog\", \"dmax\", \"dmin\", \"dmod\", \"dnint\",\n                          \"dot_product\", \"dprod\", \"dsign\", \"dsinh\",\n                          \"dsin\", \"dsqrt\", \"dtanh\", \"dtan\", \"dtime\",\n                          \"eoshift\", \"epsilon\", \"erf\", \"erfc\", \"etime\",\n                          \"exit\", \"exp\", \"exponent\", \"extends_type_of\",\n                          \"fdate\", \"fget\", \"fgetc\", \"float\", \"floor\",\n                          \"flush\", \"fnum\", \"fputc\", \"fput\", \"fraction\",\n                          \"fseek\", \"fstat\", \"ftell\", \"gerror\", \"getarg\",\n                          \"get_command\", \"get_command_argument\",\n                          \"get_environment_variable\", \"getcwd\",\n                          \"getenv\", \"getgid\", \"getlog\", \"getpid\",\n                          \"getuid\", \"gmtime\", \"hostnm\", \"huge\", \"iabs\",\n                          \"iachar\", \"iand\", \"iargc\", \"ibclr\", \"ibits\",\n                          \"ibset\", \"ichar\", \"idate\", \"idim\", \"idint\",\n                          \"idnint\", \"ieor\", \"ierrno\", \"ifix\", \"imag\",\n                          \"imagpart\", \"index\", \"int\", \"ior\", \"irand\",\n                          \"isatty\", \"ishft\", \"ishftc\", \"isign\",\n                          \"iso_c_binding\", \"is_iostat_end\", \"is_iostat_eor\",\n                          \"itime\", \"kill\", \"kind\", \"lbound\", \"len\", \"len_trim\",\n                          \"lge\", \"lgt\", \"link\", \"lle\", \"llt\", \"lnblnk\", \"loc\",\n                          \"log\", \"logical\", \"long\", \"lshift\", \"lstat\", \"ltime\",\n                          \"matmul\", \"max\", \"maxexponent\", \"maxloc\", \"maxval\",\n                          \"mclock\", \"merge\", \"move_alloc\", \"min\", \"minexponent\",\n                          \"minloc\", \"minval\", \"mod\", \"modulo\", \"mvbits\",\n                          \"nearest\", \"new_line\", \"nint\", \"not\", \"or\", \"pack\",\n                          \"perror\", \"precision\", \"present\", \"product\", \"radix\",\n                          \"rand\", \"random_number\", \"random_seed\", \"range\",\n                          \"real\", \"realpart\", \"rename\", \"repeat\", \"reshape\",\n                          \"rrspacing\", \"rshift\", \"same_type_as\", \"scale\",\n                          \"scan\", \"second\", \"selected_int_kind\",\n                          \"selected_real_kind\", \"set_exponent\", \"shape\",\n                          \"short\", \"sign\", \"signal\", \"sinh\", \"sin\", \"sleep\",\n                          \"sngl\", \"spacing\", \"spread\", \"sqrt\", \"srand\", \"stat\",\n                          \"sum\", \"symlnk\", \"system\", \"system_clock\", \"tan\",\n                          \"tanh\", \"time\", \"tiny\", \"transfer\", \"transpose\",\n                          \"trim\", \"ttynam\", \"ubound\", \"umask\", \"unlink\",\n                          \"unpack\", \"verify\", \"xor\", \"zabs\", \"zcos\", \"zexp\",\n                          \"zlog\", \"zsin\", \"zsqrt\"]);\n\n    var dataTypes =  words([\"c_bool\", \"c_char\", \"c_double\", \"c_double_complex\",\n                     \"c_float\", \"c_float_complex\", \"c_funptr\", \"c_int\",\n                     \"c_int16_t\", \"c_int32_t\", \"c_int64_t\", \"c_int8_t\",\n                     \"c_int_fast16_t\", \"c_int_fast32_t\", \"c_int_fast64_t\",\n                     \"c_int_fast8_t\", \"c_int_least16_t\", \"c_int_least32_t\",\n                     \"c_int_least64_t\", \"c_int_least8_t\", \"c_intmax_t\",\n                     \"c_intptr_t\", \"c_long\", \"c_long_double\",\n                     \"c_long_double_complex\", \"c_long_long\", \"c_ptr\",\n                     \"c_short\", \"c_signed_char\", \"c_size_t\", \"character\",\n                     \"complex\", \"double\", \"integer\", \"logical\", \"real\"]);\n  var isOperatorChar = /[+\\-*&=<>\\/\\:]/;\n  var litOperator = new RegExp(\"(\\.and\\.|\\.or\\.|\\.eq\\.|\\.lt\\.|\\.le\\.|\\.gt\\.|\\.ge\\.|\\.ne\\.|\\.not\\.|\\.eqv\\.|\\.neqv\\.)\", \"i\");\n\n  function tokenBase(stream, state) {\n\n    if (stream.match(litOperator)){\n        return 'operator';\n    }\n\n    var ch = stream.next();\n    if (ch == \"!\") {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (/[\\[\\]\\(\\),]/.test(ch)) {\n      return null;\n    }\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\w\\.]/);\n      return \"number\";\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_]/);\n    var word = stream.current().toLowerCase();\n\n    if (keywords.hasOwnProperty(word)){\n            return 'keyword';\n    }\n    if (builtins.hasOwnProperty(word) || dataTypes.hasOwnProperty(word)) {\n            return 'builtin';\n    }\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {\n            end = true;\n            break;\n        }\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !escaped) state.tokenize = null;\n      return \"string\";\n    };\n  }\n\n  // Interface\n\n  return {\n    startState: function() {\n      return {tokenize: null};\n    },\n\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      return style;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-fortran\", \"fortran\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\", \"i\");\n  };\n\n  var keywordArray = [\n    \"package\", \"message\", \"import\", \"syntax\",\n    \"required\", \"optional\", \"repeated\", \"reserved\", \"default\", \"extensions\", \"packed\",\n    \"bool\", \"bytes\", \"double\", \"enum\", \"float\", \"string\",\n    \"int32\", \"int64\", \"uint32\", \"uint64\", \"sint32\", \"sint64\", \"fixed32\", \"fixed64\", \"sfixed32\", \"sfixed64\"\n  ];\n  var keywords = wordRegexp(keywordArray);\n\n  CodeMirror.registerHelper(\"hintWords\", \"protobuf\", keywordArray);\n\n  var identifiers = new RegExp(\"^[_A-Za-z\\xa1-\\uffff][_A-Za-z0-9\\xa1-\\uffff]*\");\n\n  function tokenBase(stream) {\n    // whitespaces\n    if (stream.eatSpace()) return null;\n\n    // Handle one line Comments\n    if (stream.match(\"//\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    // Handle Number Literals\n    if (stream.match(/^[0-9\\.+-]/, false)) {\n      if (stream.match(/^[+-]?0x[0-9a-fA-F]+/))\n        return \"number\";\n      if (stream.match(/^[+-]?\\d*\\.\\d+([EeDd][+-]?\\d+)?/))\n        return \"number\";\n      if (stream.match(/^[+-]?\\d+([EeDd][+-]?\\d+)?/))\n        return \"number\";\n    }\n\n    // Handle Strings\n    if (stream.match(/^\"([^\"]|(\"\"))*\"/)) { return \"string\"; }\n    if (stream.match(/^'([^']|(''))*'/)) { return \"string\"; }\n\n    // Handle words\n    if (stream.match(keywords)) { return \"keyword\"; }\n    if (stream.match(identifiers)) { return \"variable\"; } ;\n\n    // Handle non-detected items\n    stream.next();\n    return null;\n  };\n\n  CodeMirror.defineMode(\"protobuf\", function() {\n    return {token: tokenBase};\n  });\n\n  CodeMirror.defineMIME(\"text/x-protobuf\", \"protobuf\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\nCodeMirror.defineMode('makefile', function() {\n\n  var words = {};\n  function define(style, string) {\n    var split = string.split(' ');\n    for(var i = 0; i < split.length; i++) {\n      words[split[i]] = style;\n    }\n  };\n\n  // Atoms\n  define('atom', 'true false');\n\n  // Keywords\n  define('keyword', 'if then do else elif while until for in esac fi fin ' +\n    'fil done exit set unset export function');\n\n  // Commands\n  define('builtin', 'ab awk bash beep cat cc cd chown chmod chroot clear cp ' +\n    'curl cut diff echo find gawk gcc get git grep kill killall ln ls make ' +\n    'mkdir openssl mv nc node npm ping ps restart rm rmdir sed service sh ' +\n    'shopt shred source sort sleep ssh start stop su sudo tee telnet top ' +\n    'touch vi vim wall wc wget who write yes zsh');\n\n  function tokenBase(stream, state) {\n    if (stream.eatSpace()) return null;\n\n    var sol = stream.sol();\n    var ch = stream.next();\n\n    if (ch === '%' && stream.eat(':')) { return \"def\"; }\n    if (ch === '@') { return \"atom\"; }\n    if (ch === '#') {\n      if (sol && stream.eat('!')) {\n        stream.skipToEnd();\n        return 'meta'; // 'comment'?\n      }\n      stream.skipToEnd();\n      return 'comment';\n    }\n\n    if (ch === '$' && stream.eat('(')) {\n      state.tokens.unshift(tokenDollar);\n      return tokenize(stream, state);\n    }\n    if (ch === '$' && stream.eat('{')) {\n      state.tokens.unshift(tokenDollarB);\n      return tokenize(stream, state);\n    }\n    if (ch === '$' && stream.eat('$') && stream.match(/^[\\w]+/)) { return \"quote\"; }\n    if (ch === '$' && (stream.eat('@') || stream.eat('<') || stream.eat('^'))) { return \"quote\"; }\n\n    if (ch === '\\'' || ch === '\"' || ch === '`') {\n      state.tokens.unshift(tokenString(ch));\n      return tokenize(stream, state);\n    }\n\n    if (ch === 'i' && (stream.match('feq ') || stream.match('fneq '))) {\n      stream.skipToEnd();\n      return \"meta\";\n    }\n    if (ch === 'e' && (stream.match('lse') || stream.match('ndif'))) { return \"meta\"; }\n    if (ch === 'i' && stream.match('nclude ')) { return \"string\"; }\n\n    if (sol && stream.match(/^\\s*\\w[^\\s=:]*\\s*(:|=)/)) { \n      return \"def\"; \n    }\n\n    stream.eatWhile(/[\\w-]/);\n    var cur = stream.current();\n    return words.hasOwnProperty(cur) ? words[cur] : null;\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var next, end = false, escaped = false;\n      while ((next = stream.next()) != null) {\n        if (next === quote && !escaped) {\n          end = true;\n          break;\n        }\n      }\n      if (end || !escaped) {\n        state.tokens.shift();\n      }\n      return ((quote === ')' || quote === '}') ? 'quote' : 'string');\n    };\n  };\n\n\n  var tokenDollar = function(stream, state) {\n    if (state.tokens.length > 1) stream.eat('$');\n    var ch = stream.next(), hungry = /\\w/;\n    state.tokens[0] = tokenString(')');\n    return tokenize(stream, state);\n  };\n  var tokenDollarB = function(stream, state) {\n    if (state.tokens.length > 1) stream.eat('$');\n    var ch = stream.next(), hungry = /\\w/;\n    state.tokens[0] = tokenString('}');\n    return tokenize(stream, state);\n  };\n\n  function tokenize(stream, state) {\n    return (state.tokens[0] || tokenBase) (stream, state);\n  };\n\n  return {\n    startState: function() {return {tokens:[], inMid: false};},\n    token: function(stream, state) {\n      return tokenize(stream, state);\n    }\n  };\n});\n\nCodeMirror.defineMIME('text/x-makefile', 'makefile');","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n//tcl mode by Ford_Lawnmower :: Based on Velocity mode by Steve O'Hara\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"tcl\", function() {\n  function parseWords(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n  var keywords = parseWords(\"Tcl safe after append array auto_execok auto_import auto_load \" +\n        \"auto_mkindex auto_mkindex_old auto_qualify auto_reset bgerror \" +\n        \"binary break catch cd close concat continue dde eof encoding error \" +\n        \"eval exec exit expr fblocked fconfigure fcopy file fileevent filename \" +\n        \"filename flush for foreach format gets glob global history http if \" +\n        \"incr info interp join lappend lindex linsert list llength load lrange \" +\n        \"lreplace lsearch lset lsort memory msgcat namespace open package parray \" +\n        \"pid pkg::create pkg_mkIndex proc puts pwd re_syntax read regex regexp \" +\n        \"registry regsub rename resource return scan seek set socket source split \" +\n        \"string subst switch tcl_endOfWord tcl_findLibrary tcl_startOfNextWord \" +\n        \"tcl_wordBreakAfter tcl_startOfPreviousWord tcl_wordBreakBefore tcltest \" +\n        \"tclvars tell time trace unknown unset update uplevel upvar variable \" +\n    \"vwait\");\n    var functions = parseWords(\"if elseif else and not or eq ne in ni for foreach while switch\");\n    var isOperatorChar = /[+\\-*&%=<>!?^\\/\\|]/;\n    function chain(stream, state, f) {\n      state.tokenize = f;\n      return f(stream, state);\n    }\n    function tokenBase(stream, state) {\n      var beforeParams = state.beforeParams;\n      state.beforeParams = false;\n      var ch = stream.next();\n      if ((ch == '\"' || ch == \"'\") && state.inParams) {\n        return chain(stream, state, tokenString(ch));\n      } else if (/[\\[\\]{}\\(\\),;\\.]/.test(ch)) {\n        if (ch == \"(\" && beforeParams) state.inParams = true;\n        else if (ch == \")\") state.inParams = false;\n          return null;\n      } else if (/\\d/.test(ch)) {\n        stream.eatWhile(/[\\w\\.]/);\n        return \"number\";\n      } else if (ch == \"#\") {\n        if (stream.eat(\"*\"))\n          return chain(stream, state, tokenComment);\n        if (ch == \"#\" && stream.match(/ *\\[ *\\[/))\n          return chain(stream, state, tokenUnparsed);\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (ch == '\"') {\n        stream.skipTo(/\"/);\n        return \"comment\";\n      } else if (ch == \"$\") {\n        stream.eatWhile(/[$_a-z0-9A-Z\\.{:]/);\n        stream.eatWhile(/}/);\n        state.beforeParams = true;\n        return \"builtin\";\n      } else if (isOperatorChar.test(ch)) {\n        stream.eatWhile(isOperatorChar);\n        return \"comment\";\n      } else {\n        stream.eatWhile(/[\\w\\$_{}\\xa1-\\uffff]/);\n        var word = stream.current().toLowerCase();\n        if (keywords && keywords.propertyIsEnumerable(word))\n          return \"keyword\";\n        if (functions && functions.propertyIsEnumerable(word)) {\n          state.beforeParams = true;\n          return \"keyword\";\n        }\n        return null;\n      }\n    }\n    function tokenString(quote) {\n      return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {\n          end = true;\n          break;\n        }\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end) state.tokenize = tokenBase;\n        return \"string\";\n      };\n    }\n    function tokenComment(stream, state) {\n      var maybeEnd = false, ch;\n      while (ch = stream.next()) {\n        if (ch == \"#\" && maybeEnd) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        maybeEnd = (ch == \"*\");\n      }\n      return \"comment\";\n    }\n    function tokenUnparsed(stream, state) {\n      var maybeEnd = 0, ch;\n      while (ch = stream.next()) {\n        if (ch == \"#\" && maybeEnd == 2) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        if (ch == \"]\")\n          maybeEnd++;\n        else if (ch != \" \")\n          maybeEnd = 0;\n      }\n      return \"meta\";\n    }\n    return {\n      startState: function() {\n        return {\n          tokenize: tokenBase,\n          beforeParams: false,\n          inParams: false\n        };\n      },\n      token: function(stream, state) {\n        if (stream.eatSpace()) return null;\n        return state.tokenize(stream, state);\n      }\n    };\n});\nCodeMirror.defineMIME(\"text/x-tcl\", \"tcl\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n/**\n * Author: Koh Zi Han, based on implementation by Koh Zi Chun\n */\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"scheme\", function () {\n    var BUILTIN = \"builtin\", COMMENT = \"comment\", STRING = \"string\",\n        ATOM = \"atom\", NUMBER = \"number\", BRACKET = \"bracket\";\n    var INDENT_WORD_SKIP = 2;\n\n    function makeKeywords(str) {\n        var obj = {}, words = str.split(\" \");\n        for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n        return obj;\n    }\n\n    var keywords = makeKeywords(\"λ case-lambda call/cc class define-class exit-handler field import inherit init-field interface let*-values let-values let/ec mixin opt-lambda override protect provide public rename require require-for-syntax syntax syntax-case syntax-error unit/sig unless when with-syntax and begin call-with-current-continuation call-with-input-file call-with-output-file case cond define define-syntax delay do dynamic-wind else for-each if lambda let let* let-syntax letrec letrec-syntax map or syntax-rules abs acos angle append apply asin assoc assq assv atan boolean? caar cadr call-with-input-file call-with-output-file call-with-values car cdddar cddddr cdr ceiling char->integer char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? char-downcase char-lower-case? char-numeric? char-ready? char-upcase char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? char? close-input-port close-output-port complex? cons cos current-input-port current-output-port denominator display eof-object? eq? equal? eqv? eval even? exact->inexact exact? exp expt #f floor force gcd imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment lcm length list list->string list->vector list-ref list-tail list? load log magnitude make-polar make-rectangular make-string make-vector max member memq memv min modulo negative? newline not null-environment null? number->string number? numerator odd? open-input-file open-output-file output-port? pair? peek-char port? positive? procedure? quasiquote quote quotient rational? rationalize read read-char real-part real? remainder reverse round scheme-report-environment set! set-car! set-cdr! sin sqrt string string->list string->number string->symbol string-append string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? string-copy string-fill! string-length string-ref string-set! string<=? string<? string=? string>=? string>? string? substring symbol->string symbol? #t tan transcript-off transcript-on truncate values vector vector->list vector-fill! vector-length vector-ref vector-set! with-input-from-file with-output-to-file write write-char zero?\");\n    var indentKeys = makeKeywords(\"define let letrec let* lambda\");\n\n    function stateStack(indent, type, prev) { // represents a state stack object\n        this.indent = indent;\n        this.type = type;\n        this.prev = prev;\n    }\n\n    function pushStack(state, indent, type) {\n        state.indentStack = new stateStack(indent, type, state.indentStack);\n    }\n\n    function popStack(state) {\n        state.indentStack = state.indentStack.prev;\n    }\n\n    var binaryMatcher = new RegExp(/^(?:[-+]i|[-+][01]+#*(?:\\/[01]+#*)?i|[-+]?[01]+#*(?:\\/[01]+#*)?@[-+]?[01]+#*(?:\\/[01]+#*)?|[-+]?[01]+#*(?:\\/[01]+#*)?[-+](?:[01]+#*(?:\\/[01]+#*)?)?i|[-+]?[01]+#*(?:\\/[01]+#*)?)(?=[()\\s;\"]|$)/i);\n    var octalMatcher = new RegExp(/^(?:[-+]i|[-+][0-7]+#*(?:\\/[0-7]+#*)?i|[-+]?[0-7]+#*(?:\\/[0-7]+#*)?@[-+]?[0-7]+#*(?:\\/[0-7]+#*)?|[-+]?[0-7]+#*(?:\\/[0-7]+#*)?[-+](?:[0-7]+#*(?:\\/[0-7]+#*)?)?i|[-+]?[0-7]+#*(?:\\/[0-7]+#*)?)(?=[()\\s;\"]|$)/i);\n    var hexMatcher = new RegExp(/^(?:[-+]i|[-+][\\da-f]+#*(?:\\/[\\da-f]+#*)?i|[-+]?[\\da-f]+#*(?:\\/[\\da-f]+#*)?@[-+]?[\\da-f]+#*(?:\\/[\\da-f]+#*)?|[-+]?[\\da-f]+#*(?:\\/[\\da-f]+#*)?[-+](?:[\\da-f]+#*(?:\\/[\\da-f]+#*)?)?i|[-+]?[\\da-f]+#*(?:\\/[\\da-f]+#*)?)(?=[()\\s;\"]|$)/i);\n    var decimalMatcher = new RegExp(/^(?:[-+]i|[-+](?:(?:(?:\\d+#+\\.?#*|\\d+\\.\\d*#*|\\.\\d+#*|\\d+)(?:[esfdl][-+]?\\d+)?)|\\d+#*\\/\\d+#*)i|[-+]?(?:(?:(?:\\d+#+\\.?#*|\\d+\\.\\d*#*|\\.\\d+#*|\\d+)(?:[esfdl][-+]?\\d+)?)|\\d+#*\\/\\d+#*)@[-+]?(?:(?:(?:\\d+#+\\.?#*|\\d+\\.\\d*#*|\\.\\d+#*|\\d+)(?:[esfdl][-+]?\\d+)?)|\\d+#*\\/\\d+#*)|[-+]?(?:(?:(?:\\d+#+\\.?#*|\\d+\\.\\d*#*|\\.\\d+#*|\\d+)(?:[esfdl][-+]?\\d+)?)|\\d+#*\\/\\d+#*)[-+](?:(?:(?:\\d+#+\\.?#*|\\d+\\.\\d*#*|\\.\\d+#*|\\d+)(?:[esfdl][-+]?\\d+)?)|\\d+#*\\/\\d+#*)?i|(?:(?:(?:\\d+#+\\.?#*|\\d+\\.\\d*#*|\\.\\d+#*|\\d+)(?:[esfdl][-+]?\\d+)?)|\\d+#*\\/\\d+#*))(?=[()\\s;\"]|$)/i);\n\n    function isBinaryNumber (stream) {\n        return stream.match(binaryMatcher);\n    }\n\n    function isOctalNumber (stream) {\n        return stream.match(octalMatcher);\n    }\n\n    function isDecimalNumber (stream, backup) {\n        if (backup === true) {\n            stream.backUp(1);\n        }\n        return stream.match(decimalMatcher);\n    }\n\n    function isHexNumber (stream) {\n        return stream.match(hexMatcher);\n    }\n\n    return {\n        startState: function () {\n            return {\n                indentStack: null,\n                indentation: 0,\n                mode: false,\n                sExprComment: false\n            };\n        },\n\n        token: function (stream, state) {\n            if (state.indentStack == null && stream.sol()) {\n                // update indentation, but only if indentStack is empty\n                state.indentation = stream.indentation();\n            }\n\n            // skip spaces\n            if (stream.eatSpace()) {\n                return null;\n            }\n            var returnType = null;\n\n            switch(state.mode){\n                case \"string\": // multi-line string parsing mode\n                    var next, escaped = false;\n                    while ((next = stream.next()) != null) {\n                        if (next == \"\\\"\" && !escaped) {\n\n                            state.mode = false;\n                            break;\n                        }\n                        escaped = !escaped && next == \"\\\\\";\n                    }\n                    returnType = STRING; // continue on in scheme-string mode\n                    break;\n                case \"comment\": // comment parsing mode\n                    var next, maybeEnd = false;\n                    while ((next = stream.next()) != null) {\n                        if (next == \"#\" && maybeEnd) {\n\n                            state.mode = false;\n                            break;\n                        }\n                        maybeEnd = (next == \"|\");\n                    }\n                    returnType = COMMENT;\n                    break;\n                case \"s-expr-comment\": // s-expr commenting mode\n                    state.mode = false;\n                    if(stream.peek() == \"(\" || stream.peek() == \"[\"){\n                        // actually start scheme s-expr commenting mode\n                        state.sExprComment = 0;\n                    }else{\n                        // if not we just comment the entire of the next token\n                        stream.eatWhile(/[^/s]/); // eat non spaces\n                        returnType = COMMENT;\n                        break;\n                    }\n                default: // default parsing mode\n                    var ch = stream.next();\n\n                    if (ch == \"\\\"\") {\n                        state.mode = \"string\";\n                        returnType = STRING;\n\n                    } else if (ch == \"'\") {\n                        returnType = ATOM;\n                    } else if (ch == '#') {\n                        if (stream.eat(\"|\")) {                    // Multi-line comment\n                            state.mode = \"comment\"; // toggle to comment mode\n                            returnType = COMMENT;\n                        } else if (stream.eat(/[tf]/i)) {            // #t/#f (atom)\n                            returnType = ATOM;\n                        } else if (stream.eat(';')) {                // S-Expr comment\n                            state.mode = \"s-expr-comment\";\n                            returnType = COMMENT;\n                        } else {\n                            var numTest = null, hasExactness = false, hasRadix = true;\n                            if (stream.eat(/[ei]/i)) {\n                                hasExactness = true;\n                            } else {\n                                stream.backUp(1);       // must be radix specifier\n                            }\n                            if (stream.match(/^#b/i)) {\n                                numTest = isBinaryNumber;\n                            } else if (stream.match(/^#o/i)) {\n                                numTest = isOctalNumber;\n                            } else if (stream.match(/^#x/i)) {\n                                numTest = isHexNumber;\n                            } else if (stream.match(/^#d/i)) {\n                                numTest = isDecimalNumber;\n                            } else if (stream.match(/^[-+0-9.]/, false)) {\n                                hasRadix = false;\n                                numTest = isDecimalNumber;\n                            // re-consume the intial # if all matches failed\n                            } else if (!hasExactness) {\n                                stream.eat('#');\n                            }\n                            if (numTest != null) {\n                                if (hasRadix && !hasExactness) {\n                                    // consume optional exactness after radix\n                                    stream.match(/^#[ei]/i);\n                                }\n                                if (numTest(stream))\n                                    returnType = NUMBER;\n                            }\n                        }\n                    } else if (/^[-+0-9.]/.test(ch) && isDecimalNumber(stream, true)) { // match non-prefixed number, must be decimal\n                        returnType = NUMBER;\n                    } else if (ch == \";\") { // comment\n                        stream.skipToEnd(); // rest of the line is a comment\n                        returnType = COMMENT;\n                    } else if (ch == \"(\" || ch == \"[\") {\n                      var keyWord = ''; var indentTemp = stream.column(), letter;\n                        /**\n                        Either\n                        (indent-word ..\n                        (non-indent-word ..\n                        (;something else, bracket, etc.\n                        */\n\n                        while ((letter = stream.eat(/[^\\s\\(\\[\\;\\)\\]]/)) != null) {\n                            keyWord += letter;\n                        }\n\n                        if (keyWord.length > 0 && indentKeys.propertyIsEnumerable(keyWord)) { // indent-word\n\n                            pushStack(state, indentTemp + INDENT_WORD_SKIP, ch);\n                        } else { // non-indent word\n                            // we continue eating the spaces\n                            stream.eatSpace();\n                            if (stream.eol() || stream.peek() == \";\") {\n                                // nothing significant after\n                                // we restart indentation 1 space after\n                                pushStack(state, indentTemp + 1, ch);\n                            } else {\n                                pushStack(state, indentTemp + stream.current().length, ch); // else we match\n                            }\n                        }\n                        stream.backUp(stream.current().length - 1); // undo all the eating\n\n                        if(typeof state.sExprComment == \"number\") state.sExprComment++;\n\n                        returnType = BRACKET;\n                    } else if (ch == \")\" || ch == \"]\") {\n                        returnType = BRACKET;\n                        if (state.indentStack != null && state.indentStack.type == (ch == \")\" ? \"(\" : \"[\")) {\n                            popStack(state);\n\n                            if(typeof state.sExprComment == \"number\"){\n                                if(--state.sExprComment == 0){\n                                    returnType = COMMENT; // final closing bracket\n                                    state.sExprComment = false; // turn off s-expr commenting mode\n                                }\n                            }\n                        }\n                    } else {\n                        stream.eatWhile(/[\\w_\\-!$%&*+\\.\\/:<=>?@\\^~]/);\n\n                        if (keywords && keywords.propertyIsEnumerable(stream.current())) {\n                            returnType = BUILTIN;\n                        } else returnType = \"variable\";\n                    }\n            }\n            return (typeof state.sExprComment == \"number\") ? COMMENT : returnType;\n        },\n\n        indent: function (state) {\n            if (state.indentStack == null) return state.indentation;\n            return state.indentStack.indent;\n        },\n\n        closeBrackets: {pairs: \"()[]{}\\\"\\\"\"},\n        lineComment: \";;\"\n    };\n});\n\nCodeMirror.defineMIME(\"text/x-scheme\", \"scheme\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"),  require(\"../../addon/mode/multiplex\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"twig:inner\", function() {\n    var keywords = [\"and\", \"as\", \"autoescape\", \"endautoescape\", \"block\", \"do\", \"endblock\", \"else\", \"elseif\", \"extends\", \"for\", \"endfor\", \"embed\", \"endembed\", \"filter\", \"endfilter\", \"flush\", \"from\", \"if\", \"endif\", \"in\", \"is\", \"include\", \"import\", \"not\", \"or\", \"set\", \"spaceless\", \"endspaceless\", \"with\", \"endwith\", \"trans\", \"endtrans\", \"blocktrans\", \"endblocktrans\", \"macro\", \"endmacro\", \"use\", \"verbatim\", \"endverbatim\"],\n        operator = /^[+\\-*&%=<>!?|~^]/,\n        sign = /^[:\\[\\(\\{]/,\n        atom = [\"true\", \"false\", \"null\", \"empty\", \"defined\", \"divisibleby\", \"divisible by\", \"even\", \"odd\", \"iterable\", \"sameas\", \"same as\"],\n        number = /^(\\d[+\\-\\*\\/])?\\d+(\\.\\d+)?/;\n\n    keywords = new RegExp(\"((\" + keywords.join(\")|(\") + \"))\\\\b\");\n    atom = new RegExp(\"((\" + atom.join(\")|(\") + \"))\\\\b\");\n\n    function tokenBase (stream, state) {\n      var ch = stream.peek();\n\n      //Comment\n      if (state.incomment) {\n        if (!stream.skipTo(\"#}\")) {\n          stream.skipToEnd();\n        } else {\n          stream.eatWhile(/\\#|}/);\n          state.incomment = false;\n        }\n        return \"comment\";\n      //Tag\n      } else if (state.intag) {\n        //After operator\n        if (state.operator) {\n          state.operator = false;\n          if (stream.match(atom)) {\n            return \"atom\";\n          }\n          if (stream.match(number)) {\n            return \"number\";\n          }\n        }\n        //After sign\n        if (state.sign) {\n          state.sign = false;\n          if (stream.match(atom)) {\n            return \"atom\";\n          }\n          if (stream.match(number)) {\n            return \"number\";\n          }\n        }\n\n        if (state.instring) {\n          if (ch == state.instring) {\n            state.instring = false;\n          }\n          stream.next();\n          return \"string\";\n        } else if (ch == \"'\" || ch == '\"') {\n          state.instring = ch;\n          stream.next();\n          return \"string\";\n        } else if (stream.match(state.intag + \"}\") || stream.eat(\"-\") && stream.match(state.intag + \"}\")) {\n          state.intag = false;\n          return \"tag\";\n        } else if (stream.match(operator)) {\n          state.operator = true;\n          return \"operator\";\n        } else if (stream.match(sign)) {\n          state.sign = true;\n        } else {\n          if (stream.eat(\" \") || stream.sol()) {\n            if (stream.match(keywords)) {\n              return \"keyword\";\n            }\n            if (stream.match(atom)) {\n              return \"atom\";\n            }\n            if (stream.match(number)) {\n              return \"number\";\n            }\n            if (stream.sol()) {\n              stream.next();\n            }\n          } else {\n            stream.next();\n          }\n\n        }\n        return \"variable\";\n      } else if (stream.eat(\"{\")) {\n        if (stream.eat(\"#\")) {\n          state.incomment = true;\n          if (!stream.skipTo(\"#}\")) {\n            stream.skipToEnd();\n          } else {\n            stream.eatWhile(/\\#|}/);\n            state.incomment = false;\n          }\n          return \"comment\";\n        //Open tag\n        } else if (ch = stream.eat(/\\{|%/)) {\n          //Cache close tag\n          state.intag = ch;\n          if (ch == \"{\") {\n            state.intag = \"}\";\n          }\n          stream.eat(\"-\");\n          return \"tag\";\n        }\n      }\n      stream.next();\n    };\n\n    return {\n      startState: function () {\n        return {};\n      },\n      token: function (stream, state) {\n        return tokenBase(stream, state);\n      }\n    };\n  });\n\n  CodeMirror.defineMode(\"twig\", function(config, parserConfig) {\n    var twigInner = CodeMirror.getMode(config, \"twig:inner\");\n    if (!parserConfig || !parserConfig.base) return twigInner;\n    return CodeMirror.multiplexingMode(\n      CodeMirror.getMode(config, parserConfig.base), {\n        open: /\\{[{#%]/, close: /[}#%]\\}/, mode: twigInner, parseDelimiters: true\n      }\n    );\n  });\n  CodeMirror.defineMIME(\"text/x-twig\", \"twig\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n\n// SAS mode copyright (c) 2016 Jared Dean, SAS Institute\n// Created by Jared Dean\n\n// TODO\n// indent and de-indent\n// identify macro variables\n\n\n//Definitions\n//  comment -- text within * ; or /* */\n//  keyword -- SAS language variable\n//  variable -- macro variables starts with '&' or variable formats\n//  variable-2 -- DATA Step, proc, or macro names\n//  string -- text within ' ' or \" \"\n//  operator -- numeric operator + / - * ** le eq ge ... and so on\n//  builtin -- proc %macro data run mend\n//  atom\n//  def\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"sas\", function () {\n    var words = {};\n    var isDoubleOperatorSym = {\n      eq: 'operator',\n      lt: 'operator',\n      le: 'operator',\n      gt: 'operator',\n      ge: 'operator',\n      \"in\": 'operator',\n      ne: 'operator',\n      or: 'operator'\n    };\n    var isDoubleOperatorChar = /(<=|>=|!=|<>)/;\n    var isSingleOperatorChar = /[=\\(:\\),{}.*<>+\\-\\/^\\[\\]]/;\n\n    // Takes a string of words separated by spaces and adds them as\n    // keys with the value of the first argument 'style'\n    function define(style, string, context) {\n      if (context) {\n        var split = string.split(' ');\n        for (var i = 0; i < split.length; i++) {\n          words[split[i]] = {style: style, state: context};\n        }\n      }\n    }\n    //datastep\n    define('def', 'stack pgm view source debug nesting nolist', ['inDataStep']);\n    define('def', 'if while until for do do; end end; then else cancel', ['inDataStep']);\n    define('def', 'label format _n_ _error_', ['inDataStep']);\n    define('def', 'ALTER BUFNO BUFSIZE CNTLLEV COMPRESS DLDMGACTION ENCRYPT ENCRYPTKEY EXTENDOBSCOUNTER GENMAX GENNUM INDEX LABEL OBSBUF OUTREP PW PWREQ READ REPEMPTY REPLACE REUSE ROLE SORTEDBY SPILL TOBSNO TYPE WRITE FILECLOSE FIRSTOBS IN OBS POINTOBS WHERE WHEREUP IDXNAME IDXWHERE DROP KEEP RENAME', ['inDataStep']);\n    define('def', 'filevar finfo finv fipname fipnamel fipstate first firstobs floor', ['inDataStep']);\n    define('def', 'varfmt varinfmt varlabel varlen varname varnum varray varrayx vartype verify vformat vformatd vformatdx vformatn vformatnx vformatw vformatwx vformatx vinarray vinarrayx vinformat vinformatd vinformatdx vinformatn vinformatnx vinformatw vinformatwx vinformatx vlabel vlabelx vlength vlengthx vname vnamex vnferr vtype vtypex weekday', ['inDataStep']);\n    define('def', 'zipfips zipname zipnamel zipstate', ['inDataStep']);\n    define('def', 'put putc putn', ['inDataStep']);\n    define('builtin', 'data run', ['inDataStep']);\n\n\n    //proc\n    define('def', 'data', ['inProc']);\n\n    // flow control for macros\n    define('def', '%if %end %end; %else %else; %do %do; %then', ['inMacro']);\n\n    //everywhere\n    define('builtin', 'proc run; quit; libname filename %macro %mend option options', ['ALL']);\n\n    define('def', 'footnote title libname ods', ['ALL']);\n    define('def', '%let %put %global %sysfunc %eval ', ['ALL']);\n    // automatic macro variables http://support.sas.com/documentation/cdl/en/mcrolref/61885/HTML/default/viewer.htm#a003167023.htm\n    define('variable', '&sysbuffr &syscc &syscharwidth &syscmd &sysdate &sysdate9 &sysday &sysdevic &sysdmg &sysdsn &sysencoding &sysenv &syserr &syserrortext &sysfilrc &syshostname &sysindex &sysinfo &sysjobid &syslast &syslckrc &syslibrc &syslogapplname &sysmacroname &sysmenv &sysmsg &sysncpu &sysodspath &sysparm &syspbuff &sysprocessid &sysprocessname &sysprocname &sysrc &sysscp &sysscpl &sysscpl &syssite &sysstartid &sysstartname &systcpiphostname &systime &sysuserid &sysver &sysvlong &sysvlong4 &syswarningtext', ['ALL']);\n\n    //footnote[1-9]? title[1-9]?\n\n    //options statement\n    define('def', 'source2 nosource2 page pageno pagesize', ['ALL']);\n\n    //proc and datastep\n    define('def', '_all_ _character_ _cmd_ _freq_ _i_ _infile_ _last_ _msg_ _null_ _numeric_ _temporary_ _type_ abort abs addr adjrsq airy alpha alter altlog altprint and arcos array arsin as atan attrc attrib attrn authserver autoexec awscontrol awsdef awsmenu awsmenumerge awstitle backward band base betainv between blocksize blshift bnot bor brshift bufno bufsize bxor by byerr byline byte calculated call cards cards4 catcache cbufno cdf ceil center cexist change chisq cinv class cleanup close cnonct cntllev coalesce codegen col collate collin column comamid comaux1 comaux2 comdef compbl compound compress config continue convert cos cosh cpuid create cross crosstab css curobs cv daccdb daccdbsl daccsl daccsyd dacctab dairy datalines datalines4 datejul datepart datetime day dbcslang dbcstype dclose ddm delete delimiter depdb depdbsl depsl depsyd deptab dequote descending descript design= device dflang dhms dif digamma dim dinfo display distinct dkricond dkrocond dlm dnum do dopen doptname doptnum dread drop dropnote dsname dsnferr echo else emaildlg emailid emailpw emailserver emailsys encrypt end endsas engine eof eov erf erfc error errorcheck errors exist exp fappend fclose fcol fdelete feedback fetch fetchobs fexist fget file fileclose fileexist filefmt filename fileref  fmterr fmtsearch fnonct fnote font fontalias  fopen foptname foptnum force formatted formchar formdelim formdlim forward fpoint fpos fput fread frewind frlen from fsep fuzz fwrite gaminv gamma getoption getvarc getvarn go goto group gwindow hbar hbound helpenv helploc hms honorappearance hosthelp hostprint hour hpct html hvar ibessel ibr id if index indexc indexw initcmd initstmt inner input inputc inputn inr insert int intck intnx into intrr invaliddata irr is jbessel join juldate keep kentb kurtosis label lag last lbound leave left length levels lgamma lib  library libref line linesize link list log log10 log2 logpdf logpmf logsdf lostcard lowcase lrecl ls macro macrogen maps mautosource max maxdec maxr mdy mean measures median memtype merge merror min minute missing missover mlogic mod mode model modify month mopen mort mprint mrecall msglevel msymtabmax mvarsize myy n nest netpv new news nmiss no nobatch nobs nocaps nocardimage nocenter nocharcode nocmdmac nocol nocum nodate nodbcs nodetails nodmr nodms nodmsbatch nodup nodupkey noduplicates noechoauto noequals noerrorabend noexitwindows nofullstimer noicon noimplmac noint nolist noloadlist nomiss nomlogic nomprint nomrecall nomsgcase nomstored nomultenvappl nonotes nonumber noobs noovp nopad nopercent noprint noprintinit normal norow norsasuser nosetinit  nosplash nosymbolgen note notes notitle notitles notsorted noverbose noxsync noxwait npv null number numkeys nummousekeys nway obs  on open     order ordinal otherwise out outer outp= output over ovp p(1 5 10 25 50 75 90 95 99) pad pad2  paired parm parmcards path pathdll pathname pdf peek peekc pfkey pmf point poisson poke position printer probbeta probbnml probchi probf probgam probhypr probit probnegb probnorm probsig probt procleave prt ps  pw pwreq qtr quote r ranbin rancau ranexp rangam range ranks rannor ranpoi rantbl rantri ranuni read recfm register regr remote remove rename repeat replace resolve retain return reuse reverse rewind right round rsquare rtf rtrace rtraceloc s s2 samploc sasautos sascontrol sasfrscr sasmsg sasmstore sasscript sasuser saving scan sdf second select selection separated seq serror set setcomm setot sign simple sin sinh siteinfo skewness skip sle sls sortedby sortpgm sortseq sortsize soundex  spedis splashlocation split spool sqrt start std stderr stdin stfips stimer stname stnamel stop stopover subgroup subpopn substr sum sumwgt symbol symbolgen symget symput sysget sysin sysleave sysmsg sysparm sysprint sysprintfont sysprod sysrc system t table tables tan tanh tapeclose tbufsize terminal test then timepart tinv  tnonct to today tol tooldef totper transformout translate trantab tranwrd trigamma trim trimn trunc truncover type unformatted uniform union until upcase update user usericon uss validate value var  weight when where while wincharset window work workinit workterm write wsum xsync xwait yearcutoff yes yyq  min max', ['inDataStep', 'inProc']);\n    define('operator', 'and not ', ['inDataStep', 'inProc']);\n\n    // Main function\n    function tokenize(stream, state) {\n      // Finally advance the stream\n      var ch = stream.next() || \"\";\n\n      // BLOCKCOMMENT\n      if (ch === '/' && stream.eat('*')) {\n        state.continueComment = true;\n        return \"comment\";\n      } else if (state.continueComment === true) { // in comment block\n        //comment ends at the beginning of the line\n        if (ch === '*' && stream.peek() === '/') {\n          stream.next();\n          state.continueComment = false;\n        } else if (stream.skipTo('*')) { //comment is potentially later in line\n          stream.skipTo('*');\n          stream.next();\n          if (stream.eat('/'))\n            state.continueComment = false;\n        } else {\n          stream.skipToEnd();\n        }\n        return \"comment\";\n      }\n\n      if (ch == \"*\" && stream.column() == stream.indentation()) {\n        stream.skipToEnd()\n        return \"comment\"\n      }\n\n      // DoubleOperator match\n      var doubleOperator = ch + stream.peek();\n\n      if ((ch === '\"' || ch === \"'\") && !state.continueString) {\n        state.continueString = ch\n        return \"string\"\n      } else if (state.continueString) {\n        if (state.continueString == ch) {\n          state.continueString = null;\n        } else if (stream.skipTo(state.continueString)) {\n          // quote found on this line\n          stream.next();\n          state.continueString = null;\n        } else {\n          stream.skipToEnd();\n        }\n        return \"string\";\n      } else if (state.continueString !== null && stream.eol()) {\n        stream.skipTo(state.continueString) || stream.skipToEnd();\n        return \"string\";\n      } else if (/[\\d\\.]/.test(ch)) { //find numbers\n        if (ch === \".\")\n          stream.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/);\n        else if (ch === \"0\")\n          stream.match(/^[xX][0-9a-fA-F]+/) || stream.match(/^0[0-7]+/);\n        else\n          stream.match(/^[0-9]*\\.?[0-9]*([eE][\\-+]?[0-9]+)?/);\n        return \"number\";\n      } else if (isDoubleOperatorChar.test(ch + stream.peek())) { // TWO SYMBOL TOKENS\n        stream.next();\n        return \"operator\";\n      } else if (isDoubleOperatorSym.hasOwnProperty(doubleOperator)) {\n        stream.next();\n        if (stream.peek() === ' ')\n          return isDoubleOperatorSym[doubleOperator.toLowerCase()];\n      } else if (isSingleOperatorChar.test(ch)) { // SINGLE SYMBOL TOKENS\n        return \"operator\";\n      }\n\n      // Matches one whole word -- even if the word is a character\n      var word;\n      if (stream.match(/[%&;\\w]+/, false) != null) {\n        word = ch + stream.match(/[%&;\\w]+/, true);\n        if (/&/.test(word)) return 'variable'\n      } else {\n        word = ch;\n      }\n      // the word after DATA PROC or MACRO\n      if (state.nextword) {\n        stream.match(/[\\w]+/);\n        // match memname.libname\n        if (stream.peek() === '.') stream.skipTo(' ');\n        state.nextword = false;\n        return 'variable-2';\n      }\n\n      word = word.toLowerCase()\n      // Are we in a DATA Step?\n      if (state.inDataStep) {\n        if (word === 'run;' || stream.match(/run\\s;/)) {\n          state.inDataStep = false;\n          return 'builtin';\n        }\n        // variable formats\n        if ((word) && stream.next() === '.') {\n          //either a format or libname.memname\n          if (/\\w/.test(stream.peek())) return 'variable-2';\n          else return 'variable';\n        }\n        // do we have a DATA Step keyword\n        if (word && words.hasOwnProperty(word) &&\n            (words[word].state.indexOf(\"inDataStep\") !== -1 ||\n             words[word].state.indexOf(\"ALL\") !== -1)) {\n          //backup to the start of the word\n          if (stream.start < stream.pos)\n            stream.backUp(stream.pos - stream.start);\n          //advance the length of the word and return\n          for (var i = 0; i < word.length; ++i) stream.next();\n          return words[word].style;\n        }\n      }\n      // Are we in an Proc statement?\n      if (state.inProc) {\n        if (word === 'run;' || word === 'quit;') {\n          state.inProc = false;\n          return 'builtin';\n        }\n        // do we have a proc keyword\n        if (word && words.hasOwnProperty(word) &&\n            (words[word].state.indexOf(\"inProc\") !== -1 ||\n             words[word].state.indexOf(\"ALL\") !== -1)) {\n          stream.match(/[\\w]+/);\n          return words[word].style;\n        }\n      }\n      // Are we in a Macro statement?\n      if (state.inMacro) {\n        if (word === '%mend') {\n          if (stream.peek() === ';') stream.next();\n          state.inMacro = false;\n          return 'builtin';\n        }\n        if (word && words.hasOwnProperty(word) &&\n            (words[word].state.indexOf(\"inMacro\") !== -1 ||\n             words[word].state.indexOf(\"ALL\") !== -1)) {\n          stream.match(/[\\w]+/);\n          return words[word].style;\n        }\n\n        return 'atom';\n      }\n      // Do we have Keywords specific words?\n      if (word && words.hasOwnProperty(word)) {\n        // Negates the initial next()\n        stream.backUp(1);\n        // Actually move the stream\n        stream.match(/[\\w]+/);\n        if (word === 'data' && /=/.test(stream.peek()) === false) {\n          state.inDataStep = true;\n          state.nextword = true;\n          return 'builtin';\n        }\n        if (word === 'proc') {\n          state.inProc = true;\n          state.nextword = true;\n          return 'builtin';\n        }\n        if (word === '%macro') {\n          state.inMacro = true;\n          state.nextword = true;\n          return 'builtin';\n        }\n        if (/title[1-9]/.test(word)) return 'def';\n\n        if (word === 'footnote') {\n          stream.eat(/[1-9]/);\n          return 'def';\n        }\n\n        // Returns their value as state in the prior define methods\n        if (state.inDataStep === true && words[word].state.indexOf(\"inDataStep\") !== -1)\n          return words[word].style;\n        if (state.inProc === true && words[word].state.indexOf(\"inProc\") !== -1)\n          return words[word].style;\n        if (state.inMacro === true && words[word].state.indexOf(\"inMacro\") !== -1)\n          return words[word].style;\n        if (words[word].state.indexOf(\"ALL\") !== -1)\n          return words[word].style;\n        return null;\n      }\n      // Unrecognized syntax\n      return null;\n    }\n\n    return {\n      startState: function () {\n        return {\n          inDataStep: false,\n          inProc: false,\n          inMacro: false,\n          nextword: false,\n          continueString: null,\n          continueComment: false\n        };\n      },\n      token: function (stream, state) {\n        // Strip the spaces, but regex will account for them either way\n        if (stream.eatSpace()) return null;\n        // Go through the main process\n        return tokenize(stream, state);\n      },\n\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\"\n    };\n\n  });\n\n  CodeMirror.defineMIME(\"text/x-sas\", \"sas\");\n});\n","(function (mod) {\n    if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n        mod(require(\"../../lib/codemirror\"));\n    else if (typeof define == \"function\" && define.amd) // AMD\n        define([\"../../lib/codemirror\"], mod);\n    else // Plain browser env\n        mod(CodeMirror);\n})(function (CodeMirror) {\n    \"use strict\";\n\n    CodeMirror.defineMode(\"pseudocode\", function () {\n        var define1 = [\"interface\", \"class\", \"abstract class\"];\n        var define2 = [\"implements\", \"extends\"];\n        var define3 = [\"abstract\", \"static\", \"private\", \"public\", \"protected\", \"method\", \"function\", \"constructor\", \"field\", \"procedure\", \"process\", \"case\", \"switch\"];\n        var keywords = [\"override\", \"overload\", \"new\",\n                \"is\", \"return\", \"for\", \"foreach\", \"for each\", \"when\", \"where\", \"while\", \"if\", \"then\", \"else\", \"elseif\", \"until\", \"and\", \"or\", \"begin\", \"end\", \"exit\", \"type\", \"of\", \"in\", \"all\", \"statement\", \"loop\", \"try\", \"catch\", \"final\", \"finally\", \"define\", \"def\"];\n        var operator = /^[+\\-*&%=<>!?|~^]/;\n        var bracket = /^[:;\\(\\)\\[\\]\\{\\}]/;\n        var atom = [\"true\", \"false\", \"yes\", \"no\", \"null\", \"this\", \"parent::\", \"static::\", \"undefined\", \"nil\", \"void\", \"int\", \"string\", \"object\", \"number\", \"map\", \"array\", \"list\", \"set\", \"bool\", \"boolean\"];\n        var number = /^(\\d[+\\-\\*\\/])?\\d+(\\.\\d+)?/;\n        var word = /^\\w+(?:'\\w+)?/;\n\n        define1 = new RegExp(\"((\" + define1.join(\")|(\") + \"))\\\\b\", \"i\");\n        define2 = new RegExp(\"((\" + define2.join(\")|(\") + \"))\\\\b\", \"i\");\n        define3 = new RegExp(\"((\" + define3.join(\")|(\") + \"))\\\\b\", \"i\");\n        keywords = new RegExp(\"((\" + keywords.join(\")|(\") + \"))\\\\b\", \"i\");\n        atom = new RegExp(\"((\" + atom.join(\")|(\") + \"))\\\\b\", \"i\");\n\n        function tokenBase(stream, state) {\n            function internalTokenBase(stream, state) {\n                var ch = stream.peek();\n\n                if (stream.eol()) {\n                    state.define = false;\n                }\n\n                if (state.incomment) {\n                    if (!stream.skipTo(\"*/\")) {\n                        stream.skipToEnd();\n                    } else {\n                        stream.eatWhile(/\\*|\\//);\n                        state.incomment = false;\n                    }\n                    return \"comment\";\n                }\n                else if (state.instring) {\n                    if (ch == state.instring) {\n                        state.instring = false;\n                    }\n                    stream.next();\n                    return \"string\";\n                }\n                else if (ch == \"'\" || ch == '\"') {\n                    state.instring = ch;\n                    stream.next();\n                    return \"string\";\n                }\n                else if (stream.eat(\"/\")) {\n                    if (stream.eat(\"*\")) {\n                        state.incomment = true;\n                        if (!stream.skipTo(\"*/\")) {\n                            stream.skipToEnd();\n                        } else {\n                            stream.eatWhile(/\\*|\\//);\n                            state.incomment = false;\n                        }\n                        return \"comment\";\n                    }\n                    else if (stream.eat(\"/\")) {\n                        if (stream.match(/\\s*\\.\\.\\.+\\s*$/)) {\n                            stream.skipToEnd();\n                            return \"comment\";\n                        }\n                        stream.skipToEnd();\n                        return \"doc\";\n                    }\n                } else {\n                    if (stream.eat(\" \")) {\n                        stream.eatSpace();\n                        return;\n                    }\n                    else {\n                        if (state.sol && stream.match(define1)) {\n                            state.define = true;\n                            state.def_mode = 1;\n                            return \"keyword\";\n                        }\n                        if (stream.match(define2)) {\n                            state.define = true;\n                            state.def_mode = 2;\n                            return \"variable-3\";\n                        }\n                        if ((state.sol || state.def_mode == 3) && stream.match(define3)) {\n                            state.define = true;\n                            state.def_mode = 3;\n                            return \"keyword\";\n                        }\n                        if (stream.match(keywords)) {\n                            state.define = false;\n                            state.def_mode = null;\n                            return \"keyword\";\n                        }\n                        if (stream.match(atom)) {\n                            return \"atom\";\n                        }\n                        if (stream.match(operator)) {\n                            return \"operator\";\n                        }\n                        if (stream.match(bracket)) {\n                            state.define = false;\n                            state.def_mode = null;\n                            return \"bracket\";\n                        }\n                        if (stream.match(number)) {\n                            return \"number\";\n                        }\n                        if (stream.match(word)) {\n                            if (state.define) {\n                                var token = \"def\" + state.def_mode;\n                                return token;\n                            }\n                            return \"variable\";\n                        }\n                    }\n                }\n\n                stream.next();\n            }\n\n            if (stream.sol()) {\n                state.sol = true;\n            }\n            var result = internalTokenBase(stream, state);\n            if (result) {\n                state.sol = false;\n            }\n            return result;\n        }\n\n        return {\n            startState: function () {\n                return {};\n            },\n            token: function (stream, state) {\n                return tokenBase(stream, state);\n            }\n        };\n    });\n\n    CodeMirror.defineMIME(\"text/x-pseudocode\", \"pseudocode\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"julia\", function(config, parserConf) {\n  function wordRegexp(words, end) {\n    if (typeof end === \"undefined\") { end = \"\\\\b\"; }\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\" + end);\n  }\n\n  var octChar = \"\\\\\\\\[0-7]{1,3}\";\n  var hexChar = \"\\\\\\\\x[A-Fa-f0-9]{1,2}\";\n  var sChar = \"\\\\\\\\[abefnrtv0%?'\\\"\\\\\\\\]\";\n  var uChar = \"([^\\\\u0027\\\\u005C\\\\uD800-\\\\uDFFF]|[\\\\uD800-\\\\uDFFF][\\\\uDC00-\\\\uDFFF])\";\n\n  var operators = parserConf.operators || wordRegexp([\n      \"\\\\.?[\\\\\\\\%*+\\\\-<>!=\\\\/^]=?\", \"\\\\.?[|&\\\\u00F7\\\\u2260\\\\u2264\\\\u2265]\",\n      \"\\\\u00D7\", \"\\\\u2208\", \"\\\\u2209\", \"\\\\u220B\", \"\\\\u220C\", \"\\\\u2229\",\n      \"\\\\u222A\", \"\\\\u2286\", \"\\\\u2288\", \"\\\\u228A\", \"\\\\u22c5\", \"\\\\?\", \"~\", \":\",\n      \"\\\\$\", \"\\\\.[<>]\", \"<<=?\", \">>>?=?\", \"\\\\.[<>=]=\", \"->?\", \"\\\\/\\\\/\", \"=>\",\n      \"<:\", \"\\\\bin\\\\b(?!\\\\()\"], \"\");\n  var delimiters = parserConf.delimiters || /^[;,()[\\]{}]/;\n  var identifiers = parserConf.identifiers || /^[_A-Za-z\\u00A1-\\uFFFF][\\w\\u00A1-\\uFFFF]*!*/;\n\n  var chars = wordRegexp([octChar, hexChar, sChar, uChar], \"'\");\n  var openers = wordRegexp([\"begin\", \"function\", \"type\", \"immutable\", \"let\",\n      \"macro\", \"for\", \"while\", \"quote\", \"if\", \"else\", \"elseif\", \"try\",\n      \"finally\", \"catch\", \"do\"]);\n  var closers = wordRegexp([\"end\", \"else\", \"elseif\", \"catch\", \"finally\"]);\n  var keywords = wordRegexp([\"if\", \"else\", \"elseif\", \"while\", \"for\", \"begin\",\n      \"let\", \"end\", \"do\", \"try\", \"catch\", \"finally\", \"return\", \"break\",\n      \"continue\", \"global\", \"local\", \"const\", \"export\", \"import\", \"importall\",\n      \"using\", \"function\", \"macro\", \"module\", \"baremodule\", \"type\",\n      \"immutable\", \"quote\", \"typealias\", \"abstract\", \"bitstype\"]);\n  var builtins = wordRegexp([\"true\", \"false\", \"nothing\", \"NaN\", \"Inf\"]);\n\n  var macro = /^@[_A-Za-z][\\w]*/;\n  var symbol = /^:[_A-Za-z\\u00A1-\\uFFFF][\\w\\u00A1-\\uFFFF]*!*/;\n  var stringPrefixes = /^(`|([_A-Za-z\\u00A1-\\uFFFF]*\"(\"\")?))/;\n\n  function inArray(state) {\n    return inGenerator(state, '[')\n  }\n\n  function inGenerator(state, bracket) {\n    var curr = currentScope(state),\n        prev = currentScope(state, 1);\n    if (typeof(bracket) === \"undefined\") { bracket = '('; }\n    if (curr === bracket || (prev === bracket && curr === \"for\")) {\n      return true;\n    }\n    return false;\n  }\n\n  function currentScope(state, n) {\n    if (typeof(n) === \"undefined\") { n = 0; }\n    if (state.scopes.length <= n) {\n      return null;\n    }\n    return state.scopes[state.scopes.length - (n + 1)];\n  }\n\n  // tokenizers\n  function tokenBase(stream, state) {\n    // Handle multiline comments\n    if (stream.match(/^#=/, false)) {\n      state.tokenize = tokenComment;\n      return state.tokenize(stream, state);\n    }\n\n    // Handle scope changes\n    var leavingExpr = state.leavingExpr;\n    if (stream.sol()) {\n      leavingExpr = false;\n    }\n    state.leavingExpr = false;\n\n    if (leavingExpr) {\n      if (stream.match(/^'+/)) {\n        return \"operator\";\n      }\n    }\n\n    if (stream.match(/^\\.{2,3}/)) {\n      return \"operator\";\n    }\n\n    if (stream.eatSpace()) {\n      return null;\n    }\n\n    var ch = stream.peek();\n\n    // Handle single line comments\n    if (ch === '#') {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    if (ch === '[') {\n      state.scopes.push('[');\n    }\n\n    if (ch === '(') {\n      state.scopes.push('(');\n    }\n\n    var scope = currentScope(state);\n\n    if (inArray(state) && ch === ']') {\n      if (scope === \"for\") { state.scopes.pop(); }\n      state.scopes.pop();\n      state.leavingExpr = true;\n    }\n\n    if (inGenerator(state) && ch === ')') {\n      if (scope === \"for\") { state.scopes.pop(); }\n      state.scopes.pop();\n      state.leavingExpr = true;\n    }\n\n    var match;\n    if (match = stream.match(openers, false)) {\n      state.scopes.push(match[0]);\n    }\n\n    if (stream.match(closers, false)) {\n      state.scopes.pop();\n    }\n\n    if (inArray(state)) {\n      if (state.lastToken == \"end\" && stream.match(/^:/)) {\n        return \"operator\";\n      }\n      if (stream.match(/^end/)) {\n        return \"number\";\n      }\n    }\n\n    // Handle type annotations\n    if (stream.match(/^::(?![:\\$])/)) {\n      state.tokenize = tokenAnnotation;\n      return state.tokenize(stream, state);\n    }\n\n    // Handle symbols\n    if (!leavingExpr && stream.match(symbol) || stream.match(/:\\./)) {\n      return \"builtin\";\n    }\n\n    // Handle parametric types\n    if (stream.match(/^{[^}]*}(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Handle operators and Delimiters\n    if (stream.match(operators)) {\n      return \"operator\";\n    }\n\n    // Handle Number Literals\n    if (stream.match(/^[0-9\\.]/, false)) {\n      var imMatcher = RegExp(/^im\\b/);\n      var numberLiteral = false;\n      // Floats\n      if (stream.match(/^\\d*\\.(?!\\.)\\d*([Eef][\\+\\-]?\\d+)?/i)) { numberLiteral = true; }\n      if (stream.match(/^\\d+\\.(?!\\.)\\d*/)) { numberLiteral = true; }\n      if (stream.match(/^\\.\\d+/)) { numberLiteral = true; }\n      if (stream.match(/^0x\\.[0-9a-f]+p[\\+\\-]?\\d+/i)) { numberLiteral = true; }\n      // Integers\n      if (stream.match(/^0x[0-9a-f]+/i)) { numberLiteral = true; } // Hex\n      if (stream.match(/^0b[01]+/i)) { numberLiteral = true; } // Binary\n      if (stream.match(/^0o[0-7]+/i)) { numberLiteral = true; } // Octal\n      if (stream.match(/^[1-9]\\d*(e[\\+\\-]?\\d+)?/)) { numberLiteral = true; } // Decimal\n      // Zero by itself with no other piece of number.\n      if (stream.match(/^0(?![\\dx])/i)) { numberLiteral = true; }\n      if (numberLiteral) {\n          // Integer literals may be \"long\"\n          stream.match(imMatcher);\n          state.leavingExpr = true;\n          return \"number\";\n      }\n    }\n\n    // Handle Chars\n    if (stream.match(/^'/)) {\n      state.tokenize = tokenChar;\n      return state.tokenize(stream, state);\n    }\n\n    // Handle Strings\n    if (stream.match(stringPrefixes)) {\n      state.tokenize = tokenStringFactory(stream.current());\n      return state.tokenize(stream, state);\n    }\n\n    if (stream.match(macro)) {\n      return \"meta\";\n    }\n\n    if (stream.match(delimiters)) {\n      return null;\n    }\n\n    if (stream.match(keywords)) {\n      return \"keyword\";\n    }\n\n    if (stream.match(builtins)) {\n      return \"builtin\";\n    }\n\n    var isDefinition = state.isDefinition || state.lastToken == \"function\" ||\n                       state.lastToken == \"macro\" || state.lastToken == \"type\" ||\n                       state.lastToken == \"immutable\";\n\n    if (stream.match(identifiers)) {\n      if (isDefinition) {\n        if (stream.peek() === '.') {\n          state.isDefinition = true;\n          return \"variable\";\n        }\n        state.isDefinition = false;\n        return \"def\";\n      }\n      if (stream.match(/^({[^}]*})*\\(/, false)) {\n        return callOrDef(stream, state);\n      }\n      state.leavingExpr = true;\n      return \"variable\";\n    }\n\n    // Handle non-detected items\n    stream.next();\n    return \"error\";\n  }\n\n  function callOrDef(stream, state) {\n    var match = stream.match(/^(\\(\\s*)/);\n    if (match) {\n      if (state.firstParenPos < 0)\n        state.firstParenPos = state.scopes.length;\n      state.scopes.push('(');\n      state.charsAdvanced += match[1].length;\n    }\n    if (currentScope(state) == '(' && stream.match(/^\\)/)) {\n      state.scopes.pop();\n      state.charsAdvanced += 1;\n      if (state.scopes.length <= state.firstParenPos) {\n        var isDefinition = stream.match(/^\\s*?=(?!=)/, false);\n        stream.backUp(state.charsAdvanced);\n        state.firstParenPos = -1;\n        state.charsAdvanced = 0;\n        if (isDefinition)\n          return \"def\";\n        return \"builtin\";\n      }\n    }\n    // Unfortunately javascript does not support multiline strings, so we have\n    // to undo anything done upto here if a function call or definition splits\n    // over two or more lines.\n    if (stream.match(/^$/g, false)) {\n      stream.backUp(state.charsAdvanced);\n      while (state.scopes.length > state.firstParenPos)\n        state.scopes.pop();\n      state.firstParenPos = -1;\n      state.charsAdvanced = 0;\n      return \"builtin\";\n    }\n    state.charsAdvanced += stream.match(/^([^()]*)/)[1].length;\n    return callOrDef(stream, state);\n  }\n\n  function tokenAnnotation(stream, state) {\n    stream.match(/.*?(?=,|;|{|}|\\(|\\)|=|$|\\s)/);\n    if (stream.match(/^{/)) {\n      state.nestedLevels++;\n    } else if (stream.match(/^}/)) {\n      state.nestedLevels--;\n    }\n    if (state.nestedLevels > 0) {\n      stream.match(/.*?(?={|})/) || stream.next();\n    } else if (state.nestedLevels == 0) {\n      state.tokenize = tokenBase;\n    }\n    return \"builtin\";\n  }\n\n  function tokenComment(stream, state) {\n    if (stream.match(/^#=/)) {\n      state.nestedLevels++;\n    }\n    if (!stream.match(/.*?(?=(#=|=#))/)) {\n      stream.skipToEnd();\n    }\n    if (stream.match(/^=#/)) {\n      state.nestedLevels--;\n      if (state.nestedLevels == 0)\n        state.tokenize = tokenBase;\n    }\n    return \"comment\";\n  }\n\n  function tokenChar(stream, state) {\n    var isChar = false, match;\n    if (stream.match(chars)) {\n      isChar = true;\n    } else if (match = stream.match(/\\\\u([a-f0-9]{1,4})(?=')/i)) {\n      var value = parseInt(match[1], 16);\n      if (value <= 55295 || value >= 57344) { // (U+0,U+D7FF), (U+E000,U+FFFF)\n        isChar = true;\n        stream.next();\n      }\n    } else if (match = stream.match(/\\\\U([A-Fa-f0-9]{5,8})(?=')/)) {\n      var value = parseInt(match[1], 16);\n      if (value <= 1114111) { // U+10FFFF\n        isChar = true;\n        stream.next();\n      }\n    }\n    if (isChar) {\n      state.leavingExpr = true;\n      state.tokenize = tokenBase;\n      return \"string\";\n    }\n    if (!stream.match(/^[^']+(?=')/)) { stream.skipToEnd(); }\n    if (stream.match(/^'/)) { state.tokenize = tokenBase; }\n    return \"error\";\n  }\n\n  function tokenStringFactory(delimiter) {\n    if (delimiter.substr(-3) === '\"\"\"') {\n      delimiter = '\"\"\"';\n    } else if (delimiter.substr(-1) === '\"') {\n      delimiter = '\"';\n    }\n    function tokenString(stream, state) {\n      if (stream.eat('\\\\')) {\n        stream.next();\n      } else if (stream.match(delimiter)) {\n        state.tokenize = tokenBase;\n        state.leavingExpr = true;\n        return \"string\";\n      } else {\n        stream.eat(/[`\"]/);\n      }\n      stream.eatWhile(/[^\\\\`\"]/);\n      return \"string\";\n    }\n    return tokenString;\n  }\n\n  var external = {\n    startState: function() {\n      return {\n        tokenize: tokenBase,\n        scopes: [],\n        lastToken: null,\n        leavingExpr: false,\n        isDefinition: false,\n        nestedLevels: 0,\n        charsAdvanced: 0,\n        firstParenPos: -1\n      };\n    },\n\n    token: function(stream, state) {\n      var style = state.tokenize(stream, state);\n      var current = stream.current();\n\n      if (current && style) {\n        state.lastToken = current;\n      }\n\n      // Handle '.' connected identifiers\n      if (current === '.') {\n        style = stream.match(identifiers, false) || stream.match(macro, false) ||\n                stream.match(/\\(/, false) ? \"operator\" : \"error\";\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      var delta = 0;\n      if ( textAfter === ']' || textAfter === ')' || textAfter === \"end\" ||\n           textAfter === \"else\" || textAfter === \"catch\" || textAfter === \"elseif\" ||\n           textAfter === \"finally\" ) {\n        delta = -1;\n      }\n      return (state.scopes.length + delta) * config.indentUnit;\n    },\n\n    electricInput: /\\b(end|else|catch|finally)\\b/,\n    blockCommentStart: \"#=\",\n    blockCommentEnd: \"=#\",\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n  return external;\n});\n\n\nCodeMirror.defineMIME(\"text/x-julia\", \"julia\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Stylus mode created by Dmitry Kiselyov http://git.io/AaRB\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"stylus\", function(config) {\n    var indentUnit = config.indentUnit,\n        indentUnitString = '',\n        tagKeywords = keySet(tagKeywords_),\n        tagVariablesRegexp = /^(a|b|i|s|col|em)$/i,\n        propertyKeywords = keySet(propertyKeywords_),\n        nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_),\n        valueKeywords = keySet(valueKeywords_),\n        colorKeywords = keySet(colorKeywords_),\n        documentTypes = keySet(documentTypes_),\n        documentTypesRegexp = wordRegexp(documentTypes_),\n        mediaFeatures = keySet(mediaFeatures_),\n        mediaTypes = keySet(mediaTypes_),\n        fontProperties = keySet(fontProperties_),\n        operatorsRegexp = /^\\s*([.]{2,3}|&&|\\|\\||\\*\\*|[?!=:]?=|[-+*\\/%<>]=?|\\?:|\\~)/,\n        wordOperatorKeywordsRegexp = wordRegexp(wordOperatorKeywords_),\n        blockKeywords = keySet(blockKeywords_),\n        vendorPrefixesRegexp = new RegExp(/^\\-(moz|ms|o|webkit)-/i),\n        commonAtoms = keySet(commonAtoms_),\n        firstWordMatch = \"\",\n        states = {},\n        ch,\n        style,\n        type,\n        override;\n\n    while (indentUnitString.length < indentUnit) indentUnitString += ' ';\n\n    /**\n     * Tokenizers\n     */\n    function tokenBase(stream, state) {\n      firstWordMatch = stream.string.match(/(^[\\w-]+\\s*=\\s*$)|(^\\s*[\\w-]+\\s*=\\s*[\\w-])|(^\\s*(\\.|#|@|\\$|\\&|\\[|\\d|\\+|::?|\\{|\\>|~|\\/)?\\s*[\\w-]*([a-z0-9-]|\\*|\\/\\*)(\\(|,)?)/);\n      state.context.line.firstWord = firstWordMatch ? firstWordMatch[0].replace(/^\\s*/, \"\") : \"\";\n      state.context.line.indent = stream.indentation();\n      ch = stream.peek();\n\n      // Line comment\n      if (stream.match(\"//\")) {\n        stream.skipToEnd();\n        return [\"comment\", \"comment\"];\n      }\n      // Block comment\n      if (stream.match(\"/*\")) {\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      }\n      // String\n      if (ch == \"\\\"\" || ch == \"'\") {\n        stream.next();\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      }\n      // Def\n      if (ch == \"@\") {\n        stream.next();\n        stream.eatWhile(/[\\w\\\\-]/);\n        return [\"def\", stream.current()];\n      }\n      // ID selector or Hex color\n      if (ch == \"#\") {\n        stream.next();\n        // Hex color\n        if (stream.match(/^[0-9a-f]{6}|[0-9a-f]{3}/i)) {\n          return [\"atom\", \"atom\"];\n        }\n        // ID selector\n        if (stream.match(/^[a-z][\\w-]*/i)) {\n          return [\"builtin\", \"hash\"];\n        }\n      }\n      // Vendor prefixes\n      if (stream.match(vendorPrefixesRegexp)) {\n        return [\"meta\", \"vendor-prefixes\"];\n      }\n      // Numbers\n      if (stream.match(/^-?[0-9]?\\.?[0-9]/)) {\n        stream.eatWhile(/[a-z%]/i);\n        return [\"number\", \"unit\"];\n      }\n      // !important|optional\n      if (ch == \"!\") {\n        stream.next();\n        return [stream.match(/^(important|optional)/i) ? \"keyword\": \"operator\", \"important\"];\n      }\n      // Class\n      if (ch == \".\" && stream.match(/^\\.[a-z][\\w-]*/i)) {\n        return [\"qualifier\", \"qualifier\"];\n      }\n      // url url-prefix domain regexp\n      if (stream.match(documentTypesRegexp)) {\n        if (stream.peek() == \"(\") state.tokenize = tokenParenthesized;\n        return [\"property\", \"word\"];\n      }\n      // Mixins / Functions\n      if (stream.match(/^[a-z][\\w-]*\\(/i)) {\n        stream.backUp(1);\n        return [\"keyword\", \"mixin\"];\n      }\n      // Block mixins\n      if (stream.match(/^(\\+|-)[a-z][\\w-]*\\(/i)) {\n        stream.backUp(1);\n        return [\"keyword\", \"block-mixin\"];\n      }\n      // Parent Reference BEM naming\n      if (stream.string.match(/^\\s*&/) && stream.match(/^[-_]+[a-z][\\w-]*/)) {\n        return [\"qualifier\", \"qualifier\"];\n      }\n      // / Root Reference & Parent Reference\n      if (stream.match(/^(\\/|&)(-|_|:|\\.|#|[a-z])/)) {\n        stream.backUp(1);\n        return [\"variable-3\", \"reference\"];\n      }\n      if (stream.match(/^&{1}\\s*$/)) {\n        return [\"variable-3\", \"reference\"];\n      }\n      // Word operator\n      if (stream.match(wordOperatorKeywordsRegexp)) {\n        return [\"operator\", \"operator\"];\n      }\n      // Word\n      if (stream.match(/^\\$?[-_]*[a-z0-9]+[\\w-]*/i)) {\n        // Variable\n        if (stream.match(/^(\\.|\\[)[\\w-\\'\\\"\\]]+/i, false)) {\n          if (!wordIsTag(stream.current())) {\n            stream.match(/\\./);\n            return [\"variable-2\", \"variable-name\"];\n          }\n        }\n        return [\"variable-2\", \"word\"];\n      }\n      // Operators\n      if (stream.match(operatorsRegexp)) {\n        return [\"operator\", stream.current()];\n      }\n      // Delimiters\n      if (/[:;,{}\\[\\]\\(\\)]/.test(ch)) {\n        stream.next();\n        return [null, ch];\n      }\n      // Non-detected items\n      stream.next();\n      return [null, null];\n    }\n\n    /**\n     * Token comment\n     */\n    function tokenCComment(stream, state) {\n      var maybeEnd = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (maybeEnd && ch == \"/\") {\n          state.tokenize = null;\n          break;\n        }\n        maybeEnd = (ch == \"*\");\n      }\n      return [\"comment\", \"comment\"];\n    }\n\n    /**\n     * Token string\n     */\n    function tokenString(quote) {\n      return function(stream, state) {\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && !escaped) {\n            if (quote == \")\") stream.backUp(1);\n            break;\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n        return [\"string\", \"string\"];\n      };\n    }\n\n    /**\n     * Token parenthesized\n     */\n    function tokenParenthesized(stream, state) {\n      stream.next(); // Must be \"(\"\n      if (!stream.match(/\\s*[\\\"\\')]/, false))\n        state.tokenize = tokenString(\")\");\n      else\n        state.tokenize = null;\n      return [null, \"(\"];\n    }\n\n    /**\n     * Context management\n     */\n    function Context(type, indent, prev, line) {\n      this.type = type;\n      this.indent = indent;\n      this.prev = prev;\n      this.line = line || {firstWord: \"\", indent: 0};\n    }\n\n    function pushContext(state, stream, type, indent) {\n      indent = indent >= 0 ? indent : indentUnit;\n      state.context = new Context(type, stream.indentation() + indent, state.context);\n      return type;\n    }\n\n    function popContext(state, currentIndent) {\n      var contextIndent = state.context.indent - indentUnit;\n      currentIndent = currentIndent || false;\n      state.context = state.context.prev;\n      if (currentIndent) state.context.indent = contextIndent;\n      return state.context.type;\n    }\n\n    function pass(type, stream, state) {\n      return states[state.context.type](type, stream, state);\n    }\n\n    function popAndPass(type, stream, state, n) {\n      for (var i = n || 1; i > 0; i--)\n        state.context = state.context.prev;\n      return pass(type, stream, state);\n    }\n\n\n    /**\n     * Parser\n     */\n    function wordIsTag(word) {\n      return word.toLowerCase() in tagKeywords;\n    }\n\n    function wordIsProperty(word) {\n      word = word.toLowerCase();\n      return word in propertyKeywords || word in fontProperties;\n    }\n\n    function wordIsBlock(word) {\n      return word.toLowerCase() in blockKeywords;\n    }\n\n    function wordIsVendorPrefix(word) {\n      return word.toLowerCase().match(vendorPrefixesRegexp);\n    }\n\n    function wordAsValue(word) {\n      var wordLC = word.toLowerCase();\n      var override = \"variable-2\";\n      if (wordIsTag(word)) override = \"tag\";\n      else if (wordIsBlock(word)) override = \"block-keyword\";\n      else if (wordIsProperty(word)) override = \"property\";\n      else if (wordLC in valueKeywords || wordLC in commonAtoms) override = \"atom\";\n      else if (wordLC == \"return\" || wordLC in colorKeywords) override = \"keyword\";\n\n      // Font family\n      else if (word.match(/^[A-Z]/)) override = \"string\";\n      return override;\n    }\n\n    function typeIsBlock(type, stream) {\n      return ((endOfLine(stream) && (type == \"{\" || type == \"]\" || type == \"hash\" || type == \"qualifier\")) || type == \"block-mixin\");\n    }\n\n    function typeIsInterpolation(type, stream) {\n      return type == \"{\" && stream.match(/^\\s*\\$?[\\w-]+/i, false);\n    }\n\n    function typeIsPseudo(type, stream) {\n      return type == \":\" && stream.match(/^[a-z-]+/, false);\n    }\n\n    function startOfLine(stream) {\n      return stream.sol() || stream.string.match(new RegExp(\"^\\\\s*\" + escapeRegExp(stream.current())));\n    }\n\n    function endOfLine(stream) {\n      return stream.eol() || stream.match(/^\\s*$/, false);\n    }\n\n    function firstWordOfLine(line) {\n      var re = /^\\s*[-_]*[a-z0-9]+[\\w-]*/i;\n      var result = typeof line == \"string\" ? line.match(re) : line.string.match(re);\n      return result ? result[0].replace(/^\\s*/, \"\") : \"\";\n    }\n\n\n    /**\n     * Block\n     */\n    states.block = function(type, stream, state) {\n      if ((type == \"comment\" && startOfLine(stream)) ||\n          (type == \",\" && endOfLine(stream)) ||\n          type == \"mixin\") {\n        return pushContext(state, stream, \"block\", 0);\n      }\n      if (typeIsInterpolation(type, stream)) {\n        return pushContext(state, stream, \"interpolation\");\n      }\n      if (endOfLine(stream) && type == \"]\") {\n        if (!/^\\s*(\\.|#|:|\\[|\\*|&)/.test(stream.string) && !wordIsTag(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n      }\n      if (typeIsBlock(type, stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"}\" && endOfLine(stream)) {\n        return pushContext(state, stream, \"block\", 0);\n      }\n      if (type == \"variable-name\") {\n        if (stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/) || wordIsBlock(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"variableName\");\n        }\n        else {\n          return pushContext(state, stream, \"variableName\", 0);\n        }\n      }\n      if (type == \"=\") {\n        if (!endOfLine(stream) && !wordIsBlock(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"*\") {\n        if (endOfLine(stream) || stream.match(/\\s*(,|\\.|#|\\[|:|{)/,false)) {\n          override = \"tag\";\n          return pushContext(state, stream, \"block\");\n        }\n      }\n      if (typeIsPseudo(type, stream)) {\n        return pushContext(state, stream, \"pseudo\");\n      }\n      if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n        return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n      }\n      if (/@(-(moz|ms|o|webkit)-)?keyframes$/.test(type)) {\n        return pushContext(state, stream, \"keyframes\");\n      }\n      if (/@extends?/.test(type)) {\n        return pushContext(state, stream, \"extend\", 0);\n      }\n      if (type && type.charAt(0) == \"@\") {\n\n        // Property Lookup\n        if (stream.indentation() > 0 && wordIsProperty(stream.current().slice(1))) {\n          override = \"variable-2\";\n          return \"block\";\n        }\n        if (/(@import|@require|@charset)/.test(type)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"reference\" && endOfLine(stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"(\") {\n        return pushContext(state, stream, \"parens\");\n      }\n\n      if (type == \"vendor-prefixes\") {\n        return pushContext(state, stream, \"vendorPrefixes\");\n      }\n      if (type == \"word\") {\n        var word = stream.current();\n        override = wordAsValue(word);\n\n        if (override == \"property\") {\n          if (startOfLine(stream)) {\n            return pushContext(state, stream, \"block\", 0);\n          } else {\n            override = \"atom\";\n            return \"block\";\n          }\n        }\n\n        if (override == \"tag\") {\n\n          // tag is a css value\n          if (/embed|menu|pre|progress|sub|table/.test(word)) {\n            if (wordIsProperty(firstWordOfLine(stream))) {\n              override = \"atom\";\n              return \"block\";\n            }\n          }\n\n          // tag is an attribute\n          if (stream.string.match(new RegExp(\"\\\\[\\\\s*\" + word + \"|\" + word +\"\\\\s*\\\\]\"))) {\n            override = \"atom\";\n            return \"block\";\n          }\n\n          // tag is a variable\n          if (tagVariablesRegexp.test(word)) {\n            if ((startOfLine(stream) && stream.string.match(/=/)) ||\n                (!startOfLine(stream) &&\n                 !stream.string.match(/^(\\s*\\.|#|\\&|\\[|\\/|>|\\*)/) &&\n                 !wordIsTag(firstWordOfLine(stream)))) {\n              override = \"variable-2\";\n              if (wordIsBlock(firstWordOfLine(stream)))  return \"block\";\n              return pushContext(state, stream, \"block\", 0);\n            }\n          }\n\n          if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        }\n        if (override == \"block-keyword\") {\n          override = \"keyword\";\n\n          // Postfix conditionals\n          if (stream.current(/(if|unless)/) && !startOfLine(stream)) {\n            return \"block\";\n          }\n          return pushContext(state, stream, \"block\");\n        }\n        if (word == \"return\") return pushContext(state, stream, \"block\", 0);\n\n        // Placeholder selector\n        if (override == \"variable-2\" && stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/)) {\n          return pushContext(state, stream, \"block\");\n        }\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Parens\n     */\n    states.parens = function(type, stream, state) {\n      if (type == \"(\") return pushContext(state, stream, \"parens\");\n      if (type == \")\") {\n        if (state.context.prev.type == \"parens\") {\n          return popContext(state);\n        }\n        if ((stream.string.match(/^[a-z][\\w-]*\\(/i) && endOfLine(stream)) ||\n            wordIsBlock(firstWordOfLine(stream)) ||\n            /(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(firstWordOfLine(stream)) ||\n            (!stream.string.match(/^-?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) &&\n             wordIsTag(firstWordOfLine(stream)))) {\n          return pushContext(state, stream, \"block\");\n        }\n        if (stream.string.match(/^[\\$-]?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) ||\n            stream.string.match(/^\\s*(\\(|\\)|[0-9])/) ||\n            stream.string.match(/^\\s+[a-z][\\w-]*\\(/i) ||\n            stream.string.match(/^\\s+[\\$-]?[a-z]/i)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        else return pushContext(state, stream, \"block\", 0);\n      }\n      if (type && type.charAt(0) == \"@\" && wordIsProperty(stream.current().slice(1))) {\n        override = \"variable-2\";\n      }\n      if (type == \"word\") {\n        var word = stream.current();\n        override = wordAsValue(word);\n        if (override == \"tag\" && tagVariablesRegexp.test(word)) {\n          override = \"variable-2\";\n        }\n        if (override == \"property\" || word == \"to\") override = \"atom\";\n      }\n      if (type == \"variable-name\") {\n        return pushContext(state, stream, \"variableName\");\n      }\n      if (typeIsPseudo(type, stream)) {\n        return pushContext(state, stream, \"pseudo\");\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Vendor prefixes\n     */\n    states.vendorPrefixes = function(type, stream, state) {\n      if (type == \"word\") {\n        override = \"property\";\n        return pushContext(state, stream, \"block\", 0);\n      }\n      return popContext(state);\n    };\n\n\n    /**\n     * Pseudo\n     */\n    states.pseudo = function(type, stream, state) {\n      if (!wordIsProperty(firstWordOfLine(stream.string))) {\n        stream.match(/^[a-z-]+/);\n        override = \"variable-3\";\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        return popContext(state);\n      }\n      return popAndPass(type, stream, state);\n    };\n\n\n    /**\n     * atBlock\n     */\n    states.atBlock = function(type, stream, state) {\n      if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\n      if (typeIsBlock(type, stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n      if (typeIsInterpolation(type, stream)) {\n        return pushContext(state, stream, \"interpolation\");\n      }\n      if (type == \"word\") {\n        var word = stream.current().toLowerCase();\n        if (/^(only|not|and|or)$/.test(word))\n          override = \"keyword\";\n        else if (documentTypes.hasOwnProperty(word))\n          override = \"tag\";\n        else if (mediaTypes.hasOwnProperty(word))\n          override = \"attribute\";\n        else if (mediaFeatures.hasOwnProperty(word))\n          override = \"property\";\n        else if (nonStandardPropertyKeywords.hasOwnProperty(word))\n          override = \"string-2\";\n        else override = wordAsValue(stream.current());\n        if (override == \"tag\" && endOfLine(stream)) {\n          return pushContext(state, stream, \"block\");\n        }\n      }\n      if (type == \"operator\" && /^(not|and|or)$/.test(stream.current())) {\n        override = \"keyword\";\n      }\n      return state.context.type;\n    };\n\n    states.atBlock_parens = function(type, stream, state) {\n      if (type == \"{\" || type == \"}\") return state.context.type;\n      if (type == \")\") {\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        else return pushContext(state, stream, \"atBlock\");\n      }\n      if (type == \"word\") {\n        var word = stream.current().toLowerCase();\n        override = wordAsValue(word);\n        if (/^(max|min)/.test(word)) override = \"property\";\n        if (override == \"tag\") {\n          tagVariablesRegexp.test(word) ? override = \"variable-2\" : override = \"atom\";\n        }\n        return state.context.type;\n      }\n      return states.atBlock(type, stream, state);\n    };\n\n\n    /**\n     * Keyframes\n     */\n    states.keyframes = function(type, stream, state) {\n      if (stream.indentation() == \"0\" && ((type == \"}\" && startOfLine(stream)) || type == \"]\" || type == \"hash\"\n                                          || type == \"qualifier\" || wordIsTag(stream.current()))) {\n        return popAndPass(type, stream, state);\n      }\n      if (type == \"{\") return pushContext(state, stream, \"keyframes\");\n      if (type == \"}\") {\n        if (startOfLine(stream)) return popContext(state, true);\n        else return pushContext(state, stream, \"keyframes\");\n      }\n      if (type == \"unit\" && /^[0-9]+\\%$/.test(stream.current())) {\n        return pushContext(state, stream, \"keyframes\");\n      }\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        if (override == \"block-keyword\") {\n          override = \"keyword\";\n          return pushContext(state, stream, \"keyframes\");\n        }\n      }\n      if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n        return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n      }\n      if (type == \"mixin\") {\n        return pushContext(state, stream, \"block\", 0);\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Interpolation\n     */\n    states.interpolation = function(type, stream, state) {\n      if (type == \"{\") popContext(state) && pushContext(state, stream, \"block\");\n      if (type == \"}\") {\n        if (stream.string.match(/^\\s*(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/i) ||\n            (stream.string.match(/^\\s*[a-z]/i) && wordIsTag(firstWordOfLine(stream)))) {\n          return pushContext(state, stream, \"block\");\n        }\n        if (!stream.string.match(/^(\\{|\\s*\\&)/) ||\n            stream.match(/\\s*[\\w-]/,false)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"variable-name\") {\n        return pushContext(state, stream, \"variableName\", 0);\n      }\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        if (override == \"tag\") override = \"atom\";\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Extend/s\n     */\n    states.extend = function(type, stream, state) {\n      if (type == \"[\" || type == \"=\") return \"extend\";\n      if (type == \"]\") return popContext(state);\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        return \"extend\";\n      }\n      return popContext(state);\n    };\n\n\n    /**\n     * Variable name\n     */\n    states.variableName = function(type, stream, state) {\n      if (type == \"string\" || type == \"[\" || type == \"]\" || stream.current().match(/^(\\.|\\$)/)) {\n        if (stream.current().match(/^\\.[\\w-]+/i)) override = \"variable-2\";\n        return \"variableName\";\n      }\n      return popAndPass(type, stream, state);\n    };\n\n\n    return {\n      startState: function(base) {\n        return {\n          tokenize: null,\n          state: \"block\",\n          context: new Context(\"block\", base || 0, null)\n        };\n      },\n      token: function(stream, state) {\n        if (!state.tokenize && stream.eatSpace()) return null;\n        style = (state.tokenize || tokenBase)(stream, state);\n        if (style && typeof style == \"object\") {\n          type = style[1];\n          style = style[0];\n        }\n        override = style;\n        state.state = states[state.state](type, stream, state);\n        return override;\n      },\n      indent: function(state, textAfter, line) {\n\n        var cx = state.context,\n            ch = textAfter && textAfter.charAt(0),\n            indent = cx.indent,\n            lineFirstWord = firstWordOfLine(textAfter),\n            lineIndent = line.match(/^\\s*/)[0].replace(/\\t/g, indentUnitString).length,\n            prevLineFirstWord = state.context.prev ? state.context.prev.line.firstWord : \"\",\n            prevLineIndent = state.context.prev ? state.context.prev.line.indent : lineIndent;\n\n        if (cx.prev &&\n            (ch == \"}\" && (cx.type == \"block\" || cx.type == \"atBlock\" || cx.type == \"keyframes\") ||\n             ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") ||\n             ch == \"{\" && (cx.type == \"at\"))) {\n          indent = cx.indent - indentUnit;\n        } else if (!(/(\\})/.test(ch))) {\n          if (/@|\\$|\\d/.test(ch) ||\n              /^\\{/.test(textAfter) ||\n/^\\s*\\/(\\/|\\*)/.test(textAfter) ||\n              /^\\s*\\/\\*/.test(prevLineFirstWord) ||\n              /^\\s*[\\w-\\.\\[\\]\\'\\\"]+\\s*(\\?|:|\\+)?=/i.test(textAfter) ||\n/^(\\+|-)?[a-z][\\w-]*\\(/i.test(textAfter) ||\n/^return/.test(textAfter) ||\n              wordIsBlock(lineFirstWord)) {\n            indent = lineIndent;\n          } else if (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(ch) || wordIsTag(lineFirstWord)) {\n            if (/\\,\\s*$/.test(prevLineFirstWord)) {\n              indent = prevLineIndent;\n            } else if (/^\\s+/.test(line) && (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(prevLineFirstWord) || wordIsTag(prevLineFirstWord))) {\n              indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + indentUnit;\n            } else {\n              indent = lineIndent;\n            }\n          } else if (!/,\\s*$/.test(line) && (wordIsVendorPrefix(lineFirstWord) || wordIsProperty(lineFirstWord))) {\n            if (wordIsBlock(prevLineFirstWord)) {\n              indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + indentUnit;\n            } else if (/^\\{/.test(prevLineFirstWord)) {\n              indent = lineIndent <= prevLineIndent ? lineIndent : prevLineIndent + indentUnit;\n            } else if (wordIsVendorPrefix(prevLineFirstWord) || wordIsProperty(prevLineFirstWord)) {\n              indent = lineIndent >= prevLineIndent ? prevLineIndent : lineIndent;\n            } else if (/^(\\.|#|:|\\[|\\*|&|@|\\+|\\-|>|~|\\/)/.test(prevLineFirstWord) ||\n                      /=\\s*$/.test(prevLineFirstWord) ||\n                      wordIsTag(prevLineFirstWord) ||\n                      /^\\$[\\w-\\.\\[\\]\\'\\\"]/.test(prevLineFirstWord)) {\n              indent = prevLineIndent + indentUnit;\n            } else {\n              indent = lineIndent;\n            }\n          }\n        }\n        return indent;\n      },\n      electricChars: \"}\",\n      lineComment: \"//\",\n      fold: \"indent\"\n    };\n  });\n\n  // developer.mozilla.org/en-US/docs/Web/HTML/Element\n  var tagKeywords_ = [\"a\",\"abbr\",\"address\",\"area\",\"article\",\"aside\",\"audio\", \"b\", \"base\",\"bdi\", \"bdo\",\"bgsound\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"cite\", \"code\",\"col\",\"colgroup\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"div\", \"dl\",\"dt\",\"em\",\"embed\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\", \"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"iframe\", \"img\",\"input\",\"ins\",\"kbd\",\"keygen\",\"label\",\"legend\",\"li\",\"link\",\"main\",\"map\", \"mark\",\"marquee\",\"menu\",\"menuitem\",\"meta\",\"meter\",\"nav\",\"nobr\",\"noframes\", \"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"param\",\"pre\", \"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\", \"small\",\"source\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"tr\",\"track\", \"u\",\"ul\",\"var\",\"video\"];\n\n  // github.com/codemirror/CodeMirror/blob/master/mode/css/css.js\n  var documentTypes_ = [\"domain\", \"regexp\", \"url\", \"url-prefix\"];\n  var mediaTypes_ = [\"all\",\"aural\",\"braille\",\"handheld\",\"print\",\"projection\",\"screen\",\"tty\",\"tv\",\"embossed\"];\n  var mediaFeatures_ = [\"width\",\"min-width\",\"max-width\",\"height\",\"min-height\",\"max-height\",\"device-width\",\"min-device-width\",\"max-device-width\",\"device-height\",\"min-device-height\",\"max-device-height\",\"aspect-ratio\",\"min-aspect-ratio\",\"max-aspect-ratio\",\"device-aspect-ratio\",\"min-device-aspect-ratio\",\"max-device-aspect-ratio\",\"color\",\"min-color\",\"max-color\",\"color-index\",\"min-color-index\",\"max-color-index\",\"monochrome\",\"min-monochrome\",\"max-monochrome\",\"resolution\",\"min-resolution\",\"max-resolution\",\"scan\",\"grid\"];\n  var propertyKeywords_ = [\"align-content\",\"align-items\",\"align-self\",\"alignment-adjust\",\"alignment-baseline\",\"anchor-point\",\"animation\",\"animation-delay\",\"animation-direction\",\"animation-duration\",\"animation-fill-mode\",\"animation-iteration-count\",\"animation-name\",\"animation-play-state\",\"animation-timing-function\",\"appearance\",\"azimuth\",\"backface-visibility\",\"background\",\"background-attachment\",\"background-clip\",\"background-color\",\"background-image\",\"background-origin\",\"background-position\",\"background-repeat\",\"background-size\",\"baseline-shift\",\"binding\",\"bleed\",\"bookmark-label\",\"bookmark-level\",\"bookmark-state\",\"bookmark-target\",\"border\",\"border-bottom\",\"border-bottom-color\",\"border-bottom-left-radius\",\"border-bottom-right-radius\",\"border-bottom-style\",\"border-bottom-width\",\"border-collapse\",\"border-color\",\"border-image\",\"border-image-outset\",\"border-image-repeat\",\"border-image-slice\",\"border-image-source\",\"border-image-width\",\"border-left\",\"border-left-color\",\"border-left-style\",\"border-left-width\",\"border-radius\",\"border-right\",\"border-right-color\",\"border-right-style\",\"border-right-width\",\"border-spacing\",\"border-style\",\"border-top\",\"border-top-color\",\"border-top-left-radius\",\"border-top-right-radius\",\"border-top-style\",\"border-top-width\",\"border-width\",\"bottom\",\"box-decoration-break\",\"box-shadow\",\"box-sizing\",\"break-after\",\"break-before\",\"break-inside\",\"caption-side\",\"clear\",\"clip\",\"color\",\"color-profile\",\"column-count\",\"column-fill\",\"column-gap\",\"column-rule\",\"column-rule-color\",\"column-rule-style\",\"column-rule-width\",\"column-span\",\"column-width\",\"columns\",\"content\",\"counter-increment\",\"counter-reset\",\"crop\",\"cue\",\"cue-after\",\"cue-before\",\"cursor\",\"direction\",\"display\",\"dominant-baseline\",\"drop-initial-after-adjust\",\"drop-initial-after-align\",\"drop-initial-before-adjust\",\"drop-initial-before-align\",\"drop-initial-size\",\"drop-initial-value\",\"elevation\",\"empty-cells\",\"fit\",\"fit-position\",\"flex\",\"flex-basis\",\"flex-direction\",\"flex-flow\",\"flex-grow\",\"flex-shrink\",\"flex-wrap\",\"float\",\"float-offset\",\"flow-from\",\"flow-into\",\"font\",\"font-feature-settings\",\"font-family\",\"font-kerning\",\"font-language-override\",\"font-size\",\"font-size-adjust\",\"font-stretch\",\"font-style\",\"font-synthesis\",\"font-variant\",\"font-variant-alternates\",\"font-variant-caps\",\"font-variant-east-asian\",\"font-variant-ligatures\",\"font-variant-numeric\",\"font-variant-position\",\"font-weight\",\"grid\",\"grid-area\",\"grid-auto-columns\",\"grid-auto-flow\",\"grid-auto-position\",\"grid-auto-rows\",\"grid-column\",\"grid-column-end\",\"grid-column-start\",\"grid-row\",\"grid-row-end\",\"grid-row-start\",\"grid-template\",\"grid-template-areas\",\"grid-template-columns\",\"grid-template-rows\",\"hanging-punctuation\",\"height\",\"hyphens\",\"icon\",\"image-orientation\",\"image-rendering\",\"image-resolution\",\"inline-box-align\",\"justify-content\",\"left\",\"letter-spacing\",\"line-break\",\"line-height\",\"line-stacking\",\"line-stacking-ruby\",\"line-stacking-shift\",\"line-stacking-strategy\",\"list-style\",\"list-style-image\",\"list-style-position\",\"list-style-type\",\"margin\",\"margin-bottom\",\"margin-left\",\"margin-right\",\"margin-top\",\"marker-offset\",\"marks\",\"marquee-direction\",\"marquee-loop\",\"marquee-play-count\",\"marquee-speed\",\"marquee-style\",\"max-height\",\"max-width\",\"min-height\",\"min-width\",\"move-to\",\"nav-down\",\"nav-index\",\"nav-left\",\"nav-right\",\"nav-up\",\"object-fit\",\"object-position\",\"opacity\",\"order\",\"orphans\",\"outline\",\"outline-color\",\"outline-offset\",\"outline-style\",\"outline-width\",\"overflow\",\"overflow-style\",\"overflow-wrap\",\"overflow-x\",\"overflow-y\",\"padding\",\"padding-bottom\",\"padding-left\",\"padding-right\",\"padding-top\",\"page\",\"page-break-after\",\"page-break-before\",\"page-break-inside\",\"page-policy\",\"pause\",\"pause-after\",\"pause-before\",\"perspective\",\"perspective-origin\",\"pitch\",\"pitch-range\",\"play-during\",\"position\",\"presentation-level\",\"punctuation-trim\",\"quotes\",\"region-break-after\",\"region-break-before\",\"region-break-inside\",\"region-fragment\",\"rendering-intent\",\"resize\",\"rest\",\"rest-after\",\"rest-before\",\"richness\",\"right\",\"rotation\",\"rotation-point\",\"ruby-align\",\"ruby-overhang\",\"ruby-position\",\"ruby-span\",\"shape-image-threshold\",\"shape-inside\",\"shape-margin\",\"shape-outside\",\"size\",\"speak\",\"speak-as\",\"speak-header\",\"speak-numeral\",\"speak-punctuation\",\"speech-rate\",\"stress\",\"string-set\",\"tab-size\",\"table-layout\",\"target\",\"target-name\",\"target-new\",\"target-position\",\"text-align\",\"text-align-last\",\"text-decoration\",\"text-decoration-color\",\"text-decoration-line\",\"text-decoration-skip\",\"text-decoration-style\",\"text-emphasis\",\"text-emphasis-color\",\"text-emphasis-position\",\"text-emphasis-style\",\"text-height\",\"text-indent\",\"text-justify\",\"text-outline\",\"text-overflow\",\"text-shadow\",\"text-size-adjust\",\"text-space-collapse\",\"text-transform\",\"text-underline-position\",\"text-wrap\",\"top\",\"transform\",\"transform-origin\",\"transform-style\",\"transition\",\"transition-delay\",\"transition-duration\",\"transition-property\",\"transition-timing-function\",\"unicode-bidi\",\"vertical-align\",\"visibility\",\"voice-balance\",\"voice-duration\",\"voice-family\",\"voice-pitch\",\"voice-range\",\"voice-rate\",\"voice-stress\",\"voice-volume\",\"volume\",\"white-space\",\"widows\",\"width\",\"will-change\",\"word-break\",\"word-spacing\",\"word-wrap\",\"z-index\",\"clip-path\",\"clip-rule\",\"mask\",\"enable-background\",\"filter\",\"flood-color\",\"flood-opacity\",\"lighting-color\",\"stop-color\",\"stop-opacity\",\"pointer-events\",\"color-interpolation\",\"color-interpolation-filters\",\"color-rendering\",\"fill\",\"fill-opacity\",\"fill-rule\",\"image-rendering\",\"marker\",\"marker-end\",\"marker-mid\",\"marker-start\",\"shape-rendering\",\"stroke\",\"stroke-dasharray\",\"stroke-dashoffset\",\"stroke-linecap\",\"stroke-linejoin\",\"stroke-miterlimit\",\"stroke-opacity\",\"stroke-width\",\"text-rendering\",\"baseline-shift\",\"dominant-baseline\",\"glyph-orientation-horizontal\",\"glyph-orientation-vertical\",\"text-anchor\",\"writing-mode\",\"font-smoothing\",\"osx-font-smoothing\"];\n  var nonStandardPropertyKeywords_ = [\"scrollbar-arrow-color\",\"scrollbar-base-color\",\"scrollbar-dark-shadow-color\",\"scrollbar-face-color\",\"scrollbar-highlight-color\",\"scrollbar-shadow-color\",\"scrollbar-3d-light-color\",\"scrollbar-track-color\",\"shape-inside\",\"searchfield-cancel-button\",\"searchfield-decoration\",\"searchfield-results-button\",\"searchfield-results-decoration\",\"zoom\"];\n  var fontProperties_ = [\"font-family\",\"src\",\"unicode-range\",\"font-variant\",\"font-feature-settings\",\"font-stretch\",\"font-weight\",\"font-style\"];\n  var colorKeywords_ = [\"aliceblue\",\"antiquewhite\",\"aqua\",\"aquamarine\",\"azure\",\"beige\",\"bisque\",\"black\",\"blanchedalmond\",\"blue\",\"blueviolet\",\"brown\",\"burlywood\",\"cadetblue\",\"chartreuse\",\"chocolate\",\"coral\",\"cornflowerblue\",\"cornsilk\",\"crimson\",\"cyan\",\"darkblue\",\"darkcyan\",\"darkgoldenrod\",\"darkgray\",\"darkgreen\",\"darkkhaki\",\"darkmagenta\",\"darkolivegreen\",\"darkorange\",\"darkorchid\",\"darkred\",\"darksalmon\",\"darkseagreen\",\"darkslateblue\",\"darkslategray\",\"darkturquoise\",\"darkviolet\",\"deeppink\",\"deepskyblue\",\"dimgray\",\"dodgerblue\",\"firebrick\",\"floralwhite\",\"forestgreen\",\"fuchsia\",\"gainsboro\",\"ghostwhite\",\"gold\",\"goldenrod\",\"gray\",\"grey\",\"green\",\"greenyellow\",\"honeydew\",\"hotpink\",\"indianred\",\"indigo\",\"ivory\",\"khaki\",\"lavender\",\"lavenderblush\",\"lawngreen\",\"lemonchiffon\",\"lightblue\",\"lightcoral\",\"lightcyan\",\"lightgoldenrodyellow\",\"lightgray\",\"lightgreen\",\"lightpink\",\"lightsalmon\",\"lightseagreen\",\"lightskyblue\",\"lightslategray\",\"lightsteelblue\",\"lightyellow\",\"lime\",\"limegreen\",\"linen\",\"magenta\",\"maroon\",\"mediumaquamarine\",\"mediumblue\",\"mediumorchid\",\"mediumpurple\",\"mediumseagreen\",\"mediumslateblue\",\"mediumspringgreen\",\"mediumturquoise\",\"mediumvioletred\",\"midnightblue\",\"mintcream\",\"mistyrose\",\"moccasin\",\"navajowhite\",\"navy\",\"oldlace\",\"olive\",\"olivedrab\",\"orange\",\"orangered\",\"orchid\",\"palegoldenrod\",\"palegreen\",\"paleturquoise\",\"palevioletred\",\"papayawhip\",\"peachpuff\",\"peru\",\"pink\",\"plum\",\"powderblue\",\"purple\",\"rebeccapurple\",\"red\",\"rosybrown\",\"royalblue\",\"saddlebrown\",\"salmon\",\"sandybrown\",\"seagreen\",\"seashell\",\"sienna\",\"silver\",\"skyblue\",\"slateblue\",\"slategray\",\"snow\",\"springgreen\",\"steelblue\",\"tan\",\"teal\",\"thistle\",\"tomato\",\"turquoise\",\"violet\",\"wheat\",\"white\",\"whitesmoke\",\"yellow\",\"yellowgreen\"];\n  var valueKeywords_ = [\"above\",\"absolute\",\"activeborder\",\"additive\",\"activecaption\",\"afar\",\"after-white-space\",\"ahead\",\"alias\",\"all\",\"all-scroll\",\"alphabetic\",\"alternate\",\"always\",\"amharic\",\"amharic-abegede\",\"antialiased\",\"appworkspace\",\"arabic-indic\",\"armenian\",\"asterisks\",\"attr\",\"auto\",\"avoid\",\"avoid-column\",\"avoid-page\",\"avoid-region\",\"background\",\"backwards\",\"baseline\",\"below\",\"bidi-override\",\"binary\",\"bengali\",\"blink\",\"block\",\"block-axis\",\"bold\",\"bolder\",\"border\",\"border-box\",\"both\",\"bottom\",\"break\",\"break-all\",\"break-word\",\"bullets\",\"button\",\"button-bevel\",\"buttonface\",\"buttonhighlight\",\"buttonshadow\",\"buttontext\",\"calc\",\"cambodian\",\"capitalize\",\"caps-lock-indicator\",\"caption\",\"captiontext\",\"caret\",\"cell\",\"center\",\"checkbox\",\"circle\",\"cjk-decimal\",\"cjk-earthly-branch\",\"cjk-heavenly-stem\",\"cjk-ideographic\",\"clear\",\"clip\",\"close-quote\",\"col-resize\",\"collapse\",\"column\",\"compact\",\"condensed\",\"contain\",\"content\",\"contents\",\"content-box\",\"context-menu\",\"continuous\",\"copy\",\"counter\",\"counters\",\"cover\",\"crop\",\"cross\",\"crosshair\",\"currentcolor\",\"cursive\",\"cyclic\",\"dashed\",\"decimal\",\"decimal-leading-zero\",\"default\",\"default-button\",\"destination-atop\",\"destination-in\",\"destination-out\",\"destination-over\",\"devanagari\",\"disc\",\"discard\",\"disclosure-closed\",\"disclosure-open\",\"document\",\"dot-dash\",\"dot-dot-dash\",\"dotted\",\"double\",\"down\",\"e-resize\",\"ease\",\"ease-in\",\"ease-in-out\",\"ease-out\",\"element\",\"ellipse\",\"ellipsis\",\"embed\",\"end\",\"ethiopic\",\"ethiopic-abegede\",\"ethiopic-abegede-am-et\",\"ethiopic-abegede-gez\",\"ethiopic-abegede-ti-er\",\"ethiopic-abegede-ti-et\",\"ethiopic-halehame-aa-er\",\"ethiopic-halehame-aa-et\",\"ethiopic-halehame-am-et\",\"ethiopic-halehame-gez\",\"ethiopic-halehame-om-et\",\"ethiopic-halehame-sid-et\",\"ethiopic-halehame-so-et\",\"ethiopic-halehame-ti-er\",\"ethiopic-halehame-ti-et\",\"ethiopic-halehame-tig\",\"ethiopic-numeric\",\"ew-resize\",\"expanded\",\"extends\",\"extra-condensed\",\"extra-expanded\",\"fantasy\",\"fast\",\"fill\",\"fixed\",\"flat\",\"flex\",\"footnotes\",\"forwards\",\"from\",\"geometricPrecision\",\"georgian\",\"graytext\",\"groove\",\"gujarati\",\"gurmukhi\",\"hand\",\"hangul\",\"hangul-consonant\",\"hebrew\",\"help\",\"hidden\",\"hide\",\"higher\",\"highlight\",\"highlighttext\",\"hiragana\",\"hiragana-iroha\",\"horizontal\",\"hsl\",\"hsla\",\"icon\",\"ignore\",\"inactiveborder\",\"inactivecaption\",\"inactivecaptiontext\",\"infinite\",\"infobackground\",\"infotext\",\"inherit\",\"initial\",\"inline\",\"inline-axis\",\"inline-block\",\"inline-flex\",\"inline-table\",\"inset\",\"inside\",\"intrinsic\",\"invert\",\"italic\",\"japanese-formal\",\"japanese-informal\",\"justify\",\"kannada\",\"katakana\",\"katakana-iroha\",\"keep-all\",\"khmer\",\"korean-hangul-formal\",\"korean-hanja-formal\",\"korean-hanja-informal\",\"landscape\",\"lao\",\"large\",\"larger\",\"left\",\"level\",\"lighter\",\"line-through\",\"linear\",\"linear-gradient\",\"lines\",\"list-item\",\"listbox\",\"listitem\",\"local\",\"logical\",\"loud\",\"lower\",\"lower-alpha\",\"lower-armenian\",\"lower-greek\",\"lower-hexadecimal\",\"lower-latin\",\"lower-norwegian\",\"lower-roman\",\"lowercase\",\"ltr\",\"malayalam\",\"match\",\"matrix\",\"matrix3d\",\"media-controls-background\",\"media-current-time-display\",\"media-fullscreen-button\",\"media-mute-button\",\"media-play-button\",\"media-return-to-realtime-button\",\"media-rewind-button\",\"media-seek-back-button\",\"media-seek-forward-button\",\"media-slider\",\"media-sliderthumb\",\"media-time-remaining-display\",\"media-volume-slider\",\"media-volume-slider-container\",\"media-volume-sliderthumb\",\"medium\",\"menu\",\"menulist\",\"menulist-button\",\"menulist-text\",\"menulist-textfield\",\"menutext\",\"message-box\",\"middle\",\"min-intrinsic\",\"mix\",\"mongolian\",\"monospace\",\"move\",\"multiple\",\"myanmar\",\"n-resize\",\"narrower\",\"ne-resize\",\"nesw-resize\",\"no-close-quote\",\"no-drop\",\"no-open-quote\",\"no-repeat\",\"none\",\"normal\",\"not-allowed\",\"nowrap\",\"ns-resize\",\"numbers\",\"numeric\",\"nw-resize\",\"nwse-resize\",\"oblique\",\"octal\",\"open-quote\",\"optimizeLegibility\",\"optimizeSpeed\",\"oriya\",\"oromo\",\"outset\",\"outside\",\"outside-shape\",\"overlay\",\"overline\",\"padding\",\"padding-box\",\"painted\",\"page\",\"paused\",\"persian\",\"perspective\",\"plus-darker\",\"plus-lighter\",\"pointer\",\"polygon\",\"portrait\",\"pre\",\"pre-line\",\"pre-wrap\",\"preserve-3d\",\"progress\",\"push-button\",\"radial-gradient\",\"radio\",\"read-only\",\"read-write\",\"read-write-plaintext-only\",\"rectangle\",\"region\",\"relative\",\"repeat\",\"repeating-linear-gradient\",\"repeating-radial-gradient\",\"repeat-x\",\"repeat-y\",\"reset\",\"reverse\",\"rgb\",\"rgba\",\"ridge\",\"right\",\"rotate\",\"rotate3d\",\"rotateX\",\"rotateY\",\"rotateZ\",\"round\",\"row-resize\",\"rtl\",\"run-in\",\"running\",\"s-resize\",\"sans-serif\",\"scale\",\"scale3d\",\"scaleX\",\"scaleY\",\"scaleZ\",\"scroll\",\"scrollbar\",\"scroll-position\",\"se-resize\",\"searchfield\",\"searchfield-cancel-button\",\"searchfield-decoration\",\"searchfield-results-button\",\"searchfield-results-decoration\",\"semi-condensed\",\"semi-expanded\",\"separate\",\"serif\",\"show\",\"sidama\",\"simp-chinese-formal\",\"simp-chinese-informal\",\"single\",\"skew\",\"skewX\",\"skewY\",\"skip-white-space\",\"slide\",\"slider-horizontal\",\"slider-vertical\",\"sliderthumb-horizontal\",\"sliderthumb-vertical\",\"slow\",\"small\",\"small-caps\",\"small-caption\",\"smaller\",\"solid\",\"somali\",\"source-atop\",\"source-in\",\"source-out\",\"source-over\",\"space\",\"spell-out\",\"square\",\"square-button\",\"start\",\"static\",\"status-bar\",\"stretch\",\"stroke\",\"sub\",\"subpixel-antialiased\",\"super\",\"sw-resize\",\"symbolic\",\"symbols\",\"table\",\"table-caption\",\"table-cell\",\"table-column\",\"table-column-group\",\"table-footer-group\",\"table-header-group\",\"table-row\",\"table-row-group\",\"tamil\",\"telugu\",\"text\",\"text-bottom\",\"text-top\",\"textarea\",\"textfield\",\"thai\",\"thick\",\"thin\",\"threeddarkshadow\",\"threedface\",\"threedhighlight\",\"threedlightshadow\",\"threedshadow\",\"tibetan\",\"tigre\",\"tigrinya-er\",\"tigrinya-er-abegede\",\"tigrinya-et\",\"tigrinya-et-abegede\",\"to\",\"top\",\"trad-chinese-formal\",\"trad-chinese-informal\",\"translate\",\"translate3d\",\"translateX\",\"translateY\",\"translateZ\",\"transparent\",\"ultra-condensed\",\"ultra-expanded\",\"underline\",\"up\",\"upper-alpha\",\"upper-armenian\",\"upper-greek\",\"upper-hexadecimal\",\"upper-latin\",\"upper-norwegian\",\"upper-roman\",\"uppercase\",\"urdu\",\"url\",\"var\",\"vertical\",\"vertical-text\",\"visible\",\"visibleFill\",\"visiblePainted\",\"visibleStroke\",\"visual\",\"w-resize\",\"wait\",\"wave\",\"wider\",\"window\",\"windowframe\",\"windowtext\",\"words\",\"x-large\",\"x-small\",\"xor\",\"xx-large\",\"xx-small\",\"bicubic\",\"optimizespeed\",\"grayscale\",\"row\",\"row-reverse\",\"wrap\",\"wrap-reverse\",\"column-reverse\",\"flex-start\",\"flex-end\",\"space-between\",\"space-around\", \"unset\"];\n\n  var wordOperatorKeywords_ = [\"in\",\"and\",\"or\",\"not\",\"is not\",\"is a\",\"is\",\"isnt\",\"defined\",\"if unless\"],\n      blockKeywords_ = [\"for\",\"if\",\"else\",\"unless\", \"from\", \"to\"],\n      commonAtoms_ = [\"null\",\"true\",\"false\",\"href\",\"title\",\"type\",\"not-allowed\",\"readonly\",\"disabled\"],\n      commonDef_ = [\"@font-face\", \"@keyframes\", \"@media\", \"@viewport\", \"@page\", \"@host\", \"@supports\", \"@block\", \"@css\"];\n\n  var hintWords = tagKeywords_.concat(documentTypes_,mediaTypes_,mediaFeatures_,\n                                      propertyKeywords_,nonStandardPropertyKeywords_,\n                                      colorKeywords_,valueKeywords_,fontProperties_,\n                                      wordOperatorKeywords_,blockKeywords_,\n                                      commonAtoms_,commonDef_);\n\n  function wordRegexp(words) {\n    words = words.sort(function(a,b){return b > a;});\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  function keySet(array) {\n    var keys = {};\n    for (var i = 0; i < array.length; ++i) keys[array[i]] = true;\n    return keys;\n  }\n\n  function escapeRegExp(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n  }\n\n  CodeMirror.registerHelper(\"hintWords\", \"stylus\", hintWords);\n  CodeMirror.defineMIME(\"text/x-styl\", \"stylus\");\n});\n"]}